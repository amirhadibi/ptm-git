{"version":3,"sources":["/Users/Prince/Projects/ptm-front/src/$_lazy_route_resource lazy","/Users/Prince/Projects/ptm-front/src/app/alert-component/alert.component.html","/Users/Prince/Projects/ptm-front/src/app/alert-component/alert.component.ts","/Users/Prince/Projects/ptm-front/src/app/alert-component/alert.service.ts","/Users/Prince/Projects/ptm-front/src/app/app.component.html","/Users/Prince/Projects/ptm-front/src/app/app.component.ts","/Users/Prince/Projects/ptm-front/src/app/app.module.ts","/Users/Prince/Projects/ptm-front/src/app/appsettings.ts","/Users/Prince/Projects/ptm-front/src/app/buttons-component/saveButton.component.html","/Users/Prince/Projects/ptm-front/src/app/buttons-component/saveButton.component.ts","/Users/Prince/Projects/ptm-front/src/app/chartList-component/chartList.service.ts","/Users/Prince/Projects/ptm-front/src/app/css/app.component.scss","/Users/Prince/Projects/ptm-front/src/app/dialogs/confirmationDlg.html","/Users/Prince/Projects/ptm-front/src/app/dialogs/confirmationDlg.ts","/Users/Prince/Projects/ptm-front/src/app/dialogs/saveDlg.html","/Users/Prince/Projects/ptm-front/src/app/dialogs/saveDlg.ts","/Users/Prince/Projects/ptm-front/src/app/documentDetails-component/document-details.service.ts","/Users/Prince/Projects/ptm-front/src/app/documentDetails-component/documentDetails.component.html","/Users/Prince/Projects/ptm-front/src/app/documentDetails-component/documentDetails.component.ts","/Users/Prince/Projects/ptm-front/src/app/documentDetails-component/panel-documentDetails.component.html","/Users/Prince/Projects/ptm-front/src/app/documentDetails-component/panel-documentDetails.component.ts","/Users/Prince/Projects/ptm-front/src/app/documentList-component/document-list.service.ts","/Users/Prince/Projects/ptm-front/src/app/documentList-component/documentList.component.html","/Users/Prince/Projects/ptm-front/src/app/documentList-component/documentList.component.ts","/Users/Prince/Projects/ptm-front/src/app/documentList-component/panel-documentList.component.html","/Users/Prince/Projects/ptm-front/src/app/documentList-component/panel-documentList.component.ts","/Users/Prince/Projects/ptm-front/src/app/home-component/home.component.html","/Users/Prince/Projects/ptm-front/src/app/home-component/home.component.ts","/Users/Prince/Projects/ptm-front/src/app/list-component/list.component.css","/Users/Prince/Projects/ptm-front/src/app/list-component/list.component.html","/Users/Prince/Projects/ptm-front/src/app/list-component/list.component.ts","/Users/Prince/Projects/ptm-front/src/app/list-component/mappedList.component.html","/Users/Prince/Projects/ptm-front/src/app/list-component/mappedList.component.scss","/Users/Prince/Projects/ptm-front/src/app/list-component/mappedList.component.ts","/Users/Prince/Projects/ptm-front/src/app/material.module.ts","/Users/Prince/Projects/ptm-front/src/app/navbar-component/navbar.component.html","/Users/Prince/Projects/ptm-front/src/app/navbar-component/navbar.component.ts","/Users/Prince/Projects/ptm-front/src/app/properties-component/properties.component.html","/Users/Prince/Projects/ptm-front/src/app/properties-component/properties.component.ts","/Users/Prince/Projects/ptm-front/src/app/properties-component/properties.service.ts","/Users/Prince/Projects/ptm-front/src/app/ptm-component/ptm.component.html","/Users/Prince/Projects/ptm-front/src/app/ptm-component/ptm.component.ts","/Users/Prince/Projects/ptm-front/src/app/red-component/red-component.css","/Users/Prince/Projects/ptm-front/src/app/red-component/red-component.html","/Users/Prince/Projects/ptm-front/src/app/red-component/red-component.ts","/Users/Prince/Projects/ptm-front/src/app/shared/spinner.service.ts","/Users/Prince/Projects/ptm-front/src/app/splitter-component/splitBehaviour.directive.ts","/Users/Prince/Projects/ptm-front/src/app/splitter-component/splitContainer.component.ts","/Users/Prince/Projects/ptm-front/src/app/splitter-component/splitter.component.ts","/Users/Prince/Projects/ptm-front/src/app/toolBar-component/toolBar.component.html","/Users/Prince/Projects/ptm-front/src/app/toolBar-component/toolBar.component.ts","/Users/Prince/Projects/ptm-front/src/app/topPanel-component/topPanel.component.html","/Users/Prince/Projects/ptm-front/src/app/topPanel-component/topPanel.component.ts","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeView.component.html","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeView.component.ts","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewAccountDlg.component.html","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewAccountDlg.component.ts","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatch.component.html","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatch.component.scss","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatch.component.ts","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatchedDlg.component.html","/Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatchedDlg.component.ts","/Users/Prince/Projects/ptm-front/src/environments/environment.ts","/Users/Prince/Projects/ptm-front/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div md-dialog-content  [style.fontSize.px]=\\\"15\\\">\\n  <mat-label> {{alertMessage}} </mat-label>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/alert-component/alert.component.html\n// module id = ../../../../../src/app/alert-component/alert.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { MatDialog, MatInput, MatDialogConfig } from '@angular/material';\nimport { AlertService } from './alert.service';\n\n@Component({\n  selector: 'alert',\n  templateUrl: './alert.component.html',\n})\nexport class AlertDialog {\n  constructor(private _alertService: AlertService, private dialog: MatDialog) {\n    //console.log(\"I'm in alarm.constructor !!!\")\n    this.alertMessage = this._alertService.getSelectedMessageText();\n  }\n\n  public alertMessage:string;\n\n  private openDialog() {\n    const settings: MatDialogConfig = {\n      //width: '25vw',\n      //height: '13vh',\n      role: 'alertdialog'\n    }\n    const dialogRef = this.dialog.open(AlertDialog, settings)\n/*\n    let dialogRef = this.dialog.open(AlertDialog, {\n      width: '350px',\n      height: '100px',\n      data: {},\n    });  \n*/\n  }\n\n  public showAlert(aMessage: string) {\n    //console.log(\"I'm in alert.componen.showAlert and here is the alert messasge: \"+aMessage);\n    this._alertService.setSelectedMessageText(aMessage);\n    this.openDialog();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/alert-component/alert.component.ts","import {Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map'; // this is necessary\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class AlertService {\n\n    public selectedMessageText: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n\n    public setSelectedMessageText(newText: string) {\n        //console.log(\"I'm in alert.service.ts setSelectedExtractedText: \" + newText);\n        this.selectedMessageText.next(newText);\n    }\n\n    public getSelectedMessageText() {\n        //console.log(\"I'm in alert.service.ts getSelectedMessageText: \" + this.selectedMessageText.getValue());\n        return this.selectedMessageText.getValue();\n    }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/alert-component/alert.service.ts","module.exports = \"<router-outlet>\\n  <span *ngIf=\\\"showLoader\\\" class=\\\"loading\\\"></span>\\n</router-outlet>\\n\\n<ptm-frontend></ptm-frontend>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit} from '@angular/core';\nimport { SpinnerService } from './shared/spinner.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./css/app.component.scss'],\n})\nexport class AppComponent implements OnInit { \n  showLoader: boolean;\n\n  constructor(private spinnerService: SpinnerService) {}\n\n  ngOnInit() {\n    //Inject loader service inside app.component.ts to show or hide loader\n    this.spinnerService.status.subscribe((val: boolean) => {\n      this.showLoader = val;\n    });\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/app.component.ts","//import './polyfills';\nimport { AppComponent } from \"./app.component\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Router, Route, RouterModule, Routes } from '@angular/router';\n\n//angular-tree:\n/*\nimport { AppComponent } from './app.component';\nimport { BasicTreeComponent } from './basicTree-component/basicTree.component';\nimport { FullTreeComponent } from './fullTree-component/fullTree.component';\nimport { TemplatesComponent } from './templates/templates.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { BalanceSheetTreeComponent } from './bsTree-component/bsTree.component';\nimport { TreeModel } from 'angular-tree-component';\nimport { TreeModule } from 'angular-tree-component';\n*/\n\n//ng2-tree:\n//import { TreeModule } from 'ng2-tree';\n//import { ngTreeComponent } from './ngTree-component/ngTree.component';\n\n\n//ag-grid:\nimport \"ag-grid-enterprise\"; // only necessary if you're using ag-Grid-Enterprise features\nimport {AgGridModule} from \"ag-grid-angular\";\nimport { RedComponent } from \"./red-component/red-component\";\n\n//integralUI:\nimport { IntegralUIModule } from 'integralui/integralui.module';\n\n//cdk/material components:\nimport 'hammerjs';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport { MATERIAL_SANITY_CHECKS } from '@angular/material';\nimport { MaterialModule } from './material.module';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n//test components:\n//import { ModalModule } from '../modal/index';\n//import { DialogDataExample, DialogDataExampleDialog } from './dialog-component/dialog.component';\n//import { ModalButton } from './modal-content-component/modal-button';\n//import { TreeViewEditingSample } from \"./treeView-component/treeView-editing\"\n//import { ContextMenuComponent } from \"./contextMenu-component/contextMenu.component\"\n//import { ChartListComponent } from './chartList-component/chartList.component';\n//import { TreeViewTestComponent } from \"./treeView-component/treeViewTest.component\"\n//import { TreeGridFilterComponent } from \"./treeGrid-component/treeGridFilter.component\"\n//import { TreeGridTestComponent } from \"./treeGrid-component/treeGridTest.component\"\n\n//splitter components:\nimport { SplitContainerComponent } from './splitter-component/splitContainer.component';\nimport { SplitBehaviourDirective } from './splitter-component/splitBehaviour.directive';\nimport { SplitterComponent } from './splitter-component/splitter.component';\n\n//ptm components:\nimport { NavbarComponent } from './navbar-component/navbar.component';\nimport { PTMComponent } from './ptm-component/ptm.component';\nimport { HomeComponent } from './home-component/home.component';\nimport { PanelDocumentListComponent } from './documentList-component/panel-documentList.component';\nimport { DocumentListComponent } from './documentList-component/documentList.component';\nimport { PanelDocumentDetailsComponent } from './documentDetails-component/panel-documentDetails.component';\nimport { DocumentDetailsComponent } from './documentDetails-component/documentDetails.component';\nimport { ToolbarComponent } from './toolBar-component/toolBar.component';\nimport { TopPanelComponent } from './topPanel-component/topPanel.component'\nimport { ListComponent } from \"./list-component/list.component\"\nimport { MappedListComponent } from \"./list-component/mappedList.component\"\nimport { SaveButtonComponent } from \"./buttons-component/saveButton.component\"\nimport { TreeViewComponent } from \"./treeView-component/treeView.component\"\nimport { TreeViewMatchedComponent } from \"./treeView-component/treeViewMatch.component\"\n\n\n//Dialogs:\nimport { AlertDialog } from './alert-component/alert.component';\nimport { PropertiesDialog } from './properties-component/properties.component';\nimport { TreeViewAccountDialog } from './treeView-component/treeViewAccountDlg.component';\nimport { TreeViewMatchedDialog } from './treeView-component/treeViewMatchedDlg.component';\nimport { SaveDialog } from './dialogs/saveDlg';\nimport { ConfirmDialog } from './dialogs/confirmationDlg';\n\n\n//Services:\nimport { SpinnerService } from './shared/spinner.service';\nimport { documentListService } from \"./documentList-component/document-list.service\";\nimport { documentDetailsService } from \"./documentDetails-component/document-details.service\";\nimport { ChartListService } from \"./chartList-component/chartList.service\";\nimport { PropertiesService } from \"./properties-component/properties.service\";\nimport { AlertService } from './alert-component/alert.service';\n\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nexport const ROUTES: Routes = [\n  {path: '', component: HomeComponent },\n\n  {path: 'home', component: HomeComponent},\n\n  {path: 'documents', component: PanelDocumentListComponent},\n\n  { \n    path: 'details', \n    component: PanelDocumentDetailsComponent,\n    //canActivate: [\"AuthenticationGuard\"],\n    //runGuardsAndResolvers: \"always\",\n  }\n  //{path: 'treeGrid', component: TreeGridTestComponent},\n  //{path: 'treeView', component: TreeViewTestComponent},\n  //{path: 'chart', component: TreeViewEditingSample},\n  //{path: 'chart', component: ChartListComponent},\n  //{path: 'modal', component: ModalButton},\n  //{path: 'dialog', component: DialogDataExample},\n  //{path: 'contextMenu', component: ContextMenuComponent},\n\n];\n\n@NgModule({\n  // For any component loaded into a dialog, you must include your component class in the list of entryComponents \n  //in your NgModule definition so that the Angular compiler knows to create the ComponentFactory for it.\n  entryComponents: [ AlertDialog, PropertiesDialog, TreeViewAccountDialog, TreeViewMatchedDialog, SaveDialog, ConfirmDialog, SplitterComponent ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  declarations: [\n    AppComponent,\n    RedComponent,\n    NavbarComponent,\n    PTMComponent,\n    HomeComponent,\n    PanelDocumentListComponent,\n    DocumentListComponent,\n    PanelDocumentDetailsComponent,\n    DocumentDetailsComponent,\n    ToolbarComponent,\n    ListComponent,\n    MappedListComponent,\n    SaveButtonComponent,\n    TreeViewComponent,\n    TopPanelComponent,\n    SplitBehaviourDirective,\n    SplitterComponent,\n    SplitContainerComponent,\n    AlertDialog,\n    PropertiesDialog,\n    TreeViewAccountDialog,\n    TreeViewMatchedDialog,\n    SaveDialog,\n    ConfirmDialog,\n    TreeViewMatchedComponent,\n    \n    //TreeViewTestComponent,\n    //Test Components:\n    //ChartListComponent,\n    //TreeViewEditingSample,\n    //ContextMenuComponent,\n    //TreeGridFilterComponent,\n    //TreeGridTestComponent,\n    //ModalModule,\n    \n  ],\n\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTES), \n    //RouterModule.forRoot(ROUTES, {onSameUrlNavigation: \"reload\"}),\n    AgGridModule.withComponents(\n      [RedComponent]),\n    BrowserAnimationsModule,\n    MaterialModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', {enabled: environment.production}),\n    IntegralUIModule,\n  ],\n\n  providers: [\n    SpinnerService,\n    documentListService, \n    documentDetailsService,\n    ChartListService,\n    PropertiesService,\n    AlertService,\n  ],\n\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/app.module.ts","export class AppSettings {\n    // *******************************************************************************************************************\n    // *******************************************************  MySQL API Endpoints: *************************************\n    // *******************************************************************************************************************\n\n    //public static DOC_LIST_API_ENDPOINT='https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/documents';\n    \n    //DocDetails:\n    //public static DOC_DETAILS_API_ENDPOINT='https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/details';\n    //public static COLUMNID_API_ENDPOINT = 'https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/columnid';\n    \n    //Properties:\n    //public static AUDITORS_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/auditors\";\n    //public static CURRENCY_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/currency\";\n    //public static REPORT_TYPES_LIST_API_ENDPOINT = 'https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/reportTypes';\n    //public static MULTIPLIERS_LIST_API_ENDPOINT = 'https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/multipliers';\n    //public static SOURCE_TYPES_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/sourcetypes\";\n    //public static PRINCIPLE_TYPE_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/principletypes\";\n    //public static PPREVIOUS_REPORTS_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/previousReports\";\n    //public static WELLS_PERIODS_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/wellsPeriods\";\n    //public static DOCUMENT_HEADER_LIST_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/documentHeader\";\n    \n    //Chart Tree:\n    //public static COMPANY_ACCOUNT_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/companyaccountorder\";\n    //public static CHART_ACCOUNT_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/chartaccountorder\";\n    //public static CHARTID_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/charttree\";\n    //public static CHART_CODES_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/chartcodes\";\n    //public static CHARTCODE_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/chartcode\";\n    //public static QUARTERLY_CHARTACCOUNT_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/quarterlychartaccountinfo\";\n    //public static ANNUAL_CHARTACCOUNT_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/annualchartaccountinfo\";\n    //public static CHARTACCOUNT_DLG_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/chartaccountdlg\";\n\n    //Save Button:\n    //public static STATUS_API_ENDPOINT = \"https://31l9udm7i6.execute-api.us-east-1.amazonaws.com/prod/status\";\n\n    // *******************************************************************************************************************\n    // *******************************************************  Oracle API Endpoints: ************************************\n    // *******************************************************************************************************************\n\n    //ptmAPI-lookup:\n    public static STATUS_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getDocumentStatus\";\n    public static AUDITORS_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getAuditors\";\n    public static CURRENCY_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getCurrencies\";\n    public static MULTIPLIERS_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getMultipliers\";\n    public static REPORT_TYPES_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getReportTypes\";\n    public static SOURCE_TYPES_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getSourceTypes\";\n    public static PRINCIPLE_TYPE_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getPrincipalTypes\";\n    public static PPREVIOUS_REPORTS_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getPreviousReports\";\n    public static WELLS_PERIODS_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getWellsReports\";\n    public static DOCUMENT_HEADER_LIST_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getDocumentHeader\";\n   \n    //ptmAPI-document:\n    public static DOC_LIST_API_ENDPOINT='https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getDocumentList';\n    public static DOC_DETAILS_API_ENDPOINT='https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getDocumentDetails';\n    public static COLUMNID_API_ENDPOINT = 'https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getColumnID';\n\n    //ptmAPI-chart:\n    public static COMPANY_ACCOUNT_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getCompanyAccountOrder\";\n    public static CHART_ACCOUNT_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getChartAccountOrder\";\n    public static CHARTID_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getChartIDList\";\n    public static CHARTACCOUNT_DLG_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getChartAccountDlg\";\n    public static CHART_CODES_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getChartCodes\";\n    public static CHARTCODE_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getChartCode\";\n    public static QUARTERLY_CHARTACCOUNT_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getQuarterlyChartAccount\";\n    public static ANNUAL_CHARTACCOUNT_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getAnnualChartAccount\";\n\n    //ptmAPI-save:\n    public static VALUEORDER_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/getDocumentValueOrder\";\n    public static SAVE_DETAILS_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/saveDocumentDetails\";\n    public static SAVE_HEADER_API_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/saveDocumentHeader\";\n    \n    public static DELETE_VALUE_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/deleteValue\";\n    public static INSERT_VALUE_ENDPOINT = \"https://hwx6j9uei8.execute-api.us-east-1.amazonaws.com/beta/insertValue\";\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/appsettings.ts","module.exports = \"<button \\n    mat-raised-button color=\\\"primary\\\" \\n    (click)=\\\"onClick()\\\" cdkFocusInitial \\n>OK</button>  \\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/buttons-component/saveButton.component.html\n// module id = ../../../../../src/app/buttons-component/saveButton.component.html\n// module chunks = main","import { Component, EventEmitter, Output } from '@angular/core';\nimport { documentDetailsService } from '../documentDetails-component/document-details.service';\n\n@Component({\n    selector: 'saveButton',\n    templateUrl: './saveButton.component.html',\n})\n\nexport class SaveButtonComponent {\n    @Output() alertEvent = new EventEmitter();\n    @Output() closeEvent = new EventEmitter();\n\n    public gMessage: string='';  \n\n    constructor(private _docDetailsService: documentDetailsService) {}\n        \n    showAlert(aMessage: string) {\n        this.gMessage = aMessage;\n        this.alertEvent.emit(null);\n    }\n\n    onClick() {\n        let vStatus = this._docDetailsService.getSelectedStatus();\n        let vDocID = this._docDetailsService.selectedDocID;\n        console.log(\"onClick in SaveButton,ts => \" + vDocID + \" => \" + vStatus);\n        \n        switch(vStatus.trim()) { \n            case \"\": {\n                this.showAlert('You need to choose a status!');\n                break;\n            }\n            case \"0\": {\n                console.log(\"0 => \" + vDocID + \" => \" + vStatus);\n                if (vDocID >= 15000000) \n                    this.showAlert('Cannot save a XBRL document as TOPROCESS!');\n                else \n                    this.closeEvent.emit();\n                break;\n            }\n            case \"5\": {\n                if (vDocID >= 15000000) \n                    this.showAlert('Need to check if user has performed the Equalize Period function!');\n                else \n                    this.closeEvent.emit();\n                break;\n            }\n            default: {\n                this.closeEvent.emit(null);\n                break;            \n            }\n        }\n        \n    }\n\n}\n\n    \n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/buttons-component/saveButton.component.ts","import {Injectable} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map'; // this is necessary\nimport { AppSettings } from '../appsettings';\n\n@Injectable()\nexport class ChartListService {\n    public chartData: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    public selectedChartCode: string;\n    public selectedMapCode: string;\n    public selectedLiteral: string;\n    public selectedOrderLink: number;\n    public selectedAmount: number;\n    \n    constructor(public http:Http, ) {\n    }\n\n    \n    public getChartAccountDlgData(chartCode, formCode: string) {\n        //console.log('getChartAccountDlgData: ' + chartCode + formCode);\n        const endpoint = AppSettings.CHARTACCOUNT_DLG_API_ENDPOINT + \n                \"?CHARTCODE=\" + chartCode + \n                \"&FORMCODE=\"+formCode;     \n        //console.log('Chart endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getChartAccountData(cn: number, chartCode, type, formCode: string) {\n        //console.log('Get chart list for: ' + cn + chartCode + type + formCode);\n        const endpoint = AppSettings.CHART_ACCOUNT_API_ENDPOINT + \n                \"?COMPNUMBER=\" + cn + \n                \"&CHARTCODE=\" + chartCode + \n                //\"&ACCOUNTTYPECODE=\"+ type + //mySQL\n                \"&TYPECODE=\"+ type +\n                \"&FORMCODE=\"+formCode;  \n    \n        //console.log('Chart endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getCompanyAccountData(cn: number, chartCode, type, formCode: string) {\n        //console.log('Get chart list for: ' + cn + chartCode + type + formCode);\n        const endpoint = AppSettings.COMPANY_ACCOUNT_API_ENDPOINT + \n                \"?COMPNUMBER=\" + cn + \n                \"&CHARTCODE=\" + chartCode + \n                //\"&ACCOUNTTYPECODE=\"+ type + //mySQL\n                \"&TYPECODE=\"+ type +\n                \"&FORMCODE=\"+formCode;  \n\n        //console.log('Chart endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getAnnualChartAccountData(cn: number, chartCode: string, orderLink: number) {\n        //console.log('Get chart list for: ' + cn + chartCode + type + formCode);\n        const endpoint = AppSettings.ANNUAL_CHARTACCOUNT_API_ENDPOINT + \n                \"?COMPNUMBER=\" + cn + \n                \"&CHARTCODE=\" + chartCode + \n                \"&ORDERLINK=\"+ orderLink;  \n    \n        //console.log('Chart endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getQuarterlyChartAccountData(cn: number, chartCode: string, orderLink: number) {\n        //console.log('Get chart list for: ' + cn + chartCode + type + formCode);\n        const endpoint = AppSettings.QUARTERLY_CHARTACCOUNT_API_ENDPOINT + \n                \"?COMPNUMBER=\" + cn + \n                \"&CHARTCODE=\" + chartCode + \n                \"&ORDERLINK=\"+ orderLink;  \n    \n        //console.log('Chart endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getChartIDs(cn: number, chartCode, type, formCode: string) {\n        //console.log('cls.getChartIDs for: ' + cn + \", \" + chartCode + \", \" + type + \", \" + formCode);\n        if ((cn>0) && (chartCode) && (type) && (formCode)) {\n            \n            const endpoint = AppSettings.CHARTID_API_ENDPOINT + \n                \"?COMPNUMBER=\" + cn + \n                \"&CHARTCODE=\" + chartCode + \n                //\"&ACCOUNTTYPECODE=\"+ type + //mySQL\n                \"&TYPECODE=\"+ type + \n                \"&FORMCODE=\"+formCode;  \n            //console.log('Chart endpoint: ' + endpoint);\n            return this.http.get(endpoint).map((res:Response) => res.json());\n            \n        }\n        else {\n            console.log(\"WARNING: Parameter list of cls.getChartIDs is not complete !!!\");\n        } \n    }\n\n    public getChartCodes() {\n        //console.log('Get chart ID list for: ' + cn + chartCode + type + formCode);\n        const endpoint = AppSettings.CHART_CODES_API_ENDPOINT;  \n    \n        //console.log('Chart endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getChartCode(){\n        return this.selectedChartCode;\n    }\n\n    public getMapCode(){\n        return this.selectedMapCode;\n    }\n\n    public getLiteral(){\n        return this.selectedLiteral;\n    }\n\n    public getAmountl(){\n        return this.selectedAmount;\n    }\n\n    public setChartCode(code: string) {\n        this.selectedChartCode = code;        \n    }\n\n    public setMapCode(code: string) {\n        //console.log('setMapCode: ' + code);\n        this.selectedMapCode = code;        \n    }\n\n    public setLiteral(text: string) {\n        //console.log('setMapCode: ' + text);\n        this.selectedLiteral = text;        \n    }\n\n    public setAmount(amount: number) {\n        //console.log('setMapCode: ' + text);\n        this.selectedAmount = amount;        \n    }\n\n    public getOrderLink(){\n        return this.selectedOrderLink;\n    }\n\n    public setOrderLink(orderLink: number) {\n        this.selectedOrderLink = orderLink;        \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/chartList-component/chartList.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@import url(\\\"https://fonts.googleapis.com/css?family=Montserrat|Open+Sans\\\");\\n/**************************************************************************/\\n/***************************** Home Screen ********************************/\\n/**************************************************************************/\\ndiv.container {\\n  width: 100%;\\n  /*border: 1px solid gray;*/ }\\nheader, footer {\\n  padding: 1em;\\n  color: white;\\n  background-color: #4b4747;\\n  clear: left;\\n  text-align: center;\\n  border-radius: 5px; }\\narticle {\\n  /*margin-left: 170px;\\n  border-left: 1px solid gray;*/\\n  margin-right: 50px;\\n  margin-left: 50px;\\n  padding: 1em;\\n  font-weight: 600;\\n  font-size: 14px;\\n  /*overflow: hidden;*/ }\\n/**************************************************************************/\\n/************ cell style ***************/\\n/**************************************************************************/\\n.ag-theme-fresh .classGreen {\\n  color: green; }\\n.ag-theme-fresh .classRed {\\n  color: red; }\\n.classPink {\\n  color: #f124b4; }\\n.classGrey {\\n  color: grey; }\\n.classOrange {\\n  color: Orange; }\\n.classBlue {\\n  color: blue; }\\n.rag-red {\\n  background-color: lightcoral; }\\n.rag-green {\\n  background-color: lightgreen; }\\n.rag-amber {\\n  background-color: lightsalmon; }\\n.rag-red-outer .rag-element {\\n  background-color: lightcoral; }\\n.rag-green-outer .rag-element {\\n  background-color: lightgreen; }\\n.rag-amber-outer .rag-element {\\n  background-color: lightsalmon; }\\n.actual {\\n  background-color: rgba(0, 255, 0, 0.1); }\\n.budget {\\n  background-color: rgba(255, 0, 0, 0.1); }\\n.negative {\\n  color: red; }\\n.rightAlign {\\n  text-align: right; }\\n/**************************************************************************/\\n/************ Modal ***************/\\n/**************************************************************************/\\n/* Specific Modal Styles */\\n.modal-dialog {\\n  color: #424141;\\n  background-color: #c2bdbd;\\n  padding: 25px; }\\n.modal.in {\\n  display: initial; }\\n.modal-header {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding-bottom: 14px; }\\n.modal-header > h2 {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1; }\\n.modal-header .close {\\n    background-color: #fff;\\n    font-weight: 100;\\n    font-size: 2.5rem;\\n    border: 0;\\n    border-radius: 999px;\\n    padding: 0;\\n    margin: 0;\\n    line-height: 1rem;\\n    height: 4rem;\\n    width: 4rem; }\\n.modal-header .close:hover {\\n      background-color: #ccc; }\\n/* /Specific Modal Styles */\\nhtml, body {\\n  font-family: 'Open Sans', sans-serif;\\n  font-size: 12px;\\n  color: #444;\\n  background: #f0f5f7;\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  height: 100%; }\\nbutton {\\n  cursor: pointer;\\n  font-family: 'Open Sans', sans-serif;\\n  -webkit-transition: .2s all;\\n  transition: .2s all; }\\nbutton:focus {\\n    outline: none; }\\nbutton.big {\\n  color: #333131;\\n  border: 0;\\n  border-radius: 4px;\\n  font-size: 16px;\\n  width: 10%;\\n  height: 0px;\\n  padding: 1rem 1rem 2rem 1rem;\\n  background-color: silver; }\\nbutton.big + button.big {\\n    margin-left: 10px; }\\nbutton.big:hover {\\n    background-color: #e4e4e4; }\\nbutton.small {\\n  color: #333131;\\n  border: 0;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  width: 5%;\\n  height: 0px;\\n  padding: 0.25rem 0.25rem 1.2rem 0.25rem;\\n  background-color: silver; }\\nbutton.small + button.small {\\n    margin-left: 10px; }\\nbutton.small:hover {\\n    background-color: #e4e4e4; }\\nh1, h2 {\\n  font-family: 'Ariel', sans-serif;\\n  font-weight: 200; }\\nh1 {\\n  padding: 30px;\\n  margin: 0; }\\n#content {\\n  height: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n#actions {\\n  margin-top: -100px;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n/**************************************************************************/\\n/************  Spinner ************/\\n/**************************************************************************/\\n/* Absolute Center Spinner */\\n.loading {\\n  position: fixed;\\n  z-index: 999;\\n  height: 2em;\\n  width: 2em;\\n  overflow: show;\\n  margin: auto;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0; }\\n/* Transparent Overlay */\\n.loading:before {\\n  content: '';\\n  display: block;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.3); }\\n/* :not(:required) hides these rules from IE9 and below */\\n.loading:not(:required) {\\n  /* hide \\\"loading...\\\" text */\\n  font: 0/0 a;\\n  color: transparent;\\n  text-shadow: none;\\n  background-color: transparent;\\n  border: 0; }\\n.loading:not(:required):after {\\n  content: '';\\n  display: block;\\n  font-size: 10px;\\n  width: 1em;\\n  height: 1em;\\n  margin-top: -0.5em;\\n  -webkit-animation: spinner 1500ms infinite linear;\\n  animation: spinner 1500ms infinite linear;\\n  border-radius: 0.5em;\\n  -webkit-box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.5) -1.5em 0 0 0, rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;\\n  box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) -1.5em 0 0 0, rgba(0, 0, 0, 0.75) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0; }\\n/* Animation */\\n@-webkit-keyframes spinner {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg); } }\\n@keyframes spinner {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg); } }\\n/**************************************************************************/\\n/************  Top Navigator  *******************/\\n/**************************************************************************/\\n/* Add a black background color to the top navigation */\\n.topnav {\\n  background-color: black; }\\n/* Style the links inside the navigation bar */\\n.topnav a {\\n  float: left;\\n  display: block;\\n  color: #f2f2f2;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n  font-size: 17px; }\\n/* Change the color of links on hover */\\n.topnav a:hover {\\n  color: grey; }\\n/* Add a color to the active/current link */\\n.topnav a.active {\\n  background-color: grey;\\n  color: white; }\\n.navbar {\\n  margin-bottom: 0; }\\n/**************************************************************************/\\n/************  Hoverable Dropdown  *******************/\\n/**************************************************************************/\\n#props {\\n  width: 50%;\\n  height: 35px;\\n  margin-top: 15px;\\n  outline: none;\\n  font-size: 13px; }\\n.dropbtn {\\n  background-color: rgba(128, 128, 128, 0);\\n  color: rgba(255, 255, 255, 0.56);\\n  padding: 16px;\\n  font-size: 16px;\\n  border: none;\\n  cursor: pointer; }\\n.dropdown {\\n  position: relative;\\n  display: inline-block; }\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  min-width: 160px;\\n  -webkit-box-shadow: 0px 8px 16px 0px grey;\\n          box-shadow: 0px 8px 16px 0px grey;\\n  z-index: 1;\\n  font-size: 13px; }\\n.dropdown-content a {\\n  color: black;\\n  padding: 6px 16px;\\n  text-decoration: none;\\n  display: block; }\\n.dropdown-content a:hover {\\n  background-color: #C5C2C2; }\\n.dropdown:hover .dropdown-content {\\n  display: block;\\n  color: white; }\\n.dropdown:hover .dropbtn {\\n  background-color: black;\\n  color: white; }\\n/**************************************************************************/\\n/****************************** Panels ************************************/\\n/**************************************************************************/\\n.headerContainer {\\n  float: left;\\n  margin-top: 1px;\\n  margin-left: 15px;\\n  font-size: 14px; }\\n.cellContainer {\\n  width: 33%;\\n  float: left;\\n  margin-top: 1px;\\n  margin-left: 15px; }\\n.topPanel {\\n  color: black;\\n  height: 10%;\\n  margin-top: 5px;\\n  margin-left: 5px;\\n  background-color: #c0c2ce;\\n  border-radius: 5px;\\n  min-width: 60%; }\\n.panel-body {\\n  height: 100%;\\n  width: 100%; }\\n.panel-doclist {\\n  border-radius: 15px;\\n  height: 550px;\\n  width: 100%;\\n  resize: both;\\n  overflow-y: hidden; }\\n.panel-docdetails {\\n  border-radius: 15px;\\n  height: 600px;\\n  width: 90%;\\n  resize: both;\\n  overflow-y: hidden;\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  padding-top: 70px; }\\n/**************************************************************************/\\n/****************************** Splitter ************************************/\\n/**************************************************************************/\\n.leftDiv {\\n  height: 100%;\\n  color: black;\\n  padding: 4px; }\\n.rightDiv {\\n  height: 100%;\\n  background-color: #cdcdd4; }\\n/**************************************************************************/\\n/****************************** ag-grid ************************************/\\n/**************************************************************************/\\n/*\\n.ag-cell-focus,.ag-cell-no-focus{\\n    border:none !important;\\n  }\\n\\n.ag-cell:focus{\\n  border:none !important;\\n  outline: none;\\n}\\n*/\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/css/app.component.scss\n// module id = ../../../../../src/app/css/app.component.scss\n// module chunks = main","module.exports = \"<link href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\\\" rel=\\\"stylesheet\\\">\\n\\n<div mat-dialog-content class=\\\"dialog-container\\\"  [style.fontSize.px]=\\\"14\\\">\\n    <!-- <h1 mat-dialog-title>Confirm</h1> -->\\n    <br>\\n    <div md-dialog-content>{{confirmMessage}}</div>\\n</div>\\n<br>\\n<div mat-dialog-actions align=\\\"top\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseConfirm()\\\" >Yes</button>  \\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseCancel()\\\">No</button>  \\n</div>\\n    \\n    \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/dialogs/confirmationDlg.html\n// module id = ../../../../../src/app/dialogs/confirmationDlg.html\n// module chunks = main","import { Component } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n@Component({\n    selector: 'dialog-confirmation',\n    templateUrl: './confirmationDlg.html',\n    styleUrls: ['../css/app.component.scss'],\n})\n  \nexport class ConfirmDialog {\n    public confirmMessage: string;\n\n    constructor(public dialogRef: MatDialogRef<ConfirmDialog>) {}  \n    \n    onCloseConfirm() {\n        this.dialogRef.close('ok');\n    }\n\n    onCloseCancel() {\n        this.dialogRef.close('Cancel');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/dialogs/confirmationDlg.ts","module.exports = \"<link href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\\\" rel=\\\"stylesheet\\\">\\n\\n<div >\\n\\n    <div mat-dialog-content class=\\\"dialog-container\\\"  [style.fontSize.px]=\\\"12\\\">\\n        <mat-form-field style=\\\"width: 400px\\\">\\n            <mat-select placeholder=\\\"Select status\\\" (change)=\\\"onChange($event.value)\\\" [(ngModel)]=\\\"selectedStatus\\\">\\n                <mat-option>None</mat-option>\\n                <mat-option \\n                    style=\\\"width: 400px; font-size: 12px;\\\"\\n                    *ngFor=\\\"let s of status_list\\\" \\n                    [value]=\\\"s.STATUS + ': ' + s.DESCRIPTION + ': ' + s.MNEMONIC\\\">\\n                    {{ s.STATUS }}: {{ s.DESCRIPTION}}: {{ s.MNEMONIC }}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n\\n    </div>\\n\\n    <br><br><br><br>\\n\\n</div>\\n\\n<div>\\n    <alert #alert hidden></alert>\\n    <saveButton #saveButton \\n        (alertEvent)=\\\"alert.showAlert(saveButton.gMessage)\\\"\\n        (closeEvent)=\\\"onCloseConfirm()\\\"\\n    ></saveButton>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseCancel()\\\">Cancel</button>  \\n</div>\\n\\n<!--\\n<div mat-dialog-actions align=\\\"top\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseConfirm()\\\" cdkFocusInitial >OK</button>  \\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseCancel()\\\">Cancel</button>  \\n</div>\\n-->\\n    \\n    \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/dialogs/saveDlg.html\n// module id = ../../../../../src/app/dialogs/saveDlg.html\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n//import {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { documentDetailsService } from \"../documentDetails-component/document-details.service\";\n\n@Component({\n    selector: 'dialog-saveOptions',\n    templateUrl: './saveDlg.html',\n    styleUrls: ['../css/app.component.scss'],\n})\n  \nexport class SaveDialog {\n    public status_list: Array<any> = [];\n    public selectedStatus: string;\n\n    constructor(private _docDetailsService: documentDetailsService, \n        public dialogRef: MatDialogRef<SaveDialog>) {\n\n        this.selectedStatus = \"\";\n        this._docDetailsService.setSelectedStatus(\"\");\n            \n    }  \n\n    public ngAfterViewInit(aToggle: string, aCode: string){\n        this.getStatusList();\n    } \n\n    // to load annual chart account list:\n    public getStatusList() { \n        //let vSelectedStatus: string=\"\";\n        //console.log('I am in getStatusList()!');\n        this._docDetailsService.getStatusList().subscribe(\n            // the first argument is a function which runs on success\n            data => { \n                this.status_list = data;\n                //console.log(\"status_list length: \" + this.status_list.length);\n            },\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            () => {}\n        );\n    }\n\n  \n    public onChange(newValue: string) {\n        //console.log(\"newValue **** \" + newValue);\n        if (newValue) {\n            let vString = newValue.split(\":\", 3);\n            //console.log(\"vString **** \" + vString);\n        \n            let vSelectedStatus = vString[0];\n            //console.log('saveDlg.onChange()- Status: ' + vSelectedStatus);\n        \n            this._docDetailsService.setSelectedStatus(vSelectedStatus);     \n        \n        }\n    }\n    \n    onCloseConfirm() {\n        this.dialogRef.close('ok');\n    }\n\n    onCloseCancel() {\n        this.dialogRef.close('Cancel');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/dialogs/saveDlg.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map'; // this is necessary\nimport { Observable } from 'rxjs';\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\nimport { AppSettings } from '../appsettings'\n\n@Injectable()\nexport class documentDetailsService {\n\n    public selectedTitle: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedFormCode: BehaviorSubject<string> = new BehaviorSubject<string>(\"01\");\n    public selectedColumnID: BehaviorSubject<number> = new BehaviorSubject<number>(1);\n    public selectedStatus: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedDocID: number=0;\n    public selectedFormDescription: string;\n    public selectedCompanyName: string;\n    public selectedReportTypeCode: string;\n    public selectedChartCode: string;\n    public selectedLiteral: string;\n    public selectedCompNumber: number;\n    public selectedOrderlink: number;\n    public selectedMapcode: number;\n    \n    constructor(public http:Http) {\n    }\n\n    private setFormDescription(description: string) {\n        this.selectedFormDescription = description;        \n    }\n\n    public getDocumentDetails() {\n        ////console.log('arrived in service getDocumentDetails !!!');\n        ////console.log('docDetailsService selectedDocumentID: ' + this.selectedDocID);\n        //console.log('dts.getDocumentDetails.selectedFormCode: ' + this.selectedFormCode.getValue());\n        ////console.log('docDetailsService selectedColumnID: ' + this.selectedColumnID.getValue());\n\n        const endpoint = AppSettings.DOC_DETAILS_API_ENDPOINT + \n            \"?COMPNUMBER=\" + this.selectedCompNumber + \n            \"&CHARTCODE=\" + this.selectedChartCode +\n            //\"&ACCOUNTTYPECODE=\"+ this.selectedReportTypeCode + //mySQL\n            \"&TYPECODE=\"+ this.selectedReportTypeCode +\n            //\"&DOCUMENTID=\" + this.selectedDocID + //mySQL\n            \"&DOCID=\" + this.selectedDocID +\n            \"&FORMCODE=\" + this.selectedFormCode.getValue()\n\n        if (this.selectedDocID > 0) {\n            //console.log('DocDetails endpoint: ' + endpoint);\n            return this.http.get(endpoint).map((res:Response) => res.json());\n        }\n        else {\n            //console.log('docDetailsService selectedDocumentID <= 0 !!!');\n            return null;\n        }\n    }\n\n    public getColumnIDs() {\n        //console.log('docDetailsService selectedDocumentID: ' + this.selectedDocID);\n        //console.log('dts.getColumnIDs.selectedFormCode: ' + this.selectedFormCode.getValue());\n        //console.log('docDetailsService selectedColumnID: ' + this.selectedColumnID.getValue());\n\n        const endpoint = \n            //AppSettings.COLUMNID_API_ENDPOINT + \"?DOCUMENTID=\" + this.selectedDocID + \"&FORM=\" + this.selectedFormCode.getValue(); //mySQL\n            AppSettings.COLUMNID_API_ENDPOINT + \"?DOCID=\" + this.selectedDocID + \"&FORMCODE=\" + this.selectedFormCode.getValue();\n        \n        if (this.selectedDocID > 0) {\n            //console.log('endpoint: ' + endpoint);\n            return this.http.get(endpoint).map((res:Response) => res.json());\n        }\n        else {\n            return null;\n        }\n    }\n\n    public getNumberOfPeriods(aFormCode: any) {\n        //console.log('docDetailsService.aFormCode: ' + aFormCode);\n\n        const endpoint = AppSettings.COLUMNID_API_ENDPOINT + \"?DOCID=\" + this.selectedDocID + \"&FORMCODE=\" + aFormCode;\n        \n        if (this.selectedDocID > 0) {\n            return this.http.get(endpoint).map((res:Response) => res.json());\n        }\n        else {\n            return null;\n        }\n    }\n    \n    public getDocumentValueOrder(aValueOrder: number) {\n        //console.log('dt.getDocumentValueOrder.aValueOrder: ' + aValueOrder);\n\n        const endpoint = AppSettings.VALUEORDER_API_ENDPOINT + \"?DOCID=\" + this.selectedDocID + \"?VALUEORDER=\" + aValueOrder;\n        \n        if (this.selectedDocID > 0) {\n            return this.http.get(endpoint).map((res:Response) => res.json());\n        }\n        else {\n            return null;\n        }\n    }\n\n    public saveDocumentDetails(accountRecords: any[]) {   \n        console.log(\"Saving \" + accountRecords.length + \" records for Document ID: \" + accountRecords[0].doc_id);\n        const path = AppSettings.SAVE_DETAILS_API_ENDPOINT; \n        if (this.selectedDocID > 0) {\n            console.log(\"URL: \" + path);\n            return this.http.post(path, accountRecords).map((res:Response) => res.json());\n        }\n        else return null;\n    }\n    \n    public deleteValue(accountRecords: any[]) {\n           \n        console.log(\"Delete \" + accountRecords.length + \" records for Document ID: \" + accountRecords[0].doc_id);\n                                     \n        console.log(\n            \"docID: \" + accountRecords[0].doc_id \n            + \" status_code: \" + accountRecords[0].status_code\n            + \" form_code: \" + accountRecords[0].form_code\n            + \" comp_number: \" + accountRecords[0].comp_number\n            + \" comp_name: \" + accountRecords[0].comp_name            \n            + \" valueOrder: \" + accountRecords[0].value_order\n            + \" columnID: \" + accountRecords[0].column_id\n            + \" amount: \" + accountRecords[0].amount\n            + \" doubleCounted: \" + accountRecords[0].double_counted\n            + \" noprint: \" + accountRecords[0].no_print\n            + \" literal: \" + accountRecords[0].literal\n            + \" orderlink: \" + accountRecords[0].orderlink\n            + \" mapdode: \" + accountRecords[0].mapcode\n            \n        );\n\n        const path = AppSettings.DELETE_VALUE_ENDPOINT; \n\n        if (this.selectedDocID > 0) {\n            console.log(\"URL: \" + path);\n            return this.http.post(path, accountRecords).map((res:Response) => res.json());\n        }\n        else {\n            return null;\n        }\n        \n    }\n\n    public insertValue(accountRecords: any[]) {\n           \n        console.log(\"Insert \" + accountRecords.length + \" records for Document ID: \" + accountRecords[0].doc_id);\n                                     \n        console.log(\n            \"docID: \" + accountRecords[0].doc_id \n            + \" status_code: \" + accountRecords[0].status_code\n            + \" form_code: \" + accountRecords[0].form_code\n            + \" comp_number: \" + accountRecords[0].comp_number\n            + \" comp_name: \" + accountRecords[0].comp_name            \n            + \" valueOrder: \" + accountRecords[0].value_order\n            + \" columnID: \" + accountRecords[0].column_id\n            + \" amount: \" + accountRecords[0].amount\n            + \" doubleCounted: \" + accountRecords[0].double_counted\n            + \" noprint: \" + accountRecords[0].no_print\n            + \" literal: \" + accountRecords[0].literal\n            + \" orderlink: \" + accountRecords[0].orderlink\n            + \" mapdode: \" + accountRecords[0].mapcode\n            \n        );\n\n        const path = AppSettings.INSERT_VALUE_ENDPOINT; \n\n        if (this.selectedDocID > 0) {\n            console.log(\"URL: \" + path);\n            return this.http.post(path, accountRecords).map((res:Response) => res.json());\n        }\n        else {\n            return null;\n        }\n        \n    }\n\n    public getDocumentID(){\n        return this.selectedDocID;\n    }\n\n    public getColumnID(){\n        return this.selectedColumnID;\n    }\n\n    public getFormID(){\n        return this.selectedFormCode;\n    }\n\n    public getCompanyName(){\n        return this.selectedCompanyName;\n    }\n\n    public getCompNumber(){\n        return this.selectedCompNumber;\n    }\n\n    public getOrderlink(){\n        //console.log(\"docDetailsService.getOrderlink: \" + this.selectedOrderlink)\n        return this.selectedOrderlink;\n    }\n\n    public getMapcode(){\n        //console.log(\"docDetailsService.getMapcode: \" + this.selectedMapcode)\n        return this.selectedMapcode;\n    }\n\n    public getReportTypeCode(){\n        return this.selectedReportTypeCode;\n    }\n\n    public getChartCode(): any{        \n        const endpoint = AppSettings.CHARTCODE_API_ENDPOINT + \"?COMPNUMBER=\" + this.selectedCompNumber;        \n        if (this.selectedCompNumber > 0) {\n            //console.log('dd.getChartCode.endpoint: ' + endpoint);\n            return this.http.get(endpoint).map((res:Response) => res.json());\n        }\n        else {\n            return null;\n        }        \n    }\n\n    public getStatusList(): any{\n        const endpoint = AppSettings.STATUS_API_ENDPOINT;        \n        //console.log('endpoint: ' + endpoint);\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public getTitle() {\n        return(this.selectedTitle);\n    }\n\n    public getSelectedStatus() {\n        //console.log(\"In docDetails.service.ts getSelectedStatus: \" + this.setSelectedStatus.getValue());\n        return this.selectedStatus.getValue();\n    }\n\n    public getSelectedLiteral() {\n        return this.selectedLiteral;\n    }\n\n    public setDocumentDetails(docID: number, formID: string, compName: string, \n            compNumber: number, columnID: number, type: string) {\n        if (docID) this.setDocID(docID);\n        if (formID) this.setFormID(formID); \n        if (compName) this.setCompName(compName);\n        if (compNumber) this.setCompNumber(compNumber);\n        if (columnID) this.setColumnID(columnID);\n        if (type) this.setReportTypeCode(type); \n\n        if (compNumber) this.setChartCode();  \n        if (formID) this.setTitle(formID);   \n        //console.log('dts.setDocumentDetails--> docID: ' + docID + \"Form: \" + formID + \"Type: \" + type);\n    }\n\n    public setDocID(docID: number) {\n        this.selectedDocID = docID;        \n    }\n\n    public setFormID(formID: string) {\n        this.selectedFormCode.next(formID);        \n    }\n\n    public setColumnID(columnID: number) {\n        this.selectedColumnID.next(columnID);        \n    }\n\n    public setCompName(compName: string) {\n        this.selectedCompanyName = compName;        \n    }\n\n    public setCompNumber(compNumber: number) {\n        this.selectedCompNumber = compNumber;        \n    }\n\n    public setOrderlink(orderlink: number) {\n        //console.log(\"docDetailsService.setOrderlink: \" + orderlink)\n        this.selectedOrderlink = orderlink;        \n    }\n\n    public setMapcode(mapcode: number) {\n        //console.log(\"docDetailsService.setMapcode: \" + mapcode)\n        this.selectedMapcode = mapcode;        \n    }\n\n    public setReportTypeCode(type: string) {\n        this.selectedReportTypeCode = type;        \n    }\n\n    public setSelectedLiteral(literal: string) {\n        this.selectedLiteral = literal;        \n    }\n\n    public setChartCode() {\n        let result: any[];\n        let data: any[];\n        this.getChartCode().subscribe(\n            // the first argument is a function which runs on success\n            data => { result = data},\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            () => {\n                if (result[0])\n                    this.selectedChartCode = result[0].CHARTCODE;\n                //console.log(\"dds.setChartCode: \" + this.selectedChartCode);       \n            }\n        );\n        \n}\n\n    public setTitle(formID: string) {\n        //console.log(\"setTitle TypeCode:\" + this.selectedReportTypeCode);\n        switch (formID) {\n            case \"01\":\n                this.setFormDescription('Balance Sheet');\n            break;\n            case \"02\":\n                this.setFormDescription('Income Statement');\n                break;\n            case \"05\":\n            this.setFormDescription('Cash Flow');\n                break;\n            default:\n                this.setFormDescription('Balance Sheet');\n            }\n        this.selectedTitle.next(this.selectedDocID + ' : [' + \n        this.selectedCompNumber + '] ' + \n        this.selectedCompanyName + ' - ' + \n        this.selectedFormDescription + ' (' +      \n        this.selectedReportTypeCode + ')'); \n    }\n\n    public setSelectedStatus(newStatus: any) {\n        this.selectedStatus.next(newStatus);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/documentDetails-component/document-details.service.ts","module.exports = \"<div calss=\\\"topPanel\\\">\\n    <div style=\\\"margin-left:5px; margin-top:2px\\\" class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\n        <button (click)=\\\"fitColumns()\\\" class=\\\"btn btn-primary btn-sm\\\">Size Columns to Fit</button>\\n        <button (click)=\\\"resetColumns()\\\" class=\\\"btn btn-secondary btn-sm\\\">Reset Columns Size</button>\\n<!--\\n        <button (click)=\\\"showLiteral(true)\\\" class=\\\"btn btn-primary btn-sm\\\">Show Literal</button>\\n        <button (click)=\\\"showLiteral(false)\\\" class=\\\"btn btn-secondary btn-sm\\\">Hide Literal</button>\\n        <button (click)=\\\"refreshAll()\\\" class=\\\"btn btn-primary btn-sm\\\">Refresh All</button>\\n-->\\n    </div>\\n\\n<!---\\n    <label>\\n        <input type=\\\"checkbox\\\" (change)=\\\"showToolPanel=$event.target.checked\\\"/>\\n        Show Tool Panel\\n    </label>\\n-->\\n</div>\\n\\n\\n<!---<h1>Simple ag-Grid Angular Example</h1>-->\\n<ag-grid-angular style=\\\"margin-left:5px; margin-top:2px; border-radius: 5px; width: 99%; height: 77%;\\\"\\n    class=\\\"ag-theme-fresh\\\"\\n    rowModelType = \\\"infinite\\\"\\n    rowSelection=\\\"single\\\"\\n\\n    [gridOptions]=\\\"gridOptions\\\"\\n    [showToolPanel]=\\\"showToolPanel\\\"\\n    [domLayout]=\\\"autoheight\\\"\\n    [enableColResize]=\\\"true\\\"\\n    [getContextMenuItems]=\\\"getContextMenuItems\\\"\\n    [rowData]=\\\"rowData\\\"   \\n    [columnDefs]=\\\"columnDefs\\\"\\n    [suppressCellSelection]=\\\"false\\\"\\n    [enableServerSideFilter]=\\\"true\\\"\\n    [enableServerSideSorting]=\\\"false\\\"\\n    \\n    (rowClicked)=\\\"onRowClicked($event)\\\"\\n    (rowSelected)=\\\"onRowSelected($event)\\\"\\n    (gridReady)=\\\"onGridReady($event)\\\"\\n    \\n    >\\n</ag-grid-angular>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/documentDetails-component/documentDetails.component.html\n// module id = ../../../../../src/app/documentDetails-component/documentDetails.component.html\n// module chunks = main","import {Component, EventEmitter, Output} from \"@angular/core\";\nimport {GridOptions} from \"ag-grid\";\n//import {CommonModule}  from '@angular/common'; \n//import {AppSettings} from '../appsettings';\nimport {documentDetailsService} from './document-details.service';\nimport {ChartListService} from '../chartList-component/chartList.service';\nimport {SpinnerService} from '../shared/spinner.service';\nimport 'rxjs/add/operator/map';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { TreeViewMatchedDialog } from '../treeView-component/treeViewMatchedDlg.component'\nimport {ConfirmDialog} from '../dialogs/confirmationDlg';\n//import { RedComponent } from \"../red-component/red-component\";\n\n@Component({\n    selector: 'documentDetails',\n    templateUrl: './documentDetails.component.html',\n    styleUrls: ['../css/app.component.scss'],\n})\n\nexport class DocumentDetailsComponent {\n    //Emits an event using an EventEmitter\n    //@Output() chartEvent = new EventEmitter();\n    @Output() treeEvent = new EventEmitter();\n    @Output() documentHeaderEvent = new EventEmitter();\n    @Output() findChartItemEvent = new EventEmitter();\n    @Output() alertEvent = new EventEmitter();\n\n    //public doc_list; // For testing API Gateway on AWS\n    public gMessage: string='';\n    public gAmountNames: string[] = [];\n    public gRowClicked: number=0;\n    public gColID: any[];\n    public gSelectedChartCode: string = \"\";\n\n    public rowData: any[];\n    public selectedLiteral: string=\"\";\n    public selectedIndex: number=0;\n    public selectedNoPrint: number=0;\n    public selectedRowIndex: number=0;\n    public selectedDoubleCounted: number=0;\n    //public selectedOrderLink: string=\"\";\n    //public selectedMapcode: string=\"\";\n\n    private myOptions: string[] = [\"contains\", \"notContains\", \"equals\", \"startsWith\", \"endsWith\"];\n    private gridColumnApi;\n    private gridOptions: GridOptions;\n    private columnDefs: any[];\n    //private tempRowData: any[];\n    //private doc_id = this.getDocID();\n    //private comp_name = this.getCompName();\n    //private column_id = 0; \n    //private form_id = \"\"; \n\n    constructor(public dialog: MatDialog, private _docDetailsService: documentDetailsService,  private _loaderService: SpinnerService,\n            private _chartListService: ChartListService) {\n        console.log('I am in docDetails constructor()!');\n        // we pass an empty gridOptions in, so we can grab the api out\n        this.gridOptions = <GridOptions>{};\n\n        this.returnColumnIDs().subscribe((val: any) => {    \n            this.gColID = val;\n        });\n\n        //this.createColumnDefs();        \n    }\n        \n    public ngAfterViewInit() {\n        this.getFinancials('01', 'US');\n    }\n\n    // Called in html\n    private onGridReady(params: any) {\n        this.gridColumnApi = params.columnApi;\n        this.gridOptions.api.setColumnDefs(this.columnDefs);\n        this.gridOptions.getRowStyle = this.getRowStyle;\n        //setTimeout(function(){this.getRowStyle,0});\n    }    \n          \n    private createColumnDefs() {\n        console.log('I am in createColumnDefs()!');\n\n        //this._loaderService.display(true);\n        //console.log('Spinner On - columnDef');  \n\n        if (this._docDetailsService.selectedDocID > 0) {\n            //console.log('There is a numberOfColumns.DocID !');\n            this.returnColumnIDs().subscribe(tempColumnIDsData => {\n\n                this.gColID = tempColumnIDsData;\n    \n                let numOfCols = tempColumnIDsData.length;\n                //console.log('Number Of Columns: ' + numOfCols);\n                this.columnDefs = new Array();\n                this.columnDefs.push({\n                    headerName: '', \n                    field: 'selected',\n                    hide: false,\n                    suppressMenu: true,\n                    width: 30,\n                    cellStyle: this.selectedCellColor,\n                    onCellClicked: e => {\n                        this.refreshAll();\n                        if (e.node.data.matched !== 'F') {\n                            if ((e.node.data.amount) || (e.node.data.matched == 'T')) {\n                                if ((e.node.data.compLiteral) || (e.node.data.matched == 'T')) {\n                                    if (e.node.data.selected === \"√\") \n                                        e.node.data.selected = ' ';\n                                    else {\n                                        e.node.data.selected = '√';\n                                    }\n                                }\n                            }\n                            this.refreshAll();\n                        }\n                    },\n                                    \n                });\n                this.columnDefs.push({\n                    hide: true,\n                    headerName: '', \n                    field: 'matched',\n                    suppressMenu: true,\n                    width: 30,\n                    //cellStyle: this.changeCellColor,\n                    //checkboxSelection: true,\n                    /*\n                    cellEditor: 'popupSelect',\n                    cellEditorParams: {\n                        cellRenderer: this.matchedCellRenderer,\n                        values: ['!']\n                    }\n                    */\n                                    \n                });\n                this.columnDefs.push({\n                    headerName: '', \n                    field:'indicator', \n                    suppressMenu: true,\n                    width: 30, \n                    hide: false,\n                    /*\n                    cellStyle: function(params) {\n                        if (params.value === null) {\n                            return {'color': 'Grey'};\n                        }\n                    }, \n                    */\n                });\n                this.columnDefs.push({\n                    field:'literal', headerName: 'Literal', width: 400, editable: true, hide: false,\n                    filter: \"text\", filterParams: {filterOptions: this.myOptions, applyButton: true, clearButton:true},\n                    cellStyle: this.changeCellColor,\n                    //cellRendererFramework: RedComponent,\n                });\n\n                this.columnDefs.push({\n                    field:'doubleCounted', headerName: 'DoubleCounted', hide: true, //cellRenderer: 'dcCellRenderer'\n                });\n\n                this.columnDefs.push({\n                    field:'noPrint', headerName: 'NoPrint', hide: true,\n                });\n\n                this.columnDefs.push({ \n                    suppressMenu: true,\n                    field:'valueOrder', headerName: 'ValueOrder', hide: true,\n                    //sort: { direction: 'asc', priority: 0 },\n                });\n\n                this.columnDefs.push({\n                    field:'wellsLiteral', headerName: 'Wells Literal', hide: true,\n                });\n\n                this.columnDefs.push({\n                    field:'wellsMapcode', headerName: 'Wells Mapcode', hide: true,\n                });\n\n                this.columnDefs.push({\n                    field:'wellsOrderlink', headerName: 'Wells Orderlink', hide: true,\n                });\n\n                this.columnDefs.push({\n                    field:'compLiteral', headerName: 'Company Literal', hide: true,\n                });\n                                        \n                this.columnDefs.push({\n                    field:'mapcode', headerName: 'Mapcode', hide: true,\n                });\n                                        \n                this.columnDefs.push({\n                    field:'orderlink', headerName: 'OrderLink', hide: true,\n                });\n                                        \n                this.columnDefs.push({\n                    field:'amount', headerName: 'amount', hide: true,\n                    /*\n                    cellStyle: function(params) {\n                        if (params.value === null) {\n                            return {'color': 'Grey'};\n                        }\n                    }, \n                    */\n                });\n\n                for (let i=0; i<numOfCols; i++) {\n                    //console.log('Inside the for loop - field: ' + tempColumnIDsData[i].COLUMNID);\n                    this.columnDefs.push({ \n                        //colId: 'amount'+tempColumnIDsData[i].COLUMNID,\n                        field: 'amount'+tempColumnIDsData[i].COLUMNID, \n                        headerName: 'Amount', \n                        editable: true,\n                        cellStyle: this.changeCellColor,\n                        \n                        /*\n                        cellStyle: function(params) {\n                            if (params.value < '0') {\n                                return {'color': 'red'};\n                            }\n                        },\n                        */ \n                                              \n                        filter: 'number', \n                        suppressMenu: true, width: 90,\n                        //cellRenderer: this.percentCellRenderer,\n                        //cellRendererFramework: RedComponent,\n                    });\n                    this.gAmountNames.push('amount'+tempColumnIDsData[i].COLUMNID);\n                    //console.log('AMOUNTS: ' + this.gAmountNames[i]);\n\n                }\n                        \n                //this._loaderService.display(false);\n                //console.log('Spinner Off - columnDef-selectedDocID>0');\n            \n            });\n        }\n        else {\n            //this._loaderService.display(false);\n            //console.log('Spinner Off - columnDef-selectedDocID<=0');    \n        }\n    }       \n    \n    private changeCellColor(params) {\n        if (params.node.data) {\n            if(params.node.data.matched === \"T\") {\n                return {'color': 'orange'};    \n            }\n            else if (params.node.data.matched === \"F\")  {\n                return {'color': 'red'};    \n            }     \n            else if ((params.node.data.matched === \"I\") || (params.node.data.matched === \"M\"))  {\n                return {'color': 'blue'};    \n            }     \n            else if (params.node.data.matched === \"P\")  {\n                return {'color': 'purple'};    \n            }     \n        }\n    }\n\n    private selectedCellColor(params) {\n        return {'color': 'grey'};    \n    }\n\n/*\n\n    private matchedCellRenderer(params) {\n        params.color = \"Orange\";\n        return params.value;\n    }\n\n    private percentCellRenderer(params) {\n        const value = params.value;\n        //console.log('params.value' + value);\n        \n        const eDivPercentBar = document.createElement('div');\n        eDivPercentBar.className = 'div-percent-bar';\n        eDivPercentBar.style.width = value + '%';\n        if (value < 20) {\n            eDivPercentBar.style.backgroundColor = 'red';\n        } else if (value < 60) {\n            eDivPercentBar.style.backgroundColor = '#ff9900';\n        } else {\n            eDivPercentBar.style.backgroundColor = '#00A000';\n        }\n    \n        const eValue = document.createElement('div');\n        eValue.className = 'div-percent-value';\n        eValue.innerHTML = value + '%';\n    \n        const eOuterDiv = document.createElement('div');\n        eOuterDiv.className = 'div-outer-div';\n        eOuterDiv.appendChild(eValue);\n        eOuterDiv.appendChild(eDivPercentBar);\n    \n        return eOuterDiv;\n    }\n*/\n\n    public getRowStyle(params) {   \n        let vSetGrey = 0;\n\n        //console.log(\"inside getRowStyle --> Amount: \" + params.data.amount);\n        if (params.data) {\n            if ((params.data.compLiteral === null) && (params.data.amount !== null)) { \n                return {'color': 'Red'};\n            }\n    \n            //if ((params.data.amount === null)) { \n                //return {'color': 'Grey'}; // This needs to be reviewed!!!\n            //}\n\n            if (params.data.compLiteral && params.data.literal) {\n                if ((params.data.compLiteral === params.data.literal)) {\n                    if ((params.data.mapcode === params.data.wellsMapcode) && (params.data.orderlink === params.data.wellsOrderlink))  \n                        return {'color': 'green'}\n                    if ((params.data.mapcode !== params.data.wellsMapcode) || (params.data.orderlink !== params.data.wellsOrderlink))  \n                        return {'color': 'purple'}\n                }\n        \n                else {\n                    if ((params.data.mapcode === params.data.wellsMapcode) && (params.data.orderlink === params.data.wellsOrderlink))  \n                        return {'color': 'purple'}\n                    if ((params.data.mapcode !== params.data.wellsMapcode) || (params.data.orderlink !== params.data.wellsOrderlink))  \n                        return {'color': 'red'}\n                }\n            }\n        }           \n    };\n\n    private returnRows() {\n        //console.log('I am in docDetails returnRows()!');       \n        return this._docDetailsService.getDocumentDetails();    \n    }    \n\n    private returnColumnIDs() {\n        //console.log('I am in docDetails returnColumnIDs()!');       \n        return this._docDetailsService.getColumnIDs();    \n    }    \n\n    private sortAndFilter(allOfTheData, sortModel, filterModel) {\n        //console.log('I am in sortAndFilter()!');\n        return this.sortData(sortModel, this.filterData(filterModel, allOfTheData))\n    }\n\n    private processData(allOfTheData: any, aFormatID: string) {\n        let realRowData: any[] = [];\n        let myIndex: number;\n        let vIndicator: string=\"\";\n\n        for (let i = 0; i < allOfTheData.length; i++) {\n            let colID = allOfTheData[i].COLUMNID;\n            let vFieldName = \"amount\" + colID;\n\n            // Remove dots from amounts only in European Format:\n            if (aFormatID === 'EUR') {\n                if (allOfTheData[i].AMOUNT) {\n                    allOfTheData[i].AMOUNT = allOfTheData[i].AMOUNT.replace('.', '');\n                    //console.log(\"Amount: \" + allOfTheData[i].AMOUNT);\n                }\n            }\n\n            if ((allOfTheData[i].DOUBLECOUNTED === 1) && (allOfTheData[i].NOPRINT === 1)) {\n                vIndicator = \"*#\"\n            }\n            else if ((allOfTheData[i].DOUBLECOUNTED === 1) && (allOfTheData[i].NOPRINT === 0)) {\n                    vIndicator = \"*\"\n            }\n            else if ((allOfTheData[i].DOUBLECOUNTED === 0) && (allOfTheData[i].NOPRINT === 1)) {\n                vIndicator = \"#\"\n            }\n            else {\n                vIndicator = \"\"\n            }\n            //vIndicator = (allOfTheData[i].DOUBLECOUNTED === 1) ? \"*\" : \"\";\n            //vIndicator = (allOfTheData[i].NOPRINT === 1) ? \"#\" : \"\";\n\n            //let vElement = allOfTheData[i].ITEMNAME;\n\n            if (i>0) {\n\n\n                /*\n                let newArr = allOfTheData.filter(function(item){\n                    return item.ITEMNAME === vElement;\n                });\n                    if (newArr.length > 0) {\n                    console.log(\"item found: \" + allOfTheData[i].ITEMNAME)\n                    myIndex = realRowData.length-1;\n                    realRowData[myIndex][vFieldName] = allOfTheData[i].AMOUNT;\n                }\n                */\n    \n                if (allOfTheData[i].ITEMNAME === allOfTheData[i-1].ITEMNAME) {\n                    myIndex = realRowData.length-1;\n                    realRowData[myIndex][vFieldName] = allOfTheData[i].AMOUNT;\n                    realRowData[myIndex]['amount'] = realRowData[myIndex]['amount'] + allOfTheData[i].AMOUNT;\n                }\n\n                else {\n                    realRowData.push({\n                        wellsLiteral: allOfTheData[i].WELLSLITERAL,\n                        noPrint: allOfTheData[i].NOPRINT,\n                        indicator: vIndicator,\n                        doubleCounted: allOfTheData[i].DOUBLECOUNTED,\n                        matched: 'X',\n                        compLiteral: allOfTheData[i].COMPLITERAL,\n                        amount: allOfTheData[i].AMOUNT,\n                        literal: allOfTheData[i].ITEMNAME,\n                        mapcode: allOfTheData[i].MAPCODE,\n                        orderlink: allOfTheData[i].ORDERLINK,\n                        wellsMapcode: allOfTheData[i].WELLSMAPCODE,\n                        wellsOrderlink: allOfTheData[i].WELLSORDERLINK,\n                        [vFieldName] : allOfTheData[i].AMOUNT,\n                        valueOrder: allOfTheData[i].VALUEORDER,\n                    });               \n                }\n            }\n            else {\n                realRowData.push({\n                    wellsLiteral: allOfTheData[i].WELLSLITERAL,\n                    noPrint: allOfTheData[i].NOPRINT,\n                    indicator: vIndicator,\n                    doubleCounted: allOfTheData[i].DOUBLECOUNTED,\n                    matched: 'X',\n                    compLiteral: allOfTheData[i].COMPLITERAL,\n                    amount: allOfTheData[i].AMOUNT,\n                    literal: allOfTheData[i].ITEMNAME,\n                    mapcode: allOfTheData[i].MAPCODE,\n                    orderlink: allOfTheData[i].ORDERLINK,\n                    wellsMapcode: allOfTheData[i].WELLSMAPCODE,\n                    wellsOrderlink: allOfTheData[i].WELLSORDERLINK,\n                    [vFieldName] : allOfTheData[i].AMOUNT,\n                    valueOrder: allOfTheData[i].VALUEORDER,\n                });               \n            }            \n        } // For loop\n        //this.fitColumns(); this makes horizontal scroll bar visible in Windows\n        \n        realRowData.sort((a,b) => {\n            if (a.valueOrder === b.valueOrder) return 0;\n            //if (a.valueOrder < b.valueOrder) return 1;\n            if (a.valueOrder > b.valueOrder) return 1;\n            return -1;\n        });\n        \n        return realRowData;\n    }\n\n    private sortData(sortModel, data) {\n        //console.log('I am in sortData()!');\n\n        var sortPresent = sortModel && sortModel.length > 0;\n        if (!sortPresent) {\n            return data;\n        }\n        // do in memory sort of the data, across all the fields\n        var resultOfSort = data.slice();\n        resultOfSort.sort(function(a,b) {\n            for (let model of sortModel) {\n                //console.log('SortModel = ' + model.colId);\n                let sortColModel = model;\n                let valueA = a[sortColModel.colId];\n                let valueB = b[sortColModel.colId];\n                // this filter didn't find a difference, move onto the next one\n                if (valueA === valueB) {\n                    continue;\n                }\n                let sortDirection = sortColModel.sort === 'asc' ? 1 : -1;\n                if (valueA > valueB) {\n                    return sortDirection;\n                } else {\n                    return sortDirection * -1;\n                }\n            }\n            // no filters found a difference\n            return 0;\n        });\n        return resultOfSort;\n    }\n\n    private filterData(filterModel, data) {\n        //console.log('I am in filterData()!');\n        var filterPresent = filterModel && Object.keys(filterModel).length > 0;\n        if (!filterPresent) {\n            //console.log('No filter!');\n            return data;\n        }\n\n        let resultOfFilter = [];\n        for (let item of data) {\n\n            if (filterModel.literal) {\n                var cn = item.literal;\n                var cnFilter = filterModel.literal.filter;\n                if (filterModel.literal.type.toLowerCase() == 'contains') {\n                    if (cn.toLowerCase().indexOf((cnFilter).toLowerCase()) < 0) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.literal.type.toLowerCase() == 'notcontains') {\n                    if (cn.toLowerCase().indexOf((cnFilter).toLowerCase()) >= 0) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.literal.type.toLowerCase() == 'equals') {\n                    //console.log(filterModel.literal.type);\n                    if (cn.toLowerCase() != cnFilter.toLowerCase()) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.literal.type.toLowerCase() == 'notequal') {\n                    //console.log(filterModel.literal.type);\n                    //console.log(cnFilter.toLowerCase());\n                    //console.log(cn.toLowerCase());\n\n                    if (cn.toLowerCase() === cnFilter.toLowerCase()) {\n                        //COMPANYNAME did match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.literal.type.toLowerCase() == 'startswith') {\n                    if (cn.toLowerCase().substr(0,(cnFilter.length)) != cnFilter.toLowerCase()) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.literal.type.toLowerCase() == 'endswith') {\n                    if (cn.substr(cn.length-cnFilter.length,(cnFilter.length)).toLowerCase() != cnFilter.toLowerCase()) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else {\n                }\n            }\n\n            ////console.log(resultOfFilter);\n            resultOfFilter.push(item);\n        }\n\n        return resultOfFilter;\n    }\n\n/*\n    // to test api query on AWS:\n    getDetails() { \n        //console.log('I am in getDocList()!');\n        //this._demoService.getStatus().subscribe(\n        this._docDetailsService.getDocumentDetails().subscribe(\n        // the first argument is a function which runs on success\n          data => { this.doc_list = data},\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => //console.log('done with getDocList()')\n        );\n    }\n*/\n\n    getDocID() { \n        ////console.log('I am in getDocID() and docID is: ' + this._docDetailsService.getDocumentID().valueOf());\n        return this._docDetailsService.selectedDocID;\n    }\n\n    getFormID() { \n        ////console.log('I am in getFormID()!');\n        return this._docDetailsService.selectedFormCode;\n    }\n\n    getColumnID() { \n        ////console.log('I am in getColumnID() and columnID is: ' + this._docDetailsService.getColumnID().valueOf());\n        return this._docDetailsService.selectedColumnID;\n    }\n\n    getCompName() { \n        ////console.log('I am in getCompName()!');\n        return this._docDetailsService.selectedCompanyName;\n    }\n\n    onRowClicked(event: any) { \n        //let rowNode = this.gridOptions.api.getDisplayedRowAtIndex(0);\n        //console.log('Clicked Row: ' + event.node.data.literal);\n        \n        this.selectedRowIndex = event.rowIndex;\n        this.selectedNoPrint = event.node.data.noPrint;\n        this.selectedDoubleCounted = event.node.data.doubleCounted;\n        this.selectedLiteral = event.node.data.literal;\n        //this.selectedOrderLink = event.node.data.orderlink;\n        //this.selectedMapcode = event.node.data.mapcode;\n        \n        this._docDetailsService.setOrderlink(event.node.data.orderlink);\n        this._docDetailsService.setMapcode(event.node.data.mapcode);\n        this._docDetailsService.setSelectedLiteral(event.node.data.literal);\n        \n        this.gRowClicked = 1;\n        this.findChartItemEvent.emit(null);\n    }\n\n    private onRowSelected(event: any) {\n        if (event.node.selected) {\n            this.selectedRowIndex = event.rowIndex;\n            this.selectedNoPrint = event.node.data.noPrint;\n            this.selectedDoubleCounted = event.node.data.doubleCounted;\n            this.selectedLiteral = event.node.data.literal;\n\n            // gRowClicked determies how user selects a row: 1-RowClicked, 2-Space Bar, 0- treeView clicked.\n            // 2 is the only case that findChartItemEvent gets called; because in other cases, we don't need to call it.\n            // Side effect is that we cannot call findChartItemEvent using keyboard unless clicking on grid first. \n            if (this.gRowClicked === 2) {\n                this._docDetailsService.setOrderlink(event.node.data.orderlink);\n                this._docDetailsService.setMapcode(event.node.data.mapcode);\n                this._docDetailsService.setSelectedLiteral(event.node.data.literal);\n                this.findChartItemEvent.emit(null);\n                //console.log('Selected Literal: ' + event.node.data.literal);\n                //console.log('gRowClicked: ' + this.gRowClicked);\n            } else if(this.gRowClicked === 1)\n                this.gRowClicked = 2;\n            \n        }\n    }\n    \n    public getFinancials(aformID, aFormatID: string) {\n        console.log('I am in DOCDETAILS.getFinancials()!');\n        //Clear the grid first\n        this.clearGrid();\n\n        this._docDetailsService.setTitle(aformID);\n        this._docDetailsService.setFormID(aformID);\n\n        this.gSelectedChartCode = this._docDetailsService.selectedChartCode;\n        this.treeEvent.emit(null);\n        \n        this.createColumnDefs(); \n        this.populateGrid(aFormatID);\n        \n        //Calls getDocumentHeaderList() in topPanelComponent:\n        this.documentHeaderEvent.emit(null);\n    }\n\n    private clearGrid(){\n        let self = this;\n        let emptyDataSource = {\n            getRows(params:any) {\n                params.successCallback([],0);\n            }\n        };\n        this.gridOptions.api.setDatasource(emptyDataSource);\n    }  \n    \n    private populateGrid(aFormatID: string) {\n        let populatedDataSource = {\n            pageSize: 500,\n            //paginationOverflowSize: 100,     \n                           \n            getRows: (params: any) => {\n                //console.log('I am in getRows()!');\n    \n                // Spinner on\n                //this._loaderService.display(true);\n                //console.log('Spinner On - getRows');\n                    \n            \n                if (this._docDetailsService.selectedDocID > 0) {\n                    //console.log('There is a DocID !');\n                    this.returnRows().subscribe(tempRowData => {\n    \n                        // assign the right amounts for each columnID and more ...\n                        this.rowData = this.processData(tempRowData, aFormatID);\n    \n                        // take a slice of the total rows\n                        let dataAfterSortingAndFiltering = this.sortAndFilter(this.rowData, params.sortModel, params.filterModel);\n                        let rowsThisPage = dataAfterSortingAndFiltering.slice(params.startRow, params.endRow);\n    \n                        // if on or after the last page, work out the last row.\n                        let lastRow = -1;\n                        if (dataAfterSortingAndFiltering.length <= params.endRow) {\n                            lastRow = dataAfterSortingAndFiltering.length;\n                        }\n    \n                        //this._loaderService.display(false);\n                        //console.log('Spinner Off - getRows-selectedDocID>0');\n                \n                        //call the success callback\n                        params.successCallback(rowsThisPage, lastRow);\n    \n                        // set focus on the first row\n                        this.selectRow(0,0);\n                    });\n                }\n                else {\n                    //this._loaderService.display(false);\n                    //console.log('Spinner Off - getRows-selectedDocID<=0');    \n                }            \n            }\n        \n        } \n        this.gridOptions.api.setDatasource(populatedDataSource);               \n    }\n\n    private showLiteral(show: boolean) {\n        ////console.log(\"show: \" + show);\n        this.gridColumnApi.setColumnVisible(\"literal\", show);\n    }\n\n    private fitColumns() {\n        this.gridOptions.api.sizeColumnsToFit();\n    }\n    \n    private resetColumns() {\n        this.gridColumnApi.resetColumnState();\n    }\n    \n    private selectRow(rowIndex, colIndex) {\n        //console.log(\"selectedRow: \" + rowIndex);\n        let selectedCol = this.gridOptions.columnApi.getAllDisplayedColumns()[colIndex];\n\n        // sets focus into the selected grid cell\n        this.gridOptions.api.setFocusedCell(rowIndex, selectedCol);\n\n        // scrolls to the selected row\n        //this.gridOptions.api.ensureIndexVisible(rowIndex);\n\n        // scrolls to the selected column\n        //this. gridOptions.api.ensureColumnVisible(selectedCol);\n\n        //let rowNode = this.gridOptions.api.getDisplayedRowAtIndex(rowIndex);\n        //rowNode.setSelected(true);        \n    }\n\n    /*\n    public scrollToRow(aMapcode, aOrderlink: string, aRowClicked: number){\n        let index = 0;\n        this.gRowClicked = aRowClicked;\n        if (aMapcode !== \"\"){\n            index = this.getIndex(aMapcode, aOrderlink); // get the index of a row containg the aMapcode+aOrderlink in grid\n            if (index !==0 ) {\n                this.gridOptions.api.ensureIndexVisible(index); // makes grid scrolls\n                let rowNode = this.gridOptions.api.getDisplayedRowAtIndex(index);\n                rowNode.setSelected(true);\n\n                // scrolls to the literal column\n                let selectedCol = this.gridOptions.columnApi.getAllDisplayedColumns()[2]; \n\n                //change focus to selected row/column to make it possible for user to use keyboard to navigate\n                this.gridOptions.api.setFocusedCell(rowNode.rowIndex, selectedCol);\n\n                //console.log('docDetails scrollToItem: ' + rowNode.data.literal);\n            }\n        }\n\n    } \n    \n    private getIndex(aMapcode, aOrderlink: string) {\n        let result = 0;\n        for (let i = 0; i < this.rowData.length; i++) {    \n            if ((this.rowData[i].mapcode === aMapcode) && (this.rowData[i].orderlink === aOrderlink)) {\n                result = i;\n                //console.log(\"Found it: \" + this.rowData[i].literal);\n                break;\n            }\n        }\n        return result;\n    }\n    */\n\n    getContextMenuItems = (params) => { // if you need to use \"this\" inside the function then you need to use arrow function\n    //private getContextMenuItems(params) {\n        let vSelectedDoubleCounted:number = 0;\n        let vSelectedNoPrint:number = 0;\n        if (params.node) {\n            vSelectedNoPrint = params.node.data.noPrint;\n            vSelectedDoubleCounted = params.node.data.doubleCounted;\n        }\n        let vTemp: RegExp;\n        //let vMatched: string=params.node.data.matched;\n\n        //let colID = allOfTheData[i].COLUMNID;\n        //let vFieldName = \"amount\" + colID;\n\n        let result = [\n            {\n                //name: \"Alert \" + params.value,\n                name: \"Match to Chart Account\",\n                //shortcut: \"Alt + M\",\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    //console.log(\"MCA Selected\");\n                    this.openDialog(params);\n                },\n                //cssClasses: [\"redFont\", \"bold\"],\n            },\n            {\n                name: \"Insert after selected on left\",\n                //shortcut: \"Alt + I\",\n                //disabled: !(params.node.data.matched === 'T'),\n                //tooltip: \"someToolTip\"\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        let vColumnName = \"matched\";\n                        let newValue = 'I';\n                        params.node.setDataValue(vColumnName, newValue);\n                        params.node.setDataValue(params.node.disabled, (!(params.node.data.matched === 'T')));\n                        this.refreshAll();\n                    }\n                }\n            },\n            {\n                name: \"Match with selected on left\",\n                //shortcut: \"Alt + I\",\n                //disabled: (params.node.data.amount === null),\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    //this.showAlert(\"Selected Orderlink: \" + this._chartListService.selectedOrderLink);\n                    let vFound: boolean=false;\n                    let vLiteral: string;\n\n                    for (let i = 0; i < this.rowData.length; i++) {  \n                        if ((this.rowData[i].orderlink === this._chartListService.selectedOrderLink) &&\n                                (this.rowData[i].mapcode === this._chartListService.selectedMapCode)) {\n                            vFound = true;\n                            vLiteral = this.rowData[i].literal;\n                            //console.log(\"Found it: \" + this.rowData[i].literal);\n                            break;\n                        }\n                    }\n\n                    if (vFound) {\n                        this.showAlert(\"Orderlink already matched with: \" + vLiteral);\n                    }\n                    else {\n                        let vColumnName = \"orderlink\";\n                        let newNumber = this._chartListService.selectedOrderLink;\n                        params.node.setDataValue(vColumnName, newNumber);  \n                            \n                        vColumnName = \"mapcode\";\n                        let newValue = this._chartListService.selectedMapCode;\n                        params.node.setDataValue(vColumnName, newValue);  \n                            \n                        vColumnName = \"matched\";\n                        newValue = 'M';\n                        params.node.setDataValue(vColumnName, newValue);  \n                            \n                        this.refreshAll();\n                    }\n                }\n            },\n            {\n                name: \"Unmatch\",\n                //shortcut: \"Alt + U\",\n                //disabled: ((params.node.data.matched === 'F') || (params.node.data.amount === null)),\n                //disabled: (params.node.data.matched === 'F'),\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        params.node.setDataValue(params.node.disabled, (params.node.data.matched === 'F'));\n\n                        let vColumnName = \"orderlink\";\n                        let newNumber = -1;\n                        params.node.setDataValue(vColumnName, newNumber);  \n                            \n                        vColumnName = \"mapcode\";\n                        let newValue = \"\";\n                        params.node.setDataValue(vColumnName, newValue);  \n\n                        vColumnName = \"matched\";\n                        newValue = 'F';\n                        params.node.setDataValue(vColumnName, newValue);\n\n                        vColumnName = \"selected\";\n                        newValue = ' ';\n                        params.node.setDataValue(vColumnName, newValue); \n                                                        \n                        this.refreshAll();\n                    };\n                },\n                //icon: '<img src=\"../images/skills/windows.png\"/>'\n            },\n            \"separator\",\n            {\n                name: \"Double Counted\",\n                //shortcut: \"Alt + t\",\n                checked: (vSelectedDoubleCounted == 1),\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        if ((vSelectedDoubleCounted == 0) || (!vSelectedDoubleCounted)) {\n                            params.node.data.doubleCounted= 1;\n                            if (params.node.data.indicator)\n                                params.node.data.indicator += '*'\n                            else\n                                params.node.data.indicator = '*';\n                            //console.log(\"indicator: \" + params.node.data.indicator);\n                            //console.log(\"doubleCounted: \" + params.node.data.doubleCounted);\n                        } \n                        else {\n                            params.node.data.doubleCounted = 0;\n                            vTemp = /\\*/gi;\n                            let result = params.node.data.indicator.replace(vTemp, \"\");\n                            params.node.data.indicator = result;\n                            //console.log(\"indicator: \" + result);\n                            //console.log(\"doubleCounted: \" + params.node.data.indicator);\n                        } \n                        //console.log(\"indicator: \" + params.node.data.indicator);\n                        //console.log(\"doubleCounted: \" + params.node.data.doubleCounted);\n                        this.refreshAll();                            \n                    }\n                }\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            {\n                name: \"No Print\",\n                //shortcut: \"Alt + P\",\n                checked: (vSelectedNoPrint == 1),\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                if (params.node) {\n                        if ((vSelectedNoPrint == 0) || (!vSelectedNoPrint)) {\n                            params.node.data.noPrint = 1;\n                            if (params.node.data.indicator) \n                                params.node.data.indicator += '#';\n                            else \n                                params.node.data.indicator = '#';\n                        } \n                        else {\n                            params.node.data.noPrint = 0;\n                            vTemp = /\\#/gi;\n                            let result = params.node.data.indicator.replace(vTemp, \"\");\n                            params.node.data.indicator = result;\n                        } \n                        this.refreshAll();                    \n                    }\n                }\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            \"separator\",\n            {\n                name: \"Edit Item\",\n                //checked: true,\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    //console.log(\"Edit Item Selected\");\n                    // set focus on the first row\n                    this.selectRow(this.selectedRowIndex, 2);\n                },\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            {\n                name: \"Edit Footnotes\",\n                //checked: true,\n                disabled: true,\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    //console.log(\"Edit Footnotes Selected\");\n                },\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            \"separator\",\n            {\n                name: \"Add New Account\",\n                //shortcut: \"Alt + A\",\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    console.log(\"Number of rows: \" + this.rowData.length);\n                    let newItem = this.createNewRowData();\n                    this.gridOptions.api.updateRowData({ // Infinitee Model only supports Add! No update or remove!\n                        add: [newItem],\n                        addIndex: this.selectedRowIndex+1,\n                    });\n                    console.log(\"Number of rows: \" + this.rowData.length);\n                    //console.log(\"ANC Selected\");\n                },\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            \"separator\",\n            {\n                name: \"Flip Row Value\",\n                //shortcut: \"Alt + R\",\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        for (var id in this.gAmountNames) {    \n                            const vColumnName = this.gAmountNames[id];\n                            const newValue = -1 * (Number(params.node.data[vColumnName]))\n                            params.node.setDataValue(vColumnName, newValue)\n                        }\n                    }\n\n                },\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            {\n                name: \"Convert Cent to Dollars\",\n                //shortcut: \"Alt + D\",\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        for (var id in this.gAmountNames) {\n                            const vColumnName = this.gAmountNames[id];\n                            const newValue = (Number(params.node.data[vColumnName])) / 100;\n                            params.node.setDataValue(vColumnName, newValue)\n                        }  \n                    }  \n                }\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            {\n                name: \"Convert Literal to Sentence Case\",\n                //shortcut: \"Alt + S\",\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        params.node.data.literal = this.sentenceCase(params.value);\n                        this.refreshAll();\n                        //console.log(this.sentenceCase(params.value));\n                    }                    \n                },\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            {\n                name: \"Copy Literal from Left\",\n                //shortcut: \"Alt + S\",\n                action: () => { // if you need to use \"this\" inside the function then you need to use arrow function\n                    if (params.node) {\n                        let vColumnName = \"literal\";\n                        let newValue = this._chartListService.selectedLiteral;\n                        params.node.setDataValue(vColumnName, newValue);  \n\n                        vColumnName = \"matched\";\n                        newValue = 'M';\n                        params.node.setDataValue(vColumnName, newValue);  \n                    this.refreshAll();\n                    }\n                },\n                //icon: '<img src=\"../images/skills/mac.png\"/>'\n            },\n            //\"copy\"\n        ];\n        return result;\n    };\n\n    private sentenceCase (str) {\n        let l: number=str.length;\n\n        if ((str===null) || (str===''))\n             return false;\n        else\n         str = str.toString();\n        return str.substr(0, 1).toUpperCase() + str.substr(1, l-1).toLowerCase();\n        //return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    }\n\n    private refreshAll() {\n        //console.log(\"Reffresh ALL!!!\");\n        var params = { force: true };\n        this.gridOptions.api.refreshCells(params)\n    }\n          \n    // Opens TreeViewMatchedDialog. HTML and TS files are in treeView-component:\n    openDialog(params) {\n        let vColumnName = \"\";\n        let newValue = '';\n        const settings: MatDialogConfig = {\n            disableClose: true    \n        }\n        const dialogRef = this.dialog.open(TreeViewMatchedDialog, settings)\n\n        dialogRef.afterClosed().subscribe(result => {\n            //console.log(`Dialog result: ${result}`);\n            //console.log(\"Dialog result:\" + result);\n\n            if (result === \"ok\") {\n                let vFound: boolean=false;\n                let vLiteral: string;\n\n                vColumnName = \"mapcode\";\n                let newValue = this._chartListService.selectedMapCode;\n                params.node.setDataValue(vColumnName, newValue);  \n\n                vColumnName = \"matched\";\n                newValue = 'T';\n                params.node.setDataValue(vColumnName, newValue); \n    \n                vColumnName = \"selected\";\n                newValue = '√';\n                params.node.setDataValue(vColumnName, newValue);   \n\n                //console.log(\"Selected Literal:\" + this._chartListService.selectedLiteral);\n                //this.showAlert(\"You matched it with: \" + this._chartListService.selectedLiteral);\n            }\n            this.refreshAll();\n        });\n    }\n\n    private createNewRowData() {\n        var newData = {\n            //selected: '',\n            //matched: '',\n            noPrint: '',\n            doubleCounted: '',\n            indicator: '',\n            amount: '',\n            literal: '',\n            valueOrder: 0,\n            //[vFieldName]: ''\n        };\n        return newData;\n    }\n\n    public changeToEuroFormat() {\n        //console.log('in changeToEuroFormat()!');   \n        /*\n        for (let i = 0; i < this.rowData.length; i++) {  \n            let colID = this.rowData[i].COLUMNID;\n            let vFieldName = \"amount\" + colID;\n            if (this.rowData[i].amount) {\n                this.rowData[i][vFieldName] = this.rowData[i][vFieldName].replace('.', '');\n                //this.rowData[i].amount.replace(/./g, '');\n                console.log(\"Compare: \" + this.rowData[i][vFieldName] + \" vs \" + this.rowData[i][vFieldName]);\n            }\n        }\n        this.refreshAll();\n        */\n    }   \n\n    public saveProcess() {\n        //this.showAlert(\"This module is under costruction!\");\n\n        let vStatus = this._docDetailsService.getSelectedStatus();\n        //console.log(\"dt.Status: \" + vStatus.trim());\n        switch(vStatus.trim()) { \n            case \"SHIP2PROD\": {\n                this._docDetailsService.getNumberOfPeriods('01').subscribe(bColumnIDsData => {    \n                    let bPeriods = bColumnIDsData.length;\n                    //console.log(\"Number of Periods for BS: \" + bPeriods);\n                    if (bPeriods > 1) {\n                        this._docDetailsService.getNumberOfPeriods('02').subscribe(iColumnIDsData => {    \n                            let iPeriods = iColumnIDsData.length;\n                            //console.log(\"Number of Periods for IS: \" + iPeriods);\n                            if (iPeriods > 1) {\n                                this._docDetailsService.getNumberOfPeriods('05').subscribe(cColumnIDsData => {    \n                                    let cPeriods = cColumnIDsData.length;\n                                    //console.log(\"Number of Periods for CS: \" + cPeriods);\n                                    if (cPeriods > 1) {\n                                        //this.showAlert(\"Saved as SHIPTOPROD!\");\n                                        this.saveFinancials();\n                                    } else {this.openConfirmationDialog('Cash Flow')};\n                                });\n                            } else {this.openConfirmationDialog('Income Statement')};\n                        });\n                    } else {this.openConfirmationDialog('Balance Sheet')};\n                });\n                //let periods:number = this.checkNumberofColumns('01');\n                break;\n            }\n            default: {\n                this.saveFinancials();\n                break;\n            }\n        }\n    }\n        \n    private openConfirmationDialog(aForm: string) {\n        const settings: MatDialogConfig = {\n          disableClose: true    \n        }\n        const dialogRef = this.dialog.open(ConfirmDialog, settings);\n        dialogRef.componentInstance.confirmMessage = \"Number of Periods are less than two for \" + aForm + \". Are you sure you want to save?\"\n        dialogRef.afterClosed().subscribe(result => {\n          //console.log(\"Selected Stataus: \" + this._docDetailsService.getSelectedStatus());\n          //console.log(\"Result: \" + result);\n          if (result === 'ok') {\n                this.saveFinancials();\n            };\n        });\n    }\n\n    private saveFinancials() {\n        //this._loaderService.display(true);\n        console.log('Spinner On - saveFinancials');  \n\n        let vStatus = this._docDetailsService.getSelectedStatus();\n        let vFormCode = this._docDetailsService.selectedFormCode.getValue();\n        let vChartCode = this._docDetailsService.selectedChartCode;        \n        let vMessage: string;\n        let accountRecords: any[] = this.collectAccounts(vStatus, vFormCode);\n    /*\n        for (let i=0; i<accountRecords.length; i++) {            \n            \n            console.log(\n                \"docID: \" + accountRecords[i].doc_id \n                + \" status_code: \" + accountRecords[i].status_code\n                + \" form_code: \" + accountRecords[i].form_code\n                + \" comp_number: \" + accountRecords[i].comp_number\n                + \" comp_name: \" + accountRecords[i].comp_name            \n                + \" valueOrder: \" + accountRecords[i].value_order\n                + \" columnID: \" + accountRecords[i].column_id\n                + \" amount: \" + accountRecords[i].amount\n                + \" doubleCounted: \" + accountRecords[i].double_counted\n                + \" noprint: \" + accountRecords[i].no_print\n                + \" literal: \" + accountRecords[i].literal\n                + \" orderlink: \" + accountRecords[i].orderlink\n                + \" mapdode: \" + accountRecords[i].mapcode\n                \n            );        \n        } \n    */                \n        this._docDetailsService.saveDocumentDetails(accountRecords).subscribe(\n            savedData => {\n            //console.log('savedData: ' + savedData.message);\n            if (savedData.message)\n                vMessage = savedData.message;\n            },\n            // the second argument is a function which runs on error\n            err => {\n                console.log('Error in savedDFinancials! ' + err);\n            },\n            // the third argument is a function which runs on completion\n            () => {\n                console.log('DONE WITH saveFinancials() for chartCode: ' + vChartCode);\n                if (!vMessage)\n                    //console.log(\"result: no data\");\n                    vMessage = \"Something went wrong and http.post request did not return any data!\";\n                this.getFinancials(vFormCode, vChartCode);  \n                this.refreshAll();      \n                this.showAlert(vMessage);\n            }\n        );\n        \n        //this._loaderService.display(false);\n        console.log('Spinner Off - saveFinancials');  \n    }\n\n    private collectAccounts(aStatus, aFormCode: string) {\n        this.refreshAll();\n        let accountData: any[] = [];\n        let vDocID = this._docDetailsService.selectedDocID;\n        let vCompName = this._docDetailsService.selectedCompanyName;\n        let vCompNumber = this._docDetailsService.selectedCompNumber;\n        let columns = this.gColID;\n        //let vCount = this.rowData.length;\n        let vFieldName: string=\"\";\n\n        //console.log(\"Collecting \" + vCount + \" accounts for Document ID: \" + vDocID + \" vColID: \" + this.gColID.length);\n        \n        let i=0;\n        this.gridOptions.api.forEachNode(function(node) {\n        //for (let i = 0; i < vCount; i++) {\n            let vOrder = (parseInt(aFormCode) * 1500) + i;\n            for (let j=0; j<columns.length; j++) {                        \n                vFieldName = \"amount\" + columns[j].COLUMNID   \n                //console.log(\"vFieldName: \" + vFieldName);                 \n                //console.log(\"Amount: \" + this.rowData[i][vFieldName]);                 \n                //console.log(\"literal: \" + this.rowData[i].literal);   \n                if (!node.data.noPrint) node.data.noPrint = 0;             \n                if (!node.data.doubleCounted) node.data.doubleCounted = 0;             \n                if (!node.data.mapcode) node.data.mapcode = -1;             \n                if (!node.data.orderlink) node.data.orderlink = -1;             \n                if (!node.data[vFieldName]) node.data[vFieldName] = \"\";             \n                accountData.push({\n                    doc_id: vDocID,\n                    comp_name: vCompName,\n                    comp_number: vCompNumber,\n                    status_code: aStatus, \n                    form_code: aFormCode,                   \n                    value_order: vOrder, //this.rowData[i].valueOrder,\n                    column_id: columns[j].COLUMNID,\n                    literal: node.data.literal, //this.rowData[i].literal,\n                    amount: node.data[vFieldName], //this.rowData[i][vFieldName],\n                    no_print: node.data.noPrint, //this.rowData[i].noPrint,\n                    double_counted: node.data.doubleCounted, //this.rowData[i].doubleCounted,\n                    mapcode: node.data.mapcode, //this.rowData[i].mapcode,\n                    orderlink: node.data.orderlink, //this.rowData[i].orderlink,                   \n                });   \n            }\n            i++;\n        });\n        return accountData;\n    }\n      \n    showAlert(aMessage: string) {\n        this.gMessage = aMessage;\n        this.alertEvent.emit(null);\n    }\n\n    private printData() {\n        let rowData = [];\n        this.gridOptions.api.forEachNode(function(node) {\n          rowData.push(node.data);\n        });\n        console.log(\"Row Data:\");\n        console.log(rowData);\n    }    \n\n}\n\n\n        \n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/documentDetails-component/documentDetails.component.ts","module.exports = \"<div class=\\\"panel-docdetails\\\">\\n\\n  <toolbar #toolbar \\n    (financialsEvent)=\\\"docDetails.getFinancials(toolbar.gFormID, toolbar.gFormatID)\\\"\\n    (saveEvent)=\\\"docDetails.saveProcess()\\\"\\n    (euroFormtEvent)=\\\"docDetails.changeToEuroFormat()\\\"\\n    (alertEvent)=\\\"alert.showAlert(toolbar.gMessage)\\\"\\n    (treeEvent)=\\\"treeView.getChartIDList(toolbar.gToggle, toolbar.gSelectedChartCode)\\\" \\n  ></toolbar>\\n  <!-- (saveDataEvent)=\\\"COMPONENT_NAME.saveData()\\\" in case if you need to implement saveData in another component-->\\n  \\n  <alert #alert hidden></alert>\\n      \\n  <split-container>\\n    <div class=\\\"leftDiv\\\" split-behaviour=\\\"fixed\\\" style=\\\"width: 30%; height: 100%;\\\">\\n        <!--\\n          should be used below in <treeView> in case of adding a feature to find a row by clicking on an item in treeView\\n          (findGridRowEvent)=\\\"docDetails.scrollToRow(treeView.selectedMapcode, treeView.selectedOrderlink, 0)\\\" \\n        -->\\n        <treeView #treeView \\n          (alertEvent)=\\\"alert.showAlert(treeView.gMessage)\\\"\\n        ></treeView>\\n    </div>\\n\\n    <div class=\\\"rightDiv\\\" split-behaviour=\\\"dynamic\\\" style=\\\"width: 70%; height: 100%; float: left\\\">\\n        <topPanel #topPanel></topPanel>\\n        <documentDetails #docDetails \\n          (treeEvent)=\\\"treeView.getChartIDList(treeView.gToggle, docDetails.gSelectedChartCode)\\\" \\n          (alertEvent)=\\\"alert.showAlert(docDetails.gMessage)\\\"\\n          (documentHeaderEvent)=\\\"topPanel.getDocumentHeaderList(0)\\\"\\n          (findChartItemEvent)=\\\"treeView.scrollToAccount()\\\" \\n          ></documentDetails>   \\n    </div>\\n  </split-container>\\n</div>\\n\\n                        \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/documentDetails-component/panel-documentDetails.component.html\n// module id = ../../../../../src/app/documentDetails-component/panel-documentDetails.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'panelDocDetails',\n  templateUrl: './panel-documentDetails.component.html',\n  styleUrls: ['../css/app.component.scss'],\n})\n\nexport class PanelDocumentDetailsComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/documentDetails-component/panel-documentDetails.component.ts","import {Injectable} from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map'; // this is necessary\nimport { AppSettings } from '../appsettings';\n\n@Injectable()\nexport class documentListService {\n\n    constructor(public http:Http) {}\n\n    getDocumentList() {\n        const endpoint = AppSettings.DOC_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/documentList-component/document-list.service.ts","module.exports = \"<!--    \\n<h4>Document list retreived from Aurora database located on AWS using an endpoint</h4>\\n<ul>\\n    <li *ngFor=\\\"let doc of doc_list\\\">\\n        <input type=\\\"text\\\" name=\\\"cnBox\\\" [(ngModel)]=\\\"doc.COMPANYNAME\\\" size=\\\"50\\\">\\n    </li>\\n</ul>\\n\\n\\n<div *ngFor=\\\"let doc of doc_list; let i=index\\\">  \\n    {{i + 1}} - {{doc.COMPANYNAME}}\\n</div>  \\n-->\\n\\n<!---<h1>Simple ag-Grid Angular Example</h1>-->\\n<ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\n    class=\\\"ag-theme-fresh\\\"\\n    [gridOptions]=\\\"gridOptions\\\"\\n    [domLayout]=\\\"autoheight\\\"\\n    [enableColResize]=\\\"true\\\"\\n    [rowData]=\\\"rowData\\\"\\n    [columnDefs]=\\\"columnDefs\\\"\\n    rowModelType = \\\"infinite\\\"\\n    [suppressCellSelection]=\\\"false\\\"\\n    \\n    (gridReady)=\\\"onGridReady($event)\\\"\\n    (rowClicked)=\\\"onRowClicked($event)\\\"\\n    (rowDoubleClicked)=\\\"onRowDuobleClicked($event)\\\"\\n    (rowSelected)=\\\"onRowSelected($event)\\\"\\n    (keypress)=\\\"onKeyPress($event)\\\"    \\n    >\\n</ag-grid-angular>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/documentList-component/documentList.component.html\n// module id = ../../../../../src/app/documentList-component/documentList.component.html\n// module chunks = main","import {Component, EventEmitter, Output} from \"@angular/core\";\nimport {GridOptions} from \"ag-grid\";\n//import {CommonModule}  from '@angular/common'; \n\nimport {documentListService} from './document-list.service';\nimport { documentDetailsService } from \"../documentDetails-component/document-details.service\";\nimport { SpinnerService } from '../shared/spinner.service';\n\nimport 'rxjs/add/operator/map';\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'documentList',\n    templateUrl: './documentList.component.html',\n})\n\nexport class DocumentListComponent {\n    @Output() alertEvent = new EventEmitter();\n\n    private gridOptions: GridOptions;\n    private columnDefs: any[];\n    private myOptions: string[] = [\"contains\", \"notContains\", \"equals\", \"startsWith\", \"endsWith\"];\n\n    public rowData: any[];\n    public selectedIndex: number=0;\n    //public selectedDocumentid: number;\n    //public selectedCompanyName: string;\n    public doc_list; // For testing API Gateway on AWS\n    public gMessage: string;\n    \n\n    private dataSource = {\n        pageSize: 100,\n        paginationOverflowSize: 100,     \n                       \n        getRows: (params: any) => {\n            //console.log('I am in getRows()!');\n\n            // Spinner on\n            this._loaderService.display(true);\n            //console.log('Spinner On');\n                \n        \n            this.returnRows().subscribe(rowData => {\n\n                // take a slice of the total rows\n                let dataAfterSortingAndFiltering = this.sortAndFilter(rowData, params.sortModel, params.filterModel);\n                let rowsThisPage = dataAfterSortingAndFiltering.slice(params.startRow, params.endRow);\n\n                // if on or after the last page, work out the last row.\n                let lastRow = -1;\n                if (dataAfterSortingAndFiltering.length <= params.endRow) {\n                    lastRow = dataAfterSortingAndFiltering.length;\n                }\n\n                this._loaderService.display(false);\n                //console.log('Spinner Off');\n        \n                //call the success callback\n                params.successCallback(rowsThisPage, lastRow);\n\n                // set focus on the first row\n                this.selectFirstRow();\n\n            });\n        }    \n    }    \n\n    constructor(private _doclistService: documentListService,  private _loaderService: SpinnerService,\n            private _docDetailsService: documentDetailsService, private router: Router) {\n        //console.log('I am in constructor()!');\n        this.gridOptions = <GridOptions>{};        \n        this.createColumnDefs();  \n        // Clear localStorage:\n        localStorage.clear(); \n        //console.log(\"localStorage cleared!!!\");     \n    }\n        \n    private createColumnDefs() {\n        //console.log('I am in createColumnDefs()!');\n        // It doesn't mater what percentage we assign to columns, but we need to make sure total is 100%, \n        //which is equal to the percentage in wrapper class (.panel-doclist) located in app.component.scss.\n        this.columnDefs = [\n            {headerName: \"Doc ID\", field: \"DOCUMENTID\", filter: 'number', minWidth: '5%',\n                filterParams: { filterOptions: this.myOptions, applyButton: true, clearButton:true }},\n            {headerName: \"Comp #\", field: \"COMPNUMBER\", filter: 'number', minWidth: '5%',\n                filterParams: { filterOptions: this.myOptions, applyButton: true, clearButton:true }},\n            {headerName: \"Comp Name\", field: \"COMPANYNAME\", minWidth: '30%',\n                filter: \"text\", filterParams: { filterOptions: this.myOptions, applyButton: true, clearButton:true }},\n            {headerName: \"Date Processed\", field: \"DATEPROCESSED\", filter: 'date', suppressMenu: true, minWidth: '20%'},\n            {headerName: \"Report Date\", field: \"REPORTDATE\", filter: 'date', suppressMenu: true, minWidth: '20%'},\n            {headerName: \"Type\", field: \"REPORTTYPECODE\", filter: \"text\", suppressMenu: true, minWidth: '10%'},\n            {headerName: \"Status\", field: \"MNEMONIC\", minWidth: '10%', filter: \"text\", filterParams: { applyButton: true, clearButton:true }},\n        ];\n    }\n        \n    returnRows() {\n        //console.log('I am in docList returnRows()!');        \n        return this._doclistService.getDocumentList();        \n    }    \n\n    ngOnInit() {\n        //console.log('I am in ngOnInit()!');\n        //this.getDocist();\n\n        // we pass an empty gridOptions in, so we can grab the api out\n        this.gridOptions = <GridOptions>{};\n\n        this.gridOptions.enableServerSideSorting = true;\n        this.gridOptions.enableServerSideFilter = true;\n        this.gridOptions.rowSelection = \"single\";\n        \n        // Retreive rows from database and display them in grid:\n        this.gridOptions.datasource = this.dataSource; \n\n    }\n\n    private onGridReady(params: any) {\n        this.gridOptions.api.sizeColumnsToFit(); // This removes horizon scroll bar\n    }        \n\n    private selectFirstRow() {\n\n        // scrolls to the first row\n        this.gridOptions.api.ensureIndexVisible(this.selectedIndex);\n\n        // scrolls to the first column\n        let firstCol = this.gridOptions.columnApi.getAllDisplayedColumns()[this.selectedIndex];\n        this. gridOptions.api.ensureColumnVisible(firstCol);\n\n        // sets focus into the first grid cell\n        this.gridOptions.api.setFocusedCell(this.selectedIndex, firstCol);\n\n        let rowNode = this.gridOptions.api.getDisplayedRowAtIndex(this.selectedIndex);\n        rowNode.setSelected(true);\n        \n    }\n\n/* it shows horizon scroll bars in Windows\n    private fitColumns() {\n        this.gridOptions.api.sizeColumnsToFit();\n    }\n    */\n\n    sortAndFilter(allOfTheData, sortModel, filterModel) {\n        //console.log('I am in sortAndFilter()!');\n        return this.sortData(sortModel, this.filterData(filterModel, allOfTheData));\n    }\n\n    sortData(sortModel, data) {\n        //console.log('I am in sortData()!');\n\n        var sortPresent = sortModel && sortModel.length > 0;\n        if (!sortPresent) {\n            return data;\n        }\n        // do in memory sort of the data, across all the fields\n        var resultOfSort = data.slice();\n        resultOfSort.sort(function(a,b) {\n            for (let model of sortModel) {\n                //console.log('SortModel = ' + model.colId);\n                let sortColModel = model;\n                let valueA = a[sortColModel.colId];\n                let valueB = b[sortColModel.colId];\n                // this filter didn't find a difference, move onto the next one\n                if (valueA==valueB) {\n                    continue;\n                }\n                let sortDirection = sortColModel.sort === 'asc' ? 1 : -1;\n                if (valueA > valueB) {\n                    return sortDirection;\n                } else {\n                    return sortDirection * -1;\n                }\n            }\n            // no filters found a difference\n            return 0;\n        });\n        return resultOfSort;\n    }\n\n    filterData(filterModel, data) {\n        //console.log('I am in filterData()!');\n        var filterPresent = filterModel && Object.keys(filterModel).length > 0;\n        if (!filterPresent) {\n            //console.log('No filter!');\n            return data;\n        }\n\n        let resultOfFilter = [];\n        for (let item of data) {\n\n            if (filterModel.COMPANYNAME) {\n                var cn = item.COMPANYNAME;\n                var cnFilter = filterModel.COMPANYNAME.filter;\n                if (filterModel.COMPANYNAME.type.toLowerCase() === 'contains') {\n                    if (cn.toLowerCase().indexOf((cnFilter).toLowerCase()) < 0) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPANYNAME.type.toLowerCase() === 'notcontains') {\n                    if (cn.toLowerCase().indexOf((cnFilter).toLowerCase()) >= 0) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPANYNAME.type.toLowerCase() === 'equals') {\n                    ////console.log(filterModel.COMPANYNAME.type);\n                    if (cn.toLowerCase() != cnFilter.toLowerCase()) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPANYNAME.type.toLowerCase() === 'notequal') {\n                    ////console.log(filterModel.COMPANYNAME.type);\n                    ////console.log(cnFilter.toLowerCase());\n                    ////console.log(cn.toLowerCase());\n\n                    if (cn.toLowerCase() === cnFilter.toLowerCase()) {\n                        //COMPANYNAME did match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPANYNAME.type.toLowerCase() === 'startswith') {\n                    if (cn.toLowerCase().substr(0,(cnFilter.length)) != cnFilter.toLowerCase()) {\n                        //COMPANYNAME didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPANYNAME.type.toLowerCase() ==='endswith') {\n                    if (cn.substr(cn.length-cnFilter.length,(cnFilter.length)).toLowerCase() != cnFilter.toLowerCase()) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else {\n                }\n            }\n\n            if (filterModel.COMPNUMBER) {\n                var doc = item.COMPNUMBER;\n                var docFilter = filterModel.COMPNUMBER.filter;\n                if (filterModel.COMPNUMBER.type.toLowerCase() == 'contains') {\n                    if ((doc.toString()).toLowerCase().indexOf((docFilter.toString()).toLowerCase()) < 0) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPNUMBER.type.toLowerCase() == 'notcontains') {\n                    if (doc.toString().toLowerCase().indexOf((docFilter.toString()).toLowerCase()) >= 0) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPNUMBER.type.toLowerCase() == 'equals') {\n                    ////console.log(filterModel.COMPNUMBER.type);\n                    ////console.log(docFilter);\n                    ////console.log(doc);\n                    if (doc != docFilter) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPNUMBER.type.toLowerCase() == 'notequal') {\n                    if (doc === docFilter) {\n                        //DOCUMENTID did match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPNUMBER.type.toLowerCase() == 'startswith') {\n                    if (doc.toString().substr(0,(docFilter.toString().length)) != docFilter.toString()) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.COMPNUMBER.type.toLowerCase() == 'endswith') {\n                    ////console.log(filterModel.DOCUMENTID.type);\n                    ////console.log(docFilter);\n                    ////console.log(doc);\n                    ////console.log(doc.toString().substr(doc.toString().length-docFilter.toString().length,(docFilter.toString().length)));\n                    if (doc.toString().substr(doc.toString().length-docFilter.toString().length,(docFilter.toString().length)) != docFilter.toString()) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else {\n                }\n            }\n\n            if (filterModel.DOCUMENTID) {\n                var doc = item.DOCUMENTID;\n                var docFilter = filterModel.DOCUMENTID.filter;\n                if (filterModel.DOCUMENTID.type.toLowerCase() == 'contains') {\n                    if ((doc.toString()).toLowerCase().indexOf((docFilter.toString()).toLowerCase()) < 0) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.DOCUMENTID.type.toLowerCase() == 'notcontains') {\n                    if (doc.toString().toLowerCase().indexOf((docFilter.toString()).toLowerCase()) >= 0) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.DOCUMENTID.type.toLowerCase() == 'equals') {\n                    ////console.log(filterModel.DOCUMENTID.type);\n                    ////console.log(docFilter);\n                    ////console.log(doc);\n                    if (doc != docFilter) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.DOCUMENTID.type.toLowerCase() == 'notequal') {\n                    if (doc === docFilter) {\n                        //DOCUMENTID did match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.DOCUMENTID.type.toLowerCase() == 'startswith') {\n                    if (doc.toString().substr(0,(docFilter.toString().length)) != docFilter.toString()) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else if (filterModel.DOCUMENTID.type.toLowerCase() == 'endswith') {\n                    ////console.log(filterModel.DOCUMENTID.type);\n                    ////console.log(docFilter);\n                    ////console.log(doc);\n                    ////console.log(doc.toString().substr(doc.toString().length-docFilter.toString().length,(docFilter.toString().length)));\n                    if (doc.toString().substr(doc.toString().length-docFilter.toString().length,(docFilter.toString().length)) != docFilter.toString()) {\n                        //DOCUMENTID didn't match, so skip this record\n                        continue;\n                    }\n                } else {\n                }\n            }\n\n            if (filterModel.MNEMONIC) {\n                //if (filterModel.DESCRIPTION.filterType.toLowerCase() == 'contains') && \n                if (item.MNEMONIC.toUpperCase().indexOf((filterModel.MNEMONIC.filter).toUpperCase()) < 0) {\n                    //DESCRIPTION didn't match, so skip this record\n                    continue;\n                }\n            }\n\n            ////console.log(resultOfFilter);\n            resultOfFilter.push(item);\n        }\n\n        return resultOfFilter;\n    }\n\n/*\n    // to test api query on AWS:\n    getDocist() { \n        //console.log('I am in getDocList()!');\n        //this._demoService.getStatus().subscribe(\n        this._doclistService.getDocumentList().subscribe(\n            // the first argument is a function which runs on success\n          data => { this.doc_list = data},\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => //console.log('done with getDocList()')\n        );\n    }\n*/\n\n    onRowClicked(event: any) { \n        //console.log('onRowClicked type: ' + event.node.data.REPORTTYPECODE);\n        //this._docDetailsService.setDocumentDetails(event.node.data.DOCUMENTID, \n            //'01', event.node.data.COMPANYNAME, event.node.data.COMPNUMBER, 1, event.node.data.REPORTTYPECODE);\n    }\n\n    onRowDuobleClicked(event: any) { \n        //let rowNode = this.gridOptions.api.getDisplayedRowAtIndex(0);\n        ////console.log('onRowClicked ' + rowNode.data.DESCRIPTION);\n        //console.log('Double Clicked Company: ' + event.node.data.COMPANYNAME);\n        //this._docDetailsService.setDocumentDetails(event.node.data.DOCUMENTID, \n            //'01', event.node.data.COMPANYNAME, event.node.data.COMPNUMBER, 1, event.node.data.REPORTTYPECODE);\n        if (this._docDetailsService.selectedChartCode)\n            this.router.navigate(['/details']);\n        else {\n            //console.log('No chart code found!')\n            this.gMessage = \"Couldn't find a chart code for this company!\";\n            this.alertEvent.emit(null);\n        }\n    }\n\n    private onRowSelected(event: any) {\n        // In rowSelected event, firts a row gets selected and then teh previous row gets deselected,\n        // so we need to make sure we are working with the selected node or (event.node.selected = true)\n        if (event.node.selected) {\n            this._docDetailsService.setDocumentDetails(event.node.data.DOCUMENTID, \n                '01', event.node.data.COMPANYNAME, event.node.data.COMPNUMBER, 1, event.node.data.REPORTTYPECODE);\n        }\n        //console.log('onRowSelected type: ' + event.node.data.REPORTTYPECODE + ': ' + event.node.selected);\n    }\n\n    private onKeyPress(event: any) {\n        //console.log('docList keyPress: : ' + event.keyCode);\n        if (event.keyCode == 13) {\n            this.router.navigate(['/details']);\n        }\n    }\n\n    /*\n    public sizeToFit() {\n        this.gridOptions.api.sizeColumnsToFit();\n    };\n    \n    public autoSizeAll() {\n        let allColumnIds = [];\n        this.columnDefs.forEach( function(columnDef) {\n            allColumnIds.push(columnDef.field);\n        });\n        this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\n    }\n\n    private onModelUpdated() {\n        //console.log('I am in onModelUpdated()!');\n        if (this.gridOptions.api && this.columnDefs) {\n            //console.log('I am in onModelUpdated()!');\n            this.gridOptions.columnApi.autoSizeColumns(this.columnDefs);\n        }\n    }\n*/\n\n}\n\n        \n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/documentList-component/documentList.component.ts","module.exports = \"<div class=\\\"panel-doclist\\\">\\n     <div class=\\\"panel-body\\\">\\n        <!--<div class=\\\"cellContainer\\\" style=\\\"width: 100%; height: 100%;\\\" >-->\\n            <documentList #docList\\n                (alertEvent)=\\\"alert.showAlert(docList.gMessage)\\\"\\n            ></documentList>\\n            \\n            <alert #alert hidden></alert>\\n\\n        <!--</div>-->\\n     </div>\\n</div>\\n\\n    \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/documentList-component/panel-documentList.component.html\n// module id = ../../../../../src/app/documentList-component/panel-documentList.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'panelDocList',\n  templateUrl: './panel-documentList.component.html',\n  styleUrls: ['../css/app.component.scss'],\n})\n\nexport class PanelDocumentListComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/documentList-component/panel-documentList.component.ts","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n</head>\\n<body>\\n\\n    <div class=\\\"container\\\">\\n\\n        <header>\\n            <h2>PTM Front-end</h2>\\n        </header>\\n                        \\n              \\n        <article>\\n            <p>\\n                The purpose of PTM is to match tabular financial data that \\n                comes from Praedea to existing accounts in Wells. PTM first \\n                matches the accounts programmatically based on the literal. \\n                Then the user matches the remaining unmatched accounts or adds \\n                new accounts. There are also various functions to allow the \\n                user to manipulate the data to conform to Wells standards.\\n            </p>\\n            <h3>Documents:</h3>\\n            <p> Shows a list of documents with their status in a grid. \\n                In this page, you can sort and search data by clicking on column headers.\\n            </p>\\n            <h3>Details:</h3>\\n            <p> You can select a document and then see the details of that document by selecting \\n                Details in the menu bar. Details page shows a list of accounts for the selected \\n                document with their amounts in a grid. \\n            </p>\\n        </article>\\n\\n         \\n        <footer>Copyright &copy; mergent.com</footer>\\n\\n    </div>\\n</body>\\n\\n\\n</html>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/home-component/home.component.html\n// module id = ../../../../../src/app/home-component/home.component.html\n// module chunks = main","import {Component} from \"@angular/core\";\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'home-page',\n    templateUrl: './home.component.html',\n    styleUrls: ['../css/app.component.scss'],\n})\nexport class HomeComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/home-component/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".listbox-reports\\n{\\n    width: 200px;\\n    height: 80px;\\n    font-size: 12px;\\n    line-height: 0.7;\\n}\\n   \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/list-component/list.component.css\n// module id = ../../../../../src/app/list-component/list.component.css\n// module chunks = main","module.exports = \"<div>\\n    <button type=\\\"button\\\" \\n        (click)=\\\"add()\\\"\\n        class=\\\"btn btn-small\\\" \\n        data-toggle=\\\"tooltip\\\" \\n        title=\\\"Add\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\" hint=\\\"Open\\\"></span>\\n    </button>\\n    <button type=\\\"button\\\" \\n        (click)=\\\"delete()\\\"\\n        class=\\\"btn btn-small\\\" \\n        data-toggle=\\\"tooltip\\\" \\n        title=\\\"Delete\\\">\\n        <span class=\\\"glyphicon glyphicon-minus\\\" aria-hidden=\\\"true\\\" hint=\\\"Open\\\"></span>\\n    </button>\\n    <button type=\\\"button\\\" \\n        (click)=\\\"showAlert('This module will be implemented soon!')\\\"\\n        class=\\\"btn btn-small\\\" \\n        data-toggle=\\\"tooltip\\\" \\n        title=\\\"Save\\\">\\n        <span class=\\\"glyphicon glyphicon-floppy-disk\\\" aria-hidden=\\\"true\\\"></span>\\n    </button>\\n    <button type=\\\"button\\\" \\n        (click)=\\\"clear()\\\"\\n        class=\\\"btn btn-small\\\" \\n        data-toggle=\\\"tooltip\\\" \\n        title=\\\"Clear\\\">\\n        <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n    </button>\\n    <iui-listbox #lbReports [appRef]=\\\"applicationRef\\\"\\n        [items]=\\\"items\\\" [allowDrag]=\\\"false\\\" [allowFocus]=\\\"true\\\"\\n        [controlStyle]=\\\"listStyle\\\" [selectionMode]=\\\"selMode\\\" [virtualMode]=\\\"true\\\">\\n        <ng-template let-item>\\n            <span (click)=\\\"onClick(item)\\\">{{item.text}}</span>\\n        </ng-template>\\n    </iui-listbox>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/list-component/list.component.html\n// module id = ../../../../../src/app/list-component/list.component.html\n// module chunks = main","//import { IntegralUIModule } from 'integralui/integralui.module';\nimport { Component, ViewContainerRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { IntegralUIListBox } from 'integralui/components/integralui.listbox';\nimport { IntegralUISelectionMode } from 'integralui/components/integralui.core';\nimport { PropertiesService } from '../properties-component/properties.service';\nimport { EventEmitter, Output, Inject } from '@angular/core';\n\n@Component({\n    selector: 'reportList',\n    encapsulation: ViewEncapsulation.None,\n    templateUrl: './list.component.html',\n    styleUrls: [ './list.component.css' ]      \n})\n\nexport class ListComponent {\n    @ViewChild('application', {read: ViewContainerRef}) applicationRef: ViewContainerRef;\n    @ViewChild('lbReports') lbReports: IntegralUIListBox;\n    @Output() previousReportsEvent = new EventEmitter();\n    @Output() alertEvent = new EventEmitter();\n\n    public items: any=[];\n    public gMessage: string='';\n    public scrollType: string = 'vertical'; \n    public selMode: IntegralUISelectionMode = IntegralUISelectionMode.One;\n    public listStyle: any = {\n        general: {\n            normal: 'listbox-reports'\n        }\n    }\n    public selectedItem: any;\n    public selectedItemText: string=\"\";\n\n    constructor(private _propertiesService: PropertiesService){\n        this.items = [];\n    } \n    \n    ngAfterViewInit(){\n        this.getDocumentHeaderList();\n    }\n\n    getDocumentHeaderList() { \n        //console.log('I am in getDocumentHeaderList()!');\n        this._propertiesService.getDocumentHeaderList().subscribe(\n            // the first argument is a function which runs on success\n            data => { \n                this.setSavedReportsList(data);\n            },\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => {}//console.log('done with getWellsPeriodsList()')\n        );\n    }\n\n    private setSavedReportsList(savedReportList) { \n        for (let i = 0; i < savedReportList.length; i++) {\n            let vString = savedReportList[i].REPORTDATE + '::' + savedReportList[i].REPORTTYPE + '::' \n                + savedReportList[i].CURRENCYCODE + '::' + savedReportList[i].MULTIPLIER\n            //console.log('setSavedReportsList => ' + vString);\n            this._propertiesService.setSelectedPreviousReport(vString);\n\n            // add reports to the list of saved reports\n            this.add();\n        }           \n    }\n\n    addItems(aItem: string){\n        let item: any = {\n            text : aItem,\n            //id: i\n        };\n\n        this.items.push(item);\n        /*\n        for (let i = 1; i <= this.numItems; i++){\n            let item: any = {\n                text : 'Item ' + i.toString(),\n                id: i\n            };\n\n            this.items.push(item);\n        }\n        */\n    }\n\n    public add(){\n        let vSelectedReport = this._propertiesService.getSelectedPreviousReport();\n        //console.log(vSelectedReport + \" will be added!\");\n        //this.clear();\n        if (vSelectedReport !== \"\") {\n            //console.log(vSelectedReport + \" will be added!\");\n            this.addItems(vSelectedReport);\n        }\n        this.lbReports.updateLayout();\n    }\n\n    delete(){\n        //console.log(this.selectedItem.text + \" will be deleted!\")\n        this.lbReports.removeItem(this.selectedItem);\n\n        this.lbReports.updateLayout();\n    }\n\n    clear(){\n        this.lbReports.clearItems();\n        this.lbReports.updateLayout();\n    }\n\n    onClick(aItem: any) {\n        console.log('Clicked ...' + aItem.text);\n        this.selectedItem = aItem;\n        this.selectedItemText = aItem.text;\n        this.previousReportsEvent.emit(null);\n    }\n\n    showAlert(aMessage: string) {\n        this.gMessage = aMessage;\n        this.alertEvent.emit(null);\n    }\n    \n}\n\n    \n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/list-component/list.component.ts","module.exports = \"<div>\\n        <button type=\\\"button\\\" \\n            (click)=\\\"add()\\\"\\n            class=\\\"btn btn-small\\\" \\n            data-toggle=\\\"tooltip\\\" \\n            title=\\\"Add\\\">\\n            <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\" hint=\\\"Open\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" \\n            (click)=\\\"delete()\\\"\\n            class=\\\"btn btn-small\\\" \\n            data-toggle=\\\"tooltip\\\" \\n            title=\\\"Delete\\\">\\n            <span class=\\\"glyphicon glyphicon-minus\\\" aria-hidden=\\\"true\\\" hint=\\\"Open\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" \\n            (click)=\\\"showAlert('This module will be implemented soon!')\\\"\\n            class=\\\"btn btn-small\\\" \\n            data-toggle=\\\"tooltip\\\" \\n            title=\\\"Save\\\"\\n            *ngIf=\\\"visible\\\"\\n        >\\n            <span class=\\\"glyphicon glyphicon-floppy-disk\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" \\n            (click)=\\\"clear()\\\"\\n            class=\\\"btn btn-small\\\" \\n            data-toggle=\\\"tooltip\\\" \\n            title=\\\"Clear\\\">\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n        <iui-listbox #lbMapped [appRef]=\\\"applicationRef\\\"\\n            [items]=\\\"items\\\" [allowDrag]=\\\"false\\\" [allowFocus]=\\\"true\\\"\\n            [controlStyle]=\\\"listStyle\\\" [selectionMode]=\\\"selMode\\\" [virtualMode]=\\\"true\\\">\\n            <ng-template let-item>\\n                <span (click)=\\\"onClick(item)\\\">{{item.text}}</span>\\n            </ng-template>\\n        </iui-listbox>\\n    \\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/list-component/mappedList.component.html\n// module id = ../../../../../src/app/list-component/mappedList.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".listbox-mapped-normal {\\n  width: 350px;\\n  height: 80px;\\n  font-size: 12px;\\n  line-height: 0.7; }\\n\\n.listbox-mapped-bordered {\\n  width: 350px;\\n  height: 80px;\\n  font-size: 12px;\\n  line-height: 0.7;\\n  border-color: rebeccapurple; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/list-component/mappedList.component.scss\n// module id = ../../../../../src/app/list-component/mappedList.component.scss\n// module chunks = main","//import { IntegralUIModule } from 'integralui/integralui.module';\nimport { Component, EventEmitter, Output, ViewContainerRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { IntegralUIListBox } from 'integralui/components/integralui.listbox';\nimport { IntegralUISelectionMode } from 'integralui/components/integralui.core';\nimport { PropertiesService } from '../properties-component/properties.service';\n\n@Component({\n    selector: 'mappedList',\n    encapsulation: ViewEncapsulation.None,\n    templateUrl: './mappedList.component.html',\n    styleUrls: [ './mappedList.component.scss' ]      \n})\nexport class MappedListComponent {\n    @ViewChild('application', {read: ViewContainerRef}) applicationRef: ViewContainerRef;\n    @ViewChild('lbMapped') lbMapped: IntegralUIListBox;\n    @Output() alertEvent = new EventEmitter();\n\n    public items: any=[];\n    public gMessage: string='';\n    public selectedItem: any;\n    public scrollType: string = 'vertical'; \n    public selMode: IntegralUISelectionMode = IntegralUISelectionMode.One;\n    public listStyle: any = {\n        general: {\n            normal: 'listbox-mapped-normal',\n            bordered: 'listbox-mapped-bordered'\n        }\n    }\n    \n    public selectedItemText: string=\"\";\n    public numItems: number = 3;\n    public visible = false; // Hides save button. Just in case if we want to show it in certain scenarios.\n\n    constructor(private _propertiesService: PropertiesService){\n        this.items = [];\n    } \n    \n    ngAfterViewInit(){\n        //this.add();\n    }\n\n    addItems(aItem: string){\n        let item: any = {\n            text : aItem,\n            //id: i\n        };\n\n        this.items.push(item);\n        /*\n        for (let i = 1; i <= this.numItems; i++){\n            let item: any = {\n                text : 'Item ' + i.toString(),\n                id: i\n            };\n\n            this.items.push(item);\n        }\n        */\n    }\n\n    add(){\n        let vSelectedWellsPeriod: string = this._propertiesService.getSelectedWellsPeriod();\n        let vSelectedDocumentHeader: string = this._propertiesService.getSelectedDocumentHeader();\n        let vSelectedReport: string = vSelectedWellsPeriod + \" => \" + vSelectedDocumentHeader;\n        let vSelectedWellsReportDate: string = this._propertiesService.getSelectedWellsReportDate();\n        let vSelectedHeaderReportDate: string = this._propertiesService.getSelectedHeaderReportDate();\n\n        if ((vSelectedWellsPeriod !== \"\") && (vSelectedDocumentHeader !== \"\")) {\n            if (vSelectedWellsReportDate === vSelectedHeaderReportDate) {\n                //console.log(vSelectedWellsReportDate + vSelectedHeaderReportDate + \" will be added to mapped list!\");\n                this.addItems(vSelectedReport);\n            } else {\n                this.showAlert(\"Wells Period date must be the same as Destination Period date!\")                \n                this.listStyle.general = 'normal'; \n            }\n\n        } else {\n            this.showAlert(\"Please select a period from Wells and Destination Period to continue!\");\n        }\n        this.lbMapped.updateLayout();\n    }\n\n    delete(){\n        console.log(this.selectedItem.text + \" was deleted!\")\n        this.lbMapped.removeItem(this.selectedItem);\n\n        this.lbMapped.updateLayout();\n    }\n\n    clear(){\n        this.lbMapped.clearItems();\n        this.lbMapped.updateLayout();\n    }\n\n    onClick(aItem: any) {\n        //console.log('Clicked ...' + aItem.text);\n        this.selectedItem = aItem;\n        this.selectedItemText = aItem.text;\n    }\n    \n    showAlert(aMessage: string) {\n        this.gMessage = aMessage;\n        this.alertEvent.emit(null);\n    }\n}\n\n    \n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/list-component/mappedList.component.ts","import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n\n  ],\n  exports: [\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  \n  ]\n})\nexport class MaterialModule {}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/material.module.ts","module.exports = \"      <nav class=\\\"topnav\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"navbar-header\\\">\\n              <a class=\\\"topnav a\\\" routerLink=\\\"/home\\\">Home</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/documents\\\">Documents</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/details\\\">Details</a>\\n              <!-- Testing menue items ...\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/modal\\\">Modal</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/dialog\\\">Dialog</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/chart\\\">Chart</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/contextMenu\\\">Context Menu</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/treeView\\\">TreeView</a>\\n              <a class=\\\"navbar-brand\\\" routerLink=\\\"/treeGrid\\\">TreeGrid</a>\\n              -->\\n          </div>          \\n        </div>\\n      </nav>\\n\\n      \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/navbar-component/navbar.component.html\n// module id = ../../../../../src/app/navbar-component/navbar.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['../css/app.component.scss'],\n})\n\nexport class NavbarComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/navbar-component/navbar.component.ts","module.exports = \"<link href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\\\" rel=\\\"stylesheet\\\">\\n\\n<div >\\n  <h1 mat-dialog-title>Report Properties</h1> \\n  <!--<div mat-dialog-content class=\\\"dialog-container\\\"  [style.fontSize.px]=\\\"12\\\">-->\\n  <div mat-dialog-content style=\\\"width: 505px; font-size: 12px;\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Report Type\\\" (change)=\\\"onReportTypeChange($event.value)\\\" [(ngModel)]=\\\"selectedType\\\">\\n        <mat-option *ngFor=\\\"let r of repType_list\\\" [value]=\\\"r.FINANCIALREPORTTYPE + ': ' + r.DESCRIPTION\\\">\\n          {{ r.FINANCIALREPORTTYPE }}: {{ r.DESCRIPTION }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>  \\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Auditor\\\" (change)=\\\"onAuditorsChange($event.value)\\\" [(ngModel)]=\\\"selectedAuditor\\\">\\n        <mat-option *ngFor=\\\"let a of auditors_list\\\" [value]=\\\"a.AUDITORCODE + ': ' + a.DESCRIPTION\\\">\\n          {{ a.AUDITORCODE }}: {{ a.DESCRIPTION }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <br>\\n\\n    <mat-form-field>\\n      <input \\n        matInput [matDatepicker]=\\\"picker\\\" \\n        placeholder=\\\"Report Date\\\" \\n        (ngModelChange)=\\\"onReportDateChange($event)\\\" \\n        [ngModel]=\\\"startDate\\\"\\n      >\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n      \\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-checkbox (change)=\\\"onConsolidatedChange($event)\\\" [(ngModel)]=\\\"consolidated\\\">Consolidated </mat-checkbox>\\n\\n    <br>\\n    \\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Multiplier\\\" (change)=\\\"onMultipliersChange($event.value)\\\" [(ngModel)]=\\\"selectedMultiplier\\\">\\n          <mat-option *ngFor=\\\"let m of multipliers_list\\\" [value]=\\\"m.MULTIPLIERCODE + ': ' + m.DESCRIPTION\\\">\\n              {{ m.MULTIPLIERCODE }}: {{ m.DESCRIPTION }}\\n          </mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-checkbox (change)=\\\"onFYEChange($event)\\\" [(ngModel)]=\\\"fyeChange\\\">Fiscal Year End Change</mat-checkbox>\\n\\n    <br>\\n    \\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Currency\\\" (change)=\\\"onCurrencyChange($event.value)\\\" [(ngModel)]=\\\"selectedCurrency\\\">\\n          <mat-option *ngFor=\\\"let c of currency_list\\\" [value]=\\\"c.CURRENCYCODE + ': ' + c.ISODESCRIPTION\\\">\\n              {{ c.CURRENCYCODE }}: {{ c.ISODESCRIPTION }}\\n          </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Accounting Principle\\\" (change)=\\\"onPrincipleTypeChange($event.value)\\\" [(ngModel)]=\\\"selectedPrincipleTypeID\\\">\\n        <mat-option *ngFor=\\\"let p of principleTypes_list\\\" [value]=\\\"p.PRINCIPLETYPEID + ': ' + p.DESCRIPTION\\\">\\n          {{p.PRINCIPLETYPEID }}: {{ p.DESCRIPTION }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <br>\\n    \\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Source Document\\\" (change)=\\\"onSourceTypeChange($event.value)\\\" [(ngModel)]=\\\"selectedSourceTypeID\\\">\\n        <mat-option *ngFor=\\\"let s of sourceTypes_list\\\" [value]=\\\"s.SOURCETYPEID + ': ' + s.DESCRIPTION\\\">\\n          {{ s.SOURCETYPEID }}: {{ s.DESCRIPTION }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-form-field>\\n        <input matInput placeholder=\\\"Period Fiscal Year\\\"  (ngModelChange)=\\\"onPeriodFYChange($event)\\\" [(ngModel)]=\\\"selectedPeriodFY\\\">\\n    </mat-form-field>\\n\\n    <br>\\n    \\n    <mat-form-field>\\n      <mat-select placeholder=\\\"List of Previous Reports\\\" (change)=onPreviousReportChange($event.value)>\\n        <mat-option \\n          *ngFor=\\\"let pr of previousRepotsList\\\" \\n          [value]=\\\"pr.REPORTDATE + '::' + pr.FINANCIALREPORTTYPE + '::' + pr.CURRENCYCODE + '::' + pr.MULTIPLIERCODE\\\">\\n          {{ pr.REPORTDATE }}: {{ pr.FINANCIALREPORTTYPE}}: {{ pr.CURRENCYCODE }}: {{ pr.MULTIPLIERCODE }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-form-field>    \\n        <input matInput placeholder=\\\"Text extracted from header table\\\" disabled>\\n        <div>\\n          <label> {{selectedExtractedText}} </label>\\n        </div>    \\n    </mat-form-field>\\n\\n    <br>\\n    <mat-label>List of report properties saved</mat-label>\\n    <reportList #reportList \\n      (previousReportsEvent)=\\\"onPreviousReportChange(reportList.selectedItemText)\\\"\\n      (alertEvent)=\\\"alert.showAlert(reportList.gMessage)\\\"\\n    ></reportList>\\n      \\n    <br>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Wells Period\\\" (change)=\\\"onWellsPeriodsChange($event.value)\\\">\\n          <mat-option>None</mat-option>\\n          <mat-option \\n          *ngFor=\\\"let wp of wellsPeriodsList\\\"\\n          [value]=\\\"wp.REPORTDATE + '::' + wp.FINANCIALREPORTTYPE + '::' + wp.CURRENCYCODE + '::' + wp.MULTIPLIERCODE\\\">\\n          {{ wp.REPORTDATE }}: {{ wp.FINANCIALREPORTTYPE }}: {{ wp.CURRENCYCODE }}: {{ wp.MULTIPLIERCODE }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>  \\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Destination Period\\\" (change)=\\\"onDocumentHeaderChange($event.value)\\\">\\n        <mat-option>None</mat-option>\\n        <mat-option *ngFor=\\\"let h of documentHeaderList\\\" \\n        [value]=\\\"h.REPORTDATE + '::' + h.REPORTTYPE + '::' + h.CURRENCYCODE + '::' + h.MULTIPLIER\\\">\\n        {{ h.REPORTDATE }}: {{ h.REPORTTYPE }}: {{ h.CURRENCYCODE }}: {{ h.MULTIPLIER }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>  \\n\\n    <br>\\n    <alert #alert hidden></alert>\\n    <mat-label>Mapped Wells Period</mat-label>\\n    <mappedList #mappedList \\n      (alertEvent)=\\\"alert.showAlert(mappedList.gMessage)\\\" \\n    ></mappedList>\\n\\n  </div>\\n\\n  <br>\\n\\n</div>\\n<div mat-dialog-actions align=\\\"bottom\\\">\\n    <!--<button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>OK</button>-->\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseConfirm()\\\" cdkFocusInitial>OK</button>  \\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseCancel()\\\">Cancel</button>  \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/properties-component/properties.component.html\n// module id = ../../../../../src/app/properties-component/properties.component.html\n// module chunks = main","import {Component, EventEmitter, Output} from \"@angular/core\";\n//import {MatDialog, MatDialogConfig} from '@angular/material';\nimport {PropertiesService} from './properties.service';\nimport {MatDialogRef} from '@angular/material';\n\n@Component({\n    selector: 'propertiesDialog',\n    templateUrl: './properties.component.html',\n    styleUrls: ['../css/app.component.scss'],\n})\n  \n  export class PropertiesDialog {\n\n    public repType_list; \n    public multipliers_list;\n    public currency_list;\n    public sourceTypes_list;\n    public auditors_list;\n    public principleTypes_list;\n    public previousRepotsList;\n    public wellsPeriodsList;\n    public documentHeaderList;\n\n    //public selectedPeriod: string = \"\";\n    public selectedExtractedText: string=\"\";\n    public selectedType: string=\"\";\n    public selectedAuditor: string=\"\";\n    public selectedMultiplier: string=\"\";\n    public selectedCurrency: string=\"\";\n    public startDate: string=\"\";\n    public selectedConsolidated: string=\"0\";\n    public selectedFYEChange: string=\"0\";\n    public selectedPeriodFY: string=\"\";\n    public selectedSourceTypeID: string=\"\";\n    public selectedPrincipleTypeID: string=\"\";\n    public selectedReportDate: string = \"\";\n    public selectedWellsReportDate: string = \"\";\n    public selectedHeaderReportDate: string = \"\";\n\n\n    public consolidated: boolean=false;\n    public fyeChange: boolean=false;\n\n    constructor(public dialogRef: MatDialogRef<PropertiesDialog>,  public _propertiesService: PropertiesService) {\n        //console.log('I am in properties.constructor()!');\n        //dialogRef.disableClose = true; // Disable click outside of angular material dialog\n\n        // the following statements are necessary in order to showing the selected values when dialog opens:   \n        this.selectedExtractedText = this.getSelectedExtractedText(); \n        this.selectedType = this.getSelectedType(); \n        this.selectedAuditor = this.getSelectedAuditor(); \n        this.selectedMultiplier = this.getSelectedMultiplier(); \n        this.selectedCurrency = this.getSelectedCurrency(); \n        this.startDate = this.getSelectedReportDate();\n\n        this.selectedConsolidated = this.getSelectedConsolidated();\n        this.selectedFYEChange = this.getSelectedFYEChange();\n        \n        this.selectedPeriodFY = this.getSelectedPeriodFY();\n        this.selectedSourceTypeID = this.getSelectedSourceTypeID();\n        this.selectedPrincipleTypeID= this.getSelectedPrincipleTypeID();\n\n        this.consolidated = (this.selectedConsolidated === \"1\");\n        this.fyeChange = (this.selectedFYEChange === \"1\");\n\n        //Clear list boxes:\n        this._propertiesService.setSelectedPreviousReport(\"\");\n        this._propertiesService.setSelectedWellsPeriod(\"\");\n        this._propertiesService.setSelectedDocumentHeader(\"\");\n\n    }  \n        \n    ngOnInit() {\n        //console.log('I am in properties.ngOnInit()!');\n        // Retrieves data from database and makes it available for html to load it in dialog components:\n        this.getRepTypesList();        \n        this.getMultipliersList();\n        this.getCurrencyList();\n        this.getSourceTypesList();\n        this.getAuditorsList();\n        this.getPrincipleTypesList();\n        this.getPreviousReportsList();\n        this.getWellsPeriodsList();\n        this.getDocumentHeaderList();\n\n        this.getSelectedReportDate();\n        this.getSelectedConsolidated();\n        this.getSelectedFYEChange();\n        this.getSelectedPeriodFY();\n        this.getSelectedSourceTypeID();\n        this.getSelectedPrincipleTypeID();\n\n        //this.consolidated = (this.selectedConsolidated === \"1\");\n        //this.fyeChange = (this.selectedFYEChange === \"1\");\n\n        //console.log(\"properties.PERIODFY=  \" + this.selectedPeriodFY);\n        //console.log(\"propertirs.SOURCETYPEID=  \" + this.selectedSourceTypeID);\n        //console.log(\"properties.PRINCIPLETYPEID=  \" + this.selectedPrincipleTypeID);\n    }\n    \n    getRepTypesList() { \n        //console.log('I am in getRepTypeList()!');\n        this._propertiesService.getReportTypesList().subscribe(\n            // the first argument is a function which runs on success\n            data => { this.repType_list = data},\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            //() => //console.log('done with getRepTypesList()')\n            () => {\n                let self = this;\n                var newArr = self.repType_list.filter(function(item){\n                    return item.FINANCIALREPORTTYPE === self.selectedType;\n                });\n                if (newArr.length > 0) {\n                    self.selectedType =  newArr[0].FINANCIALREPORTTYPE + \": \"  + newArr[0].DESCRIPTION; \n                    //console.log(\"SELECTEDTYPE = \" + self.selectedType);\n                }\n            }\n        );\n    }\n\n    getMultipliersList() { \n        //console.log('I am in getMultipliersList()!');\n        this._propertiesService.getMultipliersList().subscribe(\n\n            // the first argument is a function which runs on success\n            data => { this.multipliers_list = data},\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            //() => {}//console.log('done with getMultipliersList()')\n            () => {\n                let self = this;\n                //console.log(\"SELECTED-MULTIPLIER=  \" + self.selectedMultiplier);\n                var newArr = self.multipliers_list.filter(function(item){\n                    return item.MULTIPLIERCODE === self.selectedMultiplier;\n                });\n                if (newArr.length > 0) {\n                    self.selectedMultiplier =  newArr[0].MULTIPLIERCODE + \": \"  + newArr[0].DESCRIPTION; \n                }\n            }\n\n        );\n    }\n\n    getCurrencyList() { \n        //console.log('I am in getCurrencyList()!');\n        this._propertiesService.getCurrencyList().subscribe(\n            // the first argument is a function which runs on success\n          data => { this.currency_list = data},\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => {\n            let self = this;\n            //console.log(\"SELECTED-CURRENCY=  \" + self.selectedCurrency);\n            var newArr = self.currency_list.filter(function(item){\n                return item.CURRENCYCODE === self.selectedCurrency;\n            });\n            if (newArr.length > 0) {\n                self.selectedCurrency =  newArr[0].CURRENCYCODE + \": \"  + newArr[0].ISODESCRIPTION; \n            }\n      }\n        );\n    }\n\n    getSourceTypesList() { \n        //console.log('I am in getSourceTypesList()!');\n        this._propertiesService.getSourceTypesList().subscribe(\n            // the first argument is a function which runs on success\n            data => { this.sourceTypes_list = data},\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            //() => {}//console.log('done with getSourceTypesList()')\n            () => {\n                let self = this;\n                    let newArr = self.sourceTypes_list.filter(function(item){\n                    return item.SOURCETYPEID == self.selectedSourceTypeID;\n                });\n                if (newArr.length > 0) {\n                    self.selectedSourceTypeID =  newArr[0].SOURCETYPEID + \": \"  + newArr[0].DESCRIPTION; \n                   // console.log(\"SELECTED-SOURCE-TYPEID-2=  \" + self.selectedSourceTypeID);\n                }\n            }\n        );\n    }\n\n    getAuditorsList() { \n        //console.log('I am in getAuditorsList()!');\n        this._propertiesService.getAuditorsList().subscribe(\n            // the first argument is a function which runs on success\n            data => { this.auditors_list = data},\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            //() => {}//console.log('done with getAuditorsList()')\n            () => {\n                let self = this;\n                let newArr = self.auditors_list.filter(function(item){\n                    return item.AUDITORCODE === self.selectedAuditor;\n                });\n                if (newArr.length > 0) {\n                    self.selectedAuditor =  newArr[0].AUDITORCODE + \": \"  + newArr[0].DESCRIPTION; \n                    //console.log(\"SELECTEDAUDITOR=  \" + self.selectedAuditor);\n                }\n            }\n        );\n    }\n\n    getPrincipleTypesList() { \n        //console.log('I am in getPrincipleTypesList()!');\n        this._propertiesService.getPrincipleTypesList().subscribe(\n            // the first argument is a function which runs on success\n            data => { this.principleTypes_list = data},\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            //() => {}//console.log('done with getPrincipleTypesList()')\n            () => {\n                let self = this;\n                //console.log(\"SELECTED-PRINCIPAL-TYPE-ID=  \" + self.selectedPrincipleTypeID);\n                let newArr = self.principleTypes_list.filter(function(item){\n                    return item.PRINCIPLETYPEID == self.selectedPrincipleTypeID;\n                });\n                if (newArr.length > 0) {\n                    self.selectedPrincipleTypeID =  newArr[0].PRINCIPLETYPEID + \": \"  + newArr[0].DESCRIPTION; \n                    //console.log(\"SELECTEDPRINCIPALTYPEID=  \" + self.selectedPrincipleTypeID);\n                }\n            }\n\n        );\n    }\n\n    getPreviousReportsList() { \n        //console.log('I am in getPreviousReportsList()!');\n        this._propertiesService.getPreviousReportsList().subscribe(\n            // the first argument is a function which runs on success\n          data => { this.previousRepotsList = data},\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => {}//console.log('done with getPreviousReportsList()')\n        );\n    }\n\n    getWellsPeriodsList() { \n        //console.log('I am in getWellsPeriodsList()!');\n        this._propertiesService.getWellsPeriodsList().subscribe(\n            // the first argument is a function which runs on success\n          data => { this.wellsPeriodsList = data},\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => {}//console.log('done with getWellsPeriodsList()')\n        );\n    }\n\n    getDocumentHeaderList() { \n        //console.log('I am in getDocumentHeaderList()!');\n        this._propertiesService.getDocumentHeaderList().subscribe(\n            // the first argument is a function which runs on success\n            data => { \n                this.documentHeaderList = data; \n                //this.setSavedReportsList(data);\n            },\n          // the second argument is a function which runs on error\n          err => console.error(err),\n          // the third argument is a function which runs on completion\n          () => {}//console.log('done with getWellsPeriodsList()')\n        );\n    }\n\n    public onAuditorsChange(newValue: string) {\n        //console.log(\"PR.onAuditorsChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\":\", 2);\n        this.selectedAuditor = newValue;\n        this._propertiesService.setSelectedAuditor(vString[0]); // this will be used in topPanel.component.ts for saving properties data\n    }\n\n    public onMultipliersChange(newValue: string) {\n        //console.log(\"PR.onMultipliersChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\":\", 2);\n        this.selectedMultiplier = newValue;\n        this._propertiesService.setSelectedMultiplier(vString[0]); // this will be used in topPanel.component.ts for saving properties data\n    }\n\n    public onReportTypeChange(newValue: string) {\n        //console.log(\"PR.onReportTypeChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\":\", 2);\n        this.selectedType = newValue;\n        this._propertiesService.setSelectedType(vString[0]); // this will be used in topPanel.component.ts for saving properties data\n    }\n\n    public onCurrencyChange(newValue: string) {\n        //console.log(\"PR.onCurrencyChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\":\", 2);\n        this.selectedCurrency = newValue;\n        this._propertiesService.setSelectedCurrency(vString[0]); // this will be used in topPanel.component.ts for saving properties data\n    }\n\n    public onPrincipleTypeChange(newValue: string) {\n        //console.log(\"PR.onPrincipleTypeChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\":\", 2);\n        this.selectedPrincipleTypeID = newValue;\n        this._propertiesService.setSelectedPrincipleTypeID(vString[0]); // this will be used in topPanel.component.ts for saving properties data\n        //console.log(\"PR.onPrincipleTypeChange ... selectedPrincipleTypeID **** \" + vString[0]);\n    }\n\n    public onSourceTypeChange(newValue: string) {\n        //console.log(\"PR.onSourceTypeChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\":\", 2);\n        this.selectedSourceTypeID = newValue;\n        this._propertiesService.setSelectedSourceTypeID(vString[0]); // this will be used in topPanel.component.ts for saving properties data\n        //console.log(\"PR.onSourceTypeChange ... selectedPrincipleTypeID **** \" + vString[0]);\n    }\n\n    public onConsolidatedChange(event) {\n        //console.log(\"PR.onConsolidatedChange ... newValue **** \" + event.checked);\n        this.selectedConsolidated = (event.checked) ? \"1\" : \"0\";\n        //this._propertiesService.setSelectedConsolidated(this.selectedConsolidated); // this will be used in topPanel.component.ts for saving properties data\n        console.log(\"PR.onConsolidatedChange ... selectedConsolidated **** \" + this.selectedConsolidated);\n    }\n\n    public onFYEChange(event) {\n        //console.log(\"PR.onFYEChange ... newValue **** \" + event.checked);\n        this.selectedFYEChange = (event.checked) ? \"1\" : \"0\";\n        //this._propertiesService.setSelectedFYEChange(this.selectedFYEChange); // this will be used in topPanel.component.ts for saving properties data\n        console.log(\"PR.onFYEChange ... selectedFYEChange **** \" + this.selectedFYEChange);\n    }\n\n    public onPeriodFYChange(newValue: string) {\n        \n        console.log(\"PR.onPeriodFYChange ... newValue **** \" + newValue);\n        this.selectedPeriodFY = newValue;\n        this._propertiesService.setSelectedPeriodFY(newValue); // This will be used in topPanel.component.ts for saving properties data\n        //console.log(\"PR.onPeriodFYChange ... selectedPeriodFY **** \" + this.selectedPeriodFY);\n        \n    }\n\n    public onReportDateChange(newValue: any) {\n        console.log(\"PR.onReportDateChange ... New Date: \" + newValue);\n        this.selectedReportDate = (new Date(newValue)).toISOString();\n        this._propertiesService.setSelectedReportDate(this.selectedReportDate); // his will be used in topPanel.component.ts for saving properties data\n        console.log(\"PR.onReportDateChange ... selectedReportDate **** \" + this.selectedReportDate);\n    }\n\n    public onWellsPeriodsChange(newValue: string) {\n        //console.log(\"PR.onWellsPeriodsChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\"::\", 4);\n        this.selectedWellsReportDate = vString[0];\n        this._propertiesService.setSelectedWellsPeriod(newValue); // this will be used in mappedList.component.add()\n        this._propertiesService.setSelectedWellsReportDate(this.selectedWellsReportDate); // this will be used in mappedList.component.add()\n        //console.log(\"PR.onWellsPeriodsChange ... selectedWellsReportDate **** \" + this.selectedWellsReportDate);\n    }\n\n    public onDocumentHeaderChange(newValue: string) {\n        //console.log(\"PR.onDocumentHeaderChange ... newValue **** \" + newValue);\n        let vString = newValue.split(\"::\", 4);\n        this.selectedHeaderReportDate = vString[0];\n        this._propertiesService.setSelectedDocumentHeader(newValue); // this will be used in mappedList.component.add()\n        this._propertiesService.setSelectedHeaderReportDate(this.selectedHeaderReportDate); // this will be used in mappedList.component.add()\n    }\n\n    public onPreviousReportChange(newValue: string) {\n        let vString = newValue.split(\"::\", 4);\n\n        //console.log(\"PR.onPreviousReportChange ... newValue **** \" + newValue);\n        //this._propertiesService.setSelectedListName(\"PreviousReports\");\n        this._propertiesService.setSelectedPreviousReport(newValue); // this will be used in ListComponent.add()\n\n        this.selectedReportDate = vString[0];\n        this.selectedType = vString[1];\n        this.selectedCurrency = vString[2];\n        this.selectedMultiplier = vString[3];\n\n        this._propertiesService.setSelectedType(this.selectedType);\n        this._propertiesService.setSelectedCurrency(this.selectedCurrency);\n        this._propertiesService.setSelectedMultiplier(this.selectedMultiplier);\n\n        console.log(\"selectedReportDate: \" + this.selectedReportDate);\n        if (this.selectedReportDate === '0000-00-00') {\n            this.selectedReportDate = ((new Date()).toISOString());\n        } else if (this.selectedReportDate !== 'null') {\n            let re = /-/gi; \n            let newDateString = this.selectedReportDate.replace(re, '/');\n            //console.log(\"New Date: \" + newDateString);\n            this.selectedReportDate = (new Date(newDateString)).toISOString();\n            console.log(\"selectedReportDate: \" + this.selectedReportDate);\n            this._propertiesService.setSelectedReportDate(this.selectedReportDate);\n            this.startDate = this.selectedReportDate;\n        }\n      \n        //console.log('properties.onChange()- Type: ' + this.selectedType);\n        //console.log('properties.onChange()- Multiplier: ' + this.selectedMultiplier);\n        //console.log('properties.onChange()- Currency: ' + this.selectedCurrency);\n        //console.log('properties.onChange()- ReportDate: ' + this.selectedReportDate);\n    \n        this.getRepTypesList();        \n        this.getMultipliersList();\n        this.getCurrencyList();\n    }\n\n    public getSelectedExtractedText() {\n        ////console.log(\"I'm in properties.component.ts.getSelectedExtractedText: \" + \n                //this._propertiesService.getSelectedExtractedText());\n         return this._propertiesService.getSelectedExtractedText();\n    }\n\n    public getSelectedType() {\n        return this._propertiesService.getSelectedType();\n    }\n\n   public getSelectedAuditor() {\n    return this._propertiesService.getSelectedAuditor();\n    }\n\n    public getSelectedMultiplier() {\n        return this._propertiesService.getSelectedMultiplier();\n    }\n\n    public getSelectedCurrency() {\n        return this._propertiesService.getSelectedCurrency();\n    }\n\n    public getSelectedReportDate() {\n        return this._propertiesService.getSelectedReportDate();\n        //return new FormControl((new Date()).toISOString());\n    }\n\n    public getSelectedConsolidated() {\n        return this._propertiesService.getSelectedConsolidated();\n    }\n\n    public getSelectedFYEChange() {\n        return this._propertiesService.getSelectedFYEChange();\n    }\n\n    public getSelectedPeriodFY() {\n        return this._propertiesService.getSelectedPeriodFY();\n    }\n\n    public getSelectedSourceTypeID() {\n        return this._propertiesService.getSelectedSourceTypeID();\n    }\n\n    public getSelectedPrincipleTypeID() {\n        return this._propertiesService.getSelectedPrincipleTypeID();\n    }\n\n    onCloseConfirm() {\n        this.dialogRef.close('ok');\n        this._propertiesService.setSelectedConsolidated(this.selectedConsolidated); // this will be used in topPanel.component.ts for saving properties data\n        this._propertiesService.setSelectedFYEChange(this.selectedFYEChange); // this will be used in topPanel.component.ts for saving properties data\n    }\n\n    onCloseCancel() {\n        this.dialogRef.close('Cancel');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/properties-component/properties.component.ts","import {Injectable} from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\n//import { Observable } from 'rxjs/Observable';\nimport { AppSettings } from '../appsettings';\nimport {documentDetailsService} from '../documentDetails-component/document-details.service';\nimport 'rxjs/add/operator/map'; // this is necessary\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class PropertiesService {\n    public selectedExtractedText: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedType: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedAuditor: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedMultiplier: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedCurrency: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedReportDate: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedSourceDate: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedStartDate: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n    public selectedHeaderReportDate: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedWellsReportDate: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n    public selectedConsolidated: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedFYEChange: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedPeriodFY: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedSourceTypeID: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedPrincipleTypeID: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedPreviousReport: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedWellsPeriod: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    public selectedDocumentHeader: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n    constructor(private _docDetailsService: documentDetailsService, public http:Http) {}\n\n    getReportTypesList() {\n        const endpoint = AppSettings.REPORT_TYPES_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getMultipliersList() {\n        const endpoint = AppSettings.MULTIPLIERS_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getCurrencyList() {\n        const endpoint = AppSettings.CURRENCY_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getSourceTypesList() {\n        const endpoint = AppSettings.SOURCE_TYPES_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getAuditorsList() {\n        const endpoint = AppSettings.AUDITORS_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getPrincipleTypesList() {\n        const endpoint = AppSettings.PRINCIPLE_TYPE_LIST_API_ENDPOINT;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getPreviousReportsList() {\n        const endpoint = AppSettings.PPREVIOUS_REPORTS_LIST_API_ENDPOINT + \"?COMPNUMBER=\" + \n                this._docDetailsService.selectedCompNumber;\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getWellsPeriodsList() {\n        const endpoint = AppSettings.WELLS_PERIODS_LIST_API_ENDPOINT \n                + \"?COMPNUMBER=\" + this._docDetailsService.selectedCompNumber\n                + \"&REPORTGROUPCODE=\" + this._docDetailsService.selectedReportTypeCode\n                + \"&FORMCODE=\" + this._docDetailsService.selectedFormCode.getValue();\n        return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    getDocumentHeaderList() {\n        ////console.log('Arrived in getDocumentHeaderList() !!! ');\n        //console.log('propertiesService selectedDocumentID: ' + this._docDetailsService.selectedDocID);\n        //console.log('propertiesService selectedFormCode: ' + this._docDetailsService.selectedFormCode.getValue());\n        const endpoint = AppSettings.DOCUMENT_HEADER_LIST_API_ENDPOINT \n                + \"?DOCUMENTID=\" + this._docDetailsService.selectedDocID\n                //+ \"&FORM=\" + this._docDetailsService.selectedFormCode.getValue(); //mySQL\n                + \"&FORMCODE=\" + this._docDetailsService.selectedFormCode.getValue();\n                ////console.log('getDocumentHeaderList endpoint: ' + endpoint);\n                return this.http.get(endpoint).map((res:Response) => res.json());\n    }\n\n    public setSelectedExtractedText(newText: string) {\n        //console.log(\"in properties.service.ts sets CAPTION to: \" + newText);\n        this.selectedExtractedText.next(newText);\n    }\n\n    public setSelectedType(newType: string) {\n        this.selectedType.next(newType);\n    }\n\n    public setSelectedAuditor(newAuditor: string) {\n        this.selectedAuditor.next(newAuditor);\n    }\n\n    public setSelectedMultiplier(newMultiplier: string) {\n        //console.log(\"I'm in properties.service.ts setSelectedMultiplier: \" + newMultiplier);\n        this.selectedMultiplier.next(newMultiplier);\n    }\n\n    public setSelectedCurrency(newCurrency: string) {\n        this.selectedCurrency.next(newCurrency);\n    }\n\n    public setSelectedReportDate(newDate: string) {\n        //newDate = newDate.substr(0, 10);\n        //console.log(\"I'm in properties.service.setSelectedReportDate: \" + newDate);\n        this.selectedReportDate.next(newDate);\n    }\n\n    public setSelectedSourceDate(newDate: string) {\n        newDate = newDate.substr(0, 10);\n        console.log(\"I'm in properties.service.setSelectedSourceDate: \" + newDate);\n        this.selectedSourceDate.next(newDate);\n    }\n\n    public setSelectedStartDate(newDate: string) {\n        newDate = newDate.substr(0, 10);\n        //console.log(\"I'm in properties.service.setSelectedStartDate: \" + newDate);\n        this.selectedStartDate.next(newDate);\n    }\n\n    public setSelectedWellsReportDate(newDate: string) {\n        //console.log(\"I'm in properties.service.setSelectedWellsReportDate: \" + newDate);\n        this.selectedWellsReportDate.next(newDate);\n    }\n\n    public setSelectedHeaderReportDate(newDate: string) {\n        //console.log(\"I'm in properties.service.setSelectedHeaderReportDate: \" + newDate);\n        this.selectedHeaderReportDate.next(newDate);\n    }\n\n    public setSelectedConsolidated(newChecked: string) {\n        //console.log(\"I'm in properties.service.ts setSelectedConsolidated: \" + newChecked);\n        this.selectedConsolidated.next(newChecked);\n    }\n\n    public setSelectedFYEChange(newValue: string) {\n        this.selectedFYEChange.next(newValue);\n    }\n\n    public setSelectedPeriodFY(newValue: string) {\n        //console.log(\"I'm in properties.service.ts setSelectedPeriodFY: \" + newValue);\n        this.selectedPeriodFY.next(newValue);\n    }\n\n    public setSelectedSourceTypeID(newValue: string) {\n        this.selectedSourceTypeID.next(newValue);\n    }\n\n    public setSelectedPrincipleTypeID(newValue: string) {\n        this.selectedPrincipleTypeID.next(newValue);\n    }\n\n    public setSelectedPreviousReport(newValue: string) {\n        //console.log(\"I'm in properties.service.ts setSelectedPreviousReport: \" + newValue);\n        this.selectedPreviousReport.next(newValue);\n    }\n\n    public setSelectedWellsPeriod(newValue: string) {\n        //console.log(\"I'm in properties.service.ts setSelectedwellsPeriod: \" + newValue);\n        this.selectedWellsPeriod.next(newValue);\n    }\n\n    public setSelectedDocumentHeader(newValue: string) {\n        //console.log(\"I'm in properties.service.ts setSelectedDocumentHeader: \" + newValue);\n        this.selectedDocumentHeader.next(newValue);\n    }\n\n    public getSelectedExtractedText() {\n        ////console.log(\"I'm in properties.service.ts getSelectedExtractedText: \" + this.selectedExtractedText.getValue());\n        return this.selectedExtractedText.getValue();\n    }\n\n    public getSelectedType() {\n        //console.log(\"I'm in properties.service.ts getSelectedType: \" + this.selectedType.getValue());\n        return this.selectedType.getValue();\n    }\n\n    public getSelectedAuditor() {\n        //console.log(\"I'm in properties.service.ts getSelectedAuditor: \" + this.selectedAuditor.getValue());\n        return this.selectedAuditor.getValue();\n    }\n\n    public getSelectedMultiplier() {\n        //console.log(\"I'm in properties.service.ts getSelectedMultiplier: \" + this.selectedMultiplier.getValue());\n        return this.selectedMultiplier.getValue();\n    }\n\n    public getSelectedCurrency() {\n        //console.log(\"I'm in properties.service.ts getSelectedCurrency: \" + this.getSelectedCurrency.getValue());\n        return this.selectedCurrency.getValue();\n    }\n\n    public getSelectedReportDate() {\n        //console.log(\"I'm in properties.service.ts getSelectedReportDate: \" + this.selectedReportDate.getValue());\n        return this.selectedReportDate.getValue();\n    }\n    \n    public getSelectedStartDate() {\n        //console.log(\"I'm in properties.service.ts getSelectedStartDate: \" + this.selectedStartDate.getValue());\n        return this.selectedStartDate.getValue();\n    }\n    \n    public getSelectedSourceDate() {\n        //console.log(\"I'm in properties.service.ts getSelectedSourceDate: \" + this.selectedSourceDate.getValue());\n        return this.selectedSourceDate.getValue();\n    }\n    \n    public getSelectedWellsReportDate() {\n        //console.log(\"I'm in properties.service.ts getSelectedWellsReportDate: \" + this.selectedWellsReportDate.getValue());\n        return this.selectedWellsReportDate.getValue();\n    }\n\n    public getSelectedHeaderReportDate() {\n        //console.log(\"I'm in properties.service.ts getSelectedHeaderReportDate: \" + this.selectedHeaderReportDate.getValue());\n        return this.selectedHeaderReportDate.getValue();\n    }\n\n    public getSelectedConsolidated() {\n        //console.log(\"I'm in properties.service.ts getSelectedConsolidated: \" + this.selectedConsolidated.getValue());\n        return this.selectedConsolidated.getValue();\n    }\n\n    public getSelectedFYEChange() {\n        //console.log(\"I'm in properties.service.ts getSelectedFYEChange: \" + this.selectedFYEChange.getValue());\n        return this.selectedFYEChange.getValue();\n    }\n\n    public getSelectedPeriodFY() {\n       //console.log(\"I'm in properties.service.ts getSelectedPeriodFY: \" + this.selectedPeriodFY.getValue());\n       return (this.selectedPeriodFY.getValue() !== 'undefined' ? this.selectedPeriodFY.getValue() : '');\n       //return this.selectedPeriodFY.getValue();\n    }\n\n    public getSelectedSourceTypeID() {\n        //console.log(\"I'm in properties.service.ts getSelectedSourceTypeID: \" + this.selectedSourceTypeID.getValue());\n        return this.selectedSourceTypeID.getValue();\n    }\n\n    public getSelectedPrincipleTypeID() {\n        //console.log(\"I'm in properties.service.ts getSelectedPrincipleTypeID: \" + this.selectedPrincipleTypeID.getValue());\n        return this.selectedPrincipleTypeID.getValue();\n    }\n\n    public getSelectedPreviousReport() {\n        //console.log(\"I'm in properties.service.ts getSelectedPreviousReport: \" + this.selectedPreviousReport.getValue());\n        return this.selectedPreviousReport.getValue();\n    }\n\n    public getSelectedWellsPeriod() {\n        //console.log(\"I'm in properties.service.ts getSelectedWellsPeriod: \" + this.selectedWellsPeriod.getValue());\n        return this.selectedWellsPeriod.getValue();\n    }\n\n    public getSelectedDocumentHeader() {\n        //console.log(\"I'm in properties.service.ts getSelectedDocumentHeader: \" + this.selectedDocumentHeader.getValue());\n        return this.selectedDocumentHeader.getValue();\n    }\n\n    //public getSelectedListName() {\n    //    console.log(\"I'm in properties.service.ts getSelectedListName: \" + this.selectedListName.getValue());\n    //    return this.selectedListName.getValue();\n    //}\n\n    //public setSelectedListName(newValue: any) {\n        //console.log(\"I'm in properties.service.ts setSelectedListName: \" + newValue);\n        //this.selectedListName.next(newValue);\n    //}\n\n    public saveDocumentHeader(documentHeader: any[]) {   \n        console.log(\"Saving \" + documentHeader.length + \" records for Document ID: \" + documentHeader[0].doc_id);\n        const path = AppSettings.SAVE_HEADER_API_ENDPOINT; \n        //if (this.selectedDocID > 0) {\n            console.log(\"URL: \" + path);\n            return this.http.post(path, documentHeader).map((res:Response) => res.json());\n        //}\n        //else return null;\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/properties-component/properties.service.ts","module.exports = \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n\\n    <!-- jQuery library -->\\n    <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\\\"></script>\\n    \\n    <!-- Latest compiled JavaScript -->\\n    <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script> \\n  </head>\\n    \\n    <!-- Latest compiled and minified CSS \\n    <link rel=\\\"stylesheet\\\" href=\\\"https://www.w3schools.com/w3css/4/w3.css\\\">\\n    -->\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n    \\n  <body>\\n    <div class=\\\"body\\\">\\n      <navbar></navbar>    \\n      <router-outlet></router-outlet>    \\n    </div>  <!-- End of class body  -->              \\n  </body>\\n  \\n</html>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/ptm-component/ptm.component.html\n// module id = ../../../../../src/app/ptm-component/ptm.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ptm-frontend',\n  templateUrl: './ptm.component.html',\n  styleUrls: ['../css/app.component.scss'],\n})\n\nexport class PTMComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/ptm-component/ptm.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".classGreen {\\n    color: green;\\n}\\n\\n.classRed {\\n    color: red;\\n}\\n\\n.classPink {\\n    color: rgb(241, 36, 180);\\n}\\n\\n.classGrey {\\n    color: grey;\\n}\\n\\n.classOrange {\\n    color: Orange;\\n}\\n\\n.classBlue {\\n    color: blue;\\n}\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/red-component/red-component.css\n// module id = ../../../../../src/app/red-component/red-component.css\n// module chunks = main","module.exports = \"<!-- <span  [ngClass]=\\\"{classGreen:findAccount()}\\\">{{  params.value }}</span> -->\\n<!-- style=\\\"color: red\\\">{{ params.value }} -->\\n<span [ngSwitch]=getColor()>\\n    <span *ngSwitchCase=\\\"'green'\\\" [ngClass]=\\\"{clasGreen:true}\\\" >{{params.value}}</span>\\n    <span *ngSwitchCase=\\\"'red'\\\" [ngClass]=\\\"{classRed:true}\\\" >{{params.value}}</span>\\n    <span *ngSwitchCase=\\\"'pink'\\\" [ngClass]=\\\"{classPink:true}\\\" >{{params.value}}</span>\\n    <span *ngSwitchCase=\\\"'grey'\\\" [ngClass]=\\\"{classGrey:true}\\\" >{{params.value}}</span>\\n    <span *ngSwitchCase=\\\"'orange'\\\" [ngClass]=\\\"{classOrange:true}\\\" >{{params.value}}</span>\\n    <span *ngSwitchCase=\\\"'blue'\\\" [ngClass]=\\\"{classBlue:true}\\\" >{{params.value}}</span>\\n    <span *ngSwitchDefault> {{ params.value}}</span>\\n</span>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/red-component/red-component.html\n// module id = ../../../../../src/app/red-component/red-component.html\n// module chunks = main","import {Component} from \"@angular/core\";\n\n@Component({\n    selector: 'app-red-component',\n    templateUrl: './red-component.html',\n    styleUrls: ['./red-component.css'],\n})\nexport class RedComponent {\n    public color='black';\n    public account: string;\n  \n    private params: any;\n\n    constructor() {}\n    \n    agInit(params: any): void {\n        this.params = params;\n        //this.account = params.value;\n    }\n\n    public getColor() {\n        this.account = this.params.value;\n        console.log('ACCOUNT: ') + this.account\n        switch(this.account) { \n            case \"'ASSETS'\": {this.color = 'green'}\n            case \"'Non-current asset'\": {this.color = 'red'}\n            default: {this.color = 'orange'}\n        }\n        return this.color;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/red-component/red-component.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class SpinnerService {\n    public status: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    display(value: boolean) {\n        this.status.next(value);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/shared/spinner.service.ts","import { Directive, ElementRef, Renderer, Input, OnInit } from '@angular/core';\n\nexport class Position {\n    constructor(public x: number, public y: number) {\n    }\n}\n\nexport enum SplitBehaviour {\n    fixed,\n    dynamic\n}\n\n/**\n * Marks an element as content area inside a resizable split container.\n * The input value of the directive can either be 'fixed' or 'dynamic' and describes the way\n * the content area is expected to resize within the split container space. \n * - A fixed element is expected to have an explicitly defined size, which can be resized by the user through a split element\n * - A dynamic elment is expected to fill up the space next to fixed elements.\n * \n * Initially, the directive will set CSS flexbox attributes to stack them horizontally.\n * It also serves as a data provider to expose the element width of the hosting content area, which is most likely a div.\n * Last but not least, the directive takes care of resizing the host element.\n * \n * @example \n * <div style=\"width:100px\" split-behaviour=\"fixed\">\n * </div>\n **/\n@Directive({\n    selector: '[split-behaviour]'\n})\nexport class SplitBehaviourDirective implements OnInit {\n    private _behaviour: SplitBehaviour;\n\n    constructor(private el: ElementRef, private renderer: Renderer) {\n    }\n\n    @Input('split-behaviour')\n    public set behaviour(value: string) {\n        this._behaviour = SplitBehaviour[value];\n    }\n\n    public get behaviour(): string {\n        return SplitBehaviour[this._behaviour];\n    }\n\n    public resize(vector: Position) {\n        this.renderer.setElementStyle(this.el.nativeElement, 'width', `${vector.x}px`);\n    }\n\n    public getElementWidth(): number {\n        let paddingL = parseInt(window.getComputedStyle(this.el.nativeElement, null).getPropertyValue(\"padding-left\"));\n        let paddingR = parseInt(window.getComputedStyle(this.el.nativeElement, null).getPropertyValue(\"padding-right\"));\n        return <number>this.el.nativeElement.offsetWidth - paddingL - paddingR;\n    }\n\n    public ngOnInit() {\n        if(this._behaviour.valueOf() == SplitBehaviour.fixed.valueOf()) {\n            this.renderer.setElementStyle(this.el.nativeElement, 'flex', '0 0 auto');\n        }\n        else if(this._behaviour.valueOf() == SplitBehaviour.dynamic.valueOf()) {\n            this.renderer.setElementStyle(this.el.nativeElement, 'flex', '1 1 auto');\n        }\n        this.renderer.setElementStyle(this.el.nativeElement, 'overflow', 'auto');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/splitter-component/splitBehaviour.directive.ts","import { Component, ContentChildren, QueryList, ComponentFactoryResolver, ViewContainerRef, AfterContentInit } from '@angular/core';\n\nimport { SplitterComponent } from './splitter.component';\nimport { SplitBehaviourDirective, SplitBehaviour, Position } from './splitBehaviour.directive';\n\n/**\n * Hosts resizable content areas divided by a draggable border (splitter). \n * \n * The split container defined flex attributes to allow the horizontal arrangement of child content areas.\n * On initialization, it will query all child elements in the light DOM annotated by the split-behaviour directive\n * and separate them by splitters.\n * As the splitBehaviour directive manages concrete content area resizing, dragging events of the splitter (positionChanged) are subscribed\n * and propagated to the directive.\n **/\n@Component({\n    selector: 'split-container',\n    template: `\n        <div class=\"split-container\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .split-container {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: no-wrap;\n            flex-grow: 1;\n            height:100%;\n        }\n    `]\n})\nexport class SplitContainerComponent implements AfterContentInit {\n    // Workaround: We want to query all child elements hosting a SplitBehaviourDirective instance,\n    // but we both need the respective ViewContainerRef (for splitter element creation)\n    // as well as the respective Directive implementation instance.\n    // There might be a better way to achive this...\n    @ContentChildren(SplitBehaviourDirective, {read: ViewContainerRef})\n    private panesVcr: QueryList<ViewContainerRef>;\n\n    @ContentChildren(SplitBehaviourDirective)\n    private panes: QueryList<SplitBehaviourDirective>;\n\n    constructor(private resolver: ComponentFactoryResolver) {\n    }\n\n    public ngAfterContentInit(): void {\n        let splitterFactory = this.resolver.resolveComponentFactory(SplitterComponent);\n\n        let paneDirectives = this.panes.toArray();\n        this.panesVcr.map((vcr, idx) => {\n            if(paneDirectives[idx].behaviour == SplitBehaviour[SplitBehaviour.fixed]) {\n                let splitter = vcr.createComponent(splitterFactory);\n                splitter.instance.splitBehaviour = paneDirectives[idx];\n                splitter.instance.positionChanged.subscribe((pos: Position) => {\n                    paneDirectives[idx].resize(pos);\n                });\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/splitter-component/splitContainer.component.ts","import { Component, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';\nimport { SplitBehaviourDirective, Position } from './splitBehaviour.directive';\n\n/**\n * A horizontal, draggable divider element between resizable content areas within a split container.\n * This component and its creation is managed by a split container.\n **/\n@Component({\n    selector: 'splitter',\n    template: `\n        <div #splitter class=\"splitter\" \n            (mousedown)=\"onMouseDown($event)\" \n            (document:mouseup)=\"onMouseUp($event)\" \n            (document:mousemove)=\"onMouseMove($event)\">\n        </div>\n    `,\n    host: { 'style': 'position:relative' },\n    styles: [`\n        .splitter {\n            flex: 0 0 auto;\n            width: 10px;\n            height:100%;\n            cursor: col-resize;\n\n\n            background-position:50% 50%;\n            background-repeat:no-repeat;\n\n            /* Needed for height:100% without having an explicit height given to the parent */\n            position:absolute;\n        }\n    `]\n})\nexport class SplitterComponent {\n    private startX: number;\n\n    private startWidth: number;\n\n    private dragging: boolean;\n\n    @ViewChild('splitter')\n    private element: ElementRef;\n\n    private _splitBehaviour: SplitBehaviourDirective;\n\n    @Output()\n    public positionChanged: EventEmitter<Position> = new EventEmitter();\n\n    constructor() {\n        this.dragging = false;\n    }\n\n    public set splitBehaviour(value: SplitBehaviourDirective) {\n        this._splitBehaviour = value;\n    }\n\n    public get splitBehaviour() {\n        return this._splitBehaviour;\n    }\n\n    private onMouseDown(e: MouseEvent): void {\n        this.dragging = true;\n        this.startX = e.clientX;\n        this.startWidth = this.splitBehaviour.getElementWidth();\n    }\n\n    private onMouseUp(e: MouseEvent): void {\n        this.dragging = false;\n    }\n\n    private onMouseMove(e: MouseEvent): void {\n        if(this.dragging) {\n\n            this.positionChanged.emit(new Position(this.startWidth + e.clientX - this.startX, e.pageY));\n        }\n    }\n\n    private onMouseLeave(e: MouseEvent): void {\n        this.dragging = false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/splitter-component/splitter.component.ts","module.exports = \" \\n<h4 style=\\\"margin-left:5px; margin-top: -70px;\\\" > {{title}} </h4>\\n\\n<mat-form-field style=\\\"margin-left:5px\\\">\\n  <mat-select placeholder=\\\"Chart Codes\\\" (change)=\\\"onChange($event.value)\\\" [(ngModel)]=\\\"selectedChart\\\">\\n    <mat-option *ngFor=\\\"let c of chartCodesList\\\" \\n      [value]=\\\"c.CHARTCODE + ': ' + c.DESCRIPTION\\\" >\\n      {{ c.CHARTCODE }}: {{ c.DESCRIPTION}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>  \\n\\n<div style=\\\"margin-left:5px;\\\" class=\\\"btn-group\\\">  \\n\\n  <button type=\\\"button\\\" \\n    (click)=\\\"saveData()\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Save\\\">\\n    <span class=\\\"glyphicon glyphicon-floppy-disk\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"showAlert('This module will be implemented soon!')\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Error\\\">\\n    <span class=\\\"glyphicon glyphicon-saved\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"openConfirmationDialog('01', gFormatID)\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Balance Sheet\\\">\\n    <span class=\\\"glyphicon glyphicon-scale\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"openConfirmationDialog('02', gFormatID)\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Income Statement\\\">\\n    <span class=\\\"glyphicon glyphicon-list-alt\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"openConfirmationDialog('05', gFormatID)\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Cash Flow\\\">\\n    <span class=\\\"glyphicon glyphicon-usd\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=europeanFormat(gFormID);\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"European Format\\\">\\n    <span class=\\\"glyphicon glyphicon-eur\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"showAlert('This module will be implemented soon!')\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Adding Minus Sign\\\">\\n    <span class=\\\"glyphicon glyphicon-minus\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"showAlert('This module will be implemented soon!')\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Merge Literal\\\">\\n    <span class=\\\"glyphicon glyphicon-link\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"showAlert('This module will be implemented soon!')\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Reset\\\">\\n    <span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" \\n    (click)=\\\"showTree()\\\"\\n    class=\\\"btn btn-default\\\" \\n    data-toggle=\\\"tooltip\\\" \\n    title=\\\"Toggle Company Account View\\\">\\n    <span class=\\\"glyphicon glyphicon-eye-open\\\" aria-hidden=\\\"true\\\"></span>\\n  </button>\\n\\n</div> \\n<!-- End of btn-group div -->      \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/toolBar-component/toolBar.component.html\n// module id = ../../../../../src/app/toolBar-component/toolBar.component.html\n// module chunks = main","import { Component, EventEmitter, Output } from '@angular/core';\nimport { documentDetailsService } from '../documentDetails-component/document-details.service';\nimport {ChartListService} from '../chartList-component/chartList.service';\nimport {SaveDialog} from '../dialogs/saveDlg';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport {ConfirmDialog} from '../dialogs/confirmationDlg';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolBar.component.html',\n  styleUrls: ['../css/app.component.scss'],\n})\n\nexport class ToolbarComponent {\n  @Output() financialsEvent = new EventEmitter();\n  @Output() saveEvent = new EventEmitter();\n  @Output() alertEvent = new EventEmitter();\n  @Output() treeEvent = new EventEmitter();\n  @Output() euroFormtEvent = new EventEmitter();\n\n  public gFormID: string='01';\n  public gFormatID: string='US';\n  public gMessage: string='';\n  public title: string='';\n  public gToggle: string='1';\n  //public gSelectedChartCode: string = AppSettings.CHART_CODE;\n  public gSelectedChartCode: string = \"\";\n  public selectedChart: string = \"\";\n  public chartCodesList;\n\n  constructor(public dialog: MatDialog, private _chartListService: ChartListService, private _docDetailsService: documentDetailsService) {\n    //console.log('I am in toolbar.constructor()!');\n    this.gSelectedChartCode = this._docDetailsService.selectedChartCode;\n    //this.selectedChart = this._docDetailsService.selectedChartCode;\n  }\n\n  ngOnInit() {\n    //console.log('I am in toolbar.ngOnInit()!');\n    this._docDetailsService.selectedTitle.subscribe((val: string) => {\n        this.title = val;\n    });\n    this.getChartCodesList();\n  }\n\n  public onChange(newValue: string) {\n    let vString = newValue.split(\":\", 2);\n    //console.log(\"newValue **** \" + newValue);\n    //console.log(\"vString **** \" + vString);\n\n    this.gSelectedChartCode = vString[0];\n    //console.log(\"tb.SelectedChart: \" + this.gSelectedChartCode);\n\n    this._chartListService.setChartCode(this.gSelectedChartCode);\n\n    this.treeEvent.emit(null);\n  }\n\n  private openConfirmationDialog(aFormID, aFormatID: string) {\n    const settings: MatDialogConfig = {\n      disableClose: true    \n    }\n    const dialogRef = this.dialog.open(ConfirmDialog, settings);\n    dialogRef.componentInstance.confirmMessage = \"Have you saved your changes?\"\n    dialogRef.afterClosed().subscribe(result => {\n      //console.log(\"Selected Stataus: \" + this._docDetailsService.getSelectedStatus());\n      //console.log(\"Result: \" + result);\n      if (result === 'ok') {\n            this.getFinancials(aFormID, aFormatID);\n        };\n    });\n}\n\n  // Calls getFinancials() in docDetails.component.ts. \n  // Check panel-documentDetails.component.html for more edetails.\n  getFinancials(aFormID, aFormatID: string) {\n    //console.log('In TOOLBAR.getFinancials()!');\n    this.gFormID = aFormID;\n    this.gFormatID = aFormatID;\n    this.financialsEvent.emit(null);\n  } \n\n  // to load chart list:\n  public getChartCodesList() { \n    //console.log('I am in getChartList()!');\n    this._chartListService.getChartCodes()\n    .subscribe(\n      // the first argument is a function which runs on success\n      data => { \n          this.chartCodesList = data;\n      },\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => {\n        let self = this;\n        let newArr = this.chartCodesList.filter(function(item){\n            return item.CHARTCODE == self.gSelectedChartCode;\n        });\n        if (newArr.length > 0) {\n            self.selectedChart =  newArr[0].CHARTCODE + \": \"  + newArr[0].DESCRIPTION;\n            //+ ': ' + this._docDetailsService.selectedReportTypeCode; \n        }\n    }\n);\n  }\n\n  showAlert(aMessage: string) {\n    //console.log('I am in TOOLBAR.showAlert() ....' + aMessage);\n    this.gMessage = aMessage;\n    this.alertEvent.emit(null);\n  }\n\n  showTree() {\n    //console.log('Started in TOOLBAR.showTree() ....' + this.gToggle);\n    if (this.gToggle == '1') {\n      this.gToggle = '2'\n    } else {\n      this.gToggle = '1'\n    }\n    //console.log('Changed to in TOOLBAR.showTree() ....' + this.gToggle);\n    //this.gToggle = aToggle;\n    this.treeEvent.emit(null);\n  }\n\n  saveData() {\n    //console.log('in SaveData!!!');\n    this.openDialog();\n  }\n\n  europeanFormat(aFormID: string) {\n    console.log('in europeanFormat()!');  \n    this.gFormID = aFormID;\n    if (this.gFormatID === 'US') \n      this.gFormatID = 'EUR';\n    else\n      this.gFormatID = 'US';\n    \n    this.getFinancials(this.gFormID, this.gFormatID);\n    //this.euroFormtEvent.emit(null);\n  }\n\n  open() {\n    //console.log('in Open ...!!!');\n  }\n\n  openDialog() {\n    const settings: MatDialogConfig = {\n      disableClose: true    \n    }\n    const dialogRef = this.dialog.open(SaveDialog, settings)\n    dialogRef.afterClosed().subscribe(result => {\n      //console.log(\"Selected Stataus: \" + this._docDetailsService.getSelectedStatus());\n      //console.log(\"Result: \" + result);\n      if (result === 'ok') this.saveEvent.emit(null);\n    });\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/toolBar-component/toolBar.component.ts","module.exports = \"\\n<div class=\\\"topPanel\\\">\\n  <!--<span *ngFor=\\\"let h of documentHeaderList\\\">-->\\n  <span>  \\n     <!-- <div class=\\\"cellContainer\\\">-->\\n      <!--<div class=\\\"headerContainer\\\">-->\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Header Periods\\\" (change)=\\\"onChange($event.value)\\\" [(ngModel)]=\\\"selectedPeriod\\\">\\n          <mat-option *ngFor=\\\"let h of documentHeaderList; let i = index;\\\" \\n              [value]=\\\"h.CAPTION + ' ' + h.REPORTDATE_TEXT + '::' + h.REPORTTYPE + '::' + h.AUDITOR \\n                  + '::' + h.MULTIPLIER + '::' + h.CURRENCYCODE + '::' + h.REPORTDATE \\n                  + '::' + h.CONSOLIDATED \\n                  + '::' + h.FYECHANGE \\n                  + '::' + h.PERIODFISCALYEAR \\n                  + '::' + h.SOURCETYPEID + '::' + h.PRINCIPLETYPEID\\n                  + '::' + h.PERIODSTARTDATE + '::' + h.SOURCEDATE\\n                  + '::' + i\\\">\\n              {{ h.REPORTDATE }}: {{ h.REPORTTYPE}}: {{ h.CURRENCYCODE }}\\n            </mat-option>\\n        </mat-select>\\n      </mat-form-field>  \\n\\n      &nbsp;&nbsp;\\n\\n      <button type=\\\"button\\\" \\n        (click)=\\\"openDialog()\\\"\\n        class=\\\"btn btn-default\\\" \\n        data-toggle=\\\"tooltip\\\" \\n        title=\\\"Properties\\\">\\n        <span class=\\\"glyphicon glyphicon-cog\\\" aria-hidden=\\\"true\\\" hint=\\\"Open\\\"></span>\\n      </button>\\n    <!--</div> <!- - End of headerContainer -->\\n  </span>                                 \\n</div> <!-- End of topPanel -->\\n                        \\n<!--\\n\\n      <option *ngFor=\\\"let h of documentHeaderList\\\" [value]=\\\"h.REPORTDATE_TEXT\\\">\\n        {{ h.REPORTDATE_TEXT }}\\n      </option>\\n\\n-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/topPanel-component/topPanel.component.html\n// module id = ../../../../../src/app/topPanel-component/topPanel.component.html\n// module chunks = main","import {Component} from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n//import { AppSettings } from '../appsettings';\nimport { PropertiesDialog } from '../properties-component/properties.component'\nimport { PropertiesService } from '../properties-component/properties.service';\nimport {documentDetailsService} from '../documentDetails-component/document-details.service';\n//import { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'topPanel',\n  templateUrl: './topPanel.component.html',\n  styleUrls: ['../css/app.component.scss'],\n})\n\nexport class TopPanelComponent {\n  public documentHeaderList;\n  public selectedPeriod: string = \"\";\n  public selectedExtractedText: string = \"\";\n  public selectedType: string = \"\";\n  public selectedAuditor: string = \"\";\n  public selectedMultiplier: string = \"\";\n  public selectedCurrency: string = \"\";\n  public selectedReportDate: string = \"\";\n  public selectedStartDate: string = \"\";\n  public selectedSourceDate: string = \"\";\n  public selectedConsolidated: string = \"0\";\n  public selectedFYEChange: string = \"0\";\n  public selectedPeriodFY: string = \"\";\n  public selectedSourceTypeID: string = \"\";\n  public selectedPrincipleTypeID: string = \"\";\n  public selectedIndex = 0;\n  public gColumns: any[];\n\n  constructor(public dialog: MatDialog, private _propertiesService: PropertiesService, \n        private _docDetailsService: documentDetailsService,) {\n\n        this.returnColumnIDs().subscribe((val: any) => {    \n            this.gColumns = val;\n        });\n  }\n\n  public onChange(newValue: string) {\n    let vString = newValue.split(\"::\", 14);\n    this.selectedPeriod = newValue;\n    this.selectedIndex= parseInt(vString[13]);\n    this.getDocumentHeaderList(this.selectedIndex);\n/*\n    //console.log(\"newValue **** \" + newValue);\n    //console.log(\"vString **** \" + vString);\n\n    this.selectedExtractedText = vString[0];\n    this.selectedType = vString[1];\n    this.selectedAuditor = vString[2];\n    this.selectedMultiplier = vString[3];\n    this.selectedCurrency = vString[4];\n    this.selectedReportDate = vString[5];\n    this.selectedConsolidated = (vString[6] !== null) ? vString[6]: \"0\";\n    this.selectedFYEChange = (vString[7] !== null) ? vString[7]: \"0\";\n    this.selectedPeriodFY = vString[8];\n    this.selectedSourceTypeID = vString[9];\n    this.selectedPrincipleTypeID = vString[10];\n    this.selectedStartDate = vString[11];\n    this.selectedSourceDate = vString[12];\n\n\n    //console.log('topPanel.onChange()- Type: ' + this.selectedType);\n    //console.log('topPanel.onChange()- Auditor: ' + this.selectedAuditor);\n    //console.log('topPanel.onChange()- Multiplier: ' + this.selectedMultiplier);\n    //console.log('topPanel.onChange()- Currency: ' + this.selectedCurrency);\n    //console.log('topPanel.onChange()- ReportDate: ' + this.selectedReportDate);\n    //console.log('topPanel.onChange()- Consolidated: ' + this.selectedConsolidated);\n    //console.log('topPanel.onChange()- FYEChange: ' + this.selectedFYEChange);\n    //console.log('topPanel.onChange()- selectedPeriodFY: ' + this.selectedPeriodFY);\n    //console.log('topPanel.onChange()- selectedSourceTypeID: ' + this.selectedSourceTypeID);\n    //console.log('topPanel.onChange()- selectedPrincipleTypeID: ' + this.selectedPrincipleTypeID);\n\n    //if (this.selectedReportDate !== '0000-00-00') { //mySQL\n    if (this.selectedReportDate !== 'null') {\n      let re = /-/gi; \n      let newDateString = this.selectedReportDate.replace(re, '/');\n      //console.log(\"New Date: \" + newDateString);\n      if (newDateString !== 'null') {\n        this.selectedReportDate = (new Date(newDateString)).toISOString();\n      } else {\n        this.selectedReportDate = ((new Date()).toISOString());\n      }\n    } else {\n      this.selectedReportDate = ((new Date()).toISOString());\n    }\n    this._propertiesService.setSelectedReportDate(this.selectedReportDate);\n    console.log(\"onchange.ReportDate: \" + this.selectedReportDate);\n\n    if (this.selectedSourceDate !== 'null') {\n      let re = /-/gi; \n      let newDateString = this.selectedSourceDate.replace(re, '/');\n      //console.log(\"New Date: \" + newDateString);\n      if (newDateString !== 'null') {\n        this.selectedSourceDate = (new Date(newDateString)).toISOString();\n      } else {\n        this.selectedSourceDate = ((new Date()).toISOString());\n      }\n    } else {\n      this.selectedSourceDate = ((new Date()).toISOString());\n    }\n    this._propertiesService.setSelectedSourceDate(this.selectedSourceDate);\n    console.log(\"onchange.selectedSourceDate: \" + this.selectedSourceDate);\n\n    if (this.selectedStartDate !== 'null') {\n      let re = /-/gi; \n      let newDateString = this.selectedStartDate.replace(re, '/');\n      //console.log(\"New Date: \" + newDateString);\n      if (newDateString !== 'null') {\n        this.selectedStartDate = (new Date(newDateString)).toISOString();\n      } else {\n        this.selectedStartDate = ((new Date()).toISOString());\n      }\n    } else {\n      this.selectedStartDate = ((new Date()).toISOString());\n    }\n    this._propertiesService.setSelectedStartDate(this.selectedStartDate);\n    console.log(\"onchange.selectedStartDate: \" + this.selectedStartDate);\n\n    this._propertiesService.setSelectedExtractedText(this.selectedExtractedText);\n    this._propertiesService.setSelectedType(this.selectedType);\n    this._propertiesService.setSelectedAuditor(this.selectedAuditor);\n    this._propertiesService.setSelectedMultiplier(this.selectedMultiplier);\n    this._propertiesService.setSelectedCurrency(this.selectedCurrency);\n    this._propertiesService.setSelectedReportDate(this.selectedReportDate);\n    this._propertiesService.setSelectedStartDate(this.selectedStartDate);\n    this._propertiesService.setSelectedSourceDate(this.selectedSourceDate);\n    this._propertiesService.setSelectedConsolidated(this.selectedConsolidated);\n    this._propertiesService.setSelectedFYEChange(this.selectedFYEChange);\n    this._propertiesService.setSelectedPeriodFY(this.selectedPeriodFY);\n    this._propertiesService.setSelectedSourceTypeID(this.selectedSourceTypeID);\n    this._propertiesService.setSelectedPrincipleTypeID(this.selectedPrincipleTypeID);\n*/\n\n  }\n\n  // Opens Properties dialog. HTML and TS files are in properties-component:\n  openDialog() {\n    const settings: MatDialogConfig = {\n      disableClose: true    \n    }\n    const dialogRef = this.dialog.open(PropertiesDialog, settings)\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('*** *** *** '+ result);\n      if (result === 'ok') {\n        this.returnColumnIDs().subscribe((val: any) => {    \n          console.log(\"Columns Length: \" + val.length + \" *** \" + val[this.selectedIndex].COLUMNID); \n          let vCollectedHeader = this.collectDocumentHeader(val[this.selectedIndex].COLUMNID);\n          this.saveDocumentHeader(vCollectedHeader);\n        });\n      };\n    });\n  }\n\n  private collectDocumentHeader(aColID: number) {\n    let documentHeader = [];\n\n    //let vSelectedReportDate = this._propertiesService.getSelectedReportDate().substr(0, 10);\n    //let vSelectedStartDate = this._propertiesService.getSelectedStartDate();\n    //let vSelectedSourceDate = this._propertiesService.getSelectedSourceDate();\n\n    //console.log(\"collect.ReportDate: \" + vSelectedReportDate);\n    //console.log(\"collect.StartDate: \" + vSelectedStartDate);\n    //console.log(\"collect.SourceDate: \" + vSelectedSourceDate);\n\n    //let re = /-/gi; \n    //vSelectedStartDate.substr(0,10).replace(re, '/');\n    //vSelectedSourceDate.substr(0,10).replace(re, '/');\n    //vSelectedReportDate.substr(0,10).replace(re, '/');\n\n    //console.log(\"StartDate: \" + vSelectedStartDate);\n    //console.log(\"SourceDate: \" + vSelectedSourceDate);\n    //console.log(\"ReportDate: \" + vSelectedReportDate);\n\n    /*\n    if (vSelectedStartDate) {\n      vSelectedStartDate.substr(0,10).replace(re, '/')\n    } else {\n      vSelectedStartDate = null;\n    }\n    if (vSelectedSourceDate) {\n      vSelectedSourceDate.substr(0,10).replace(re, '/')\n    } else {\n      vSelectedSourceDate = null;\n    }\n    */\n\n    documentHeader.push({\n      doc_id: this._docDetailsService.selectedDocID,\n      column_id: aColID,\n\n      auditor: this._propertiesService.getSelectedAuditor(),\n      currency: this._propertiesService.getSelectedCurrency(),\n      multiplier: this._propertiesService.getSelectedMultiplier(),\n      report_type: this._propertiesService.getSelectedType(),\n      principle_type: this._propertiesService.getSelectedPrincipleTypeID(),\n      source_type: this._propertiesService.getSelectedSourceTypeID(),\n      consolidated: this._propertiesService.getSelectedConsolidated(),\n      fye_change: this._propertiesService.getSelectedFYEChange(),\n      fiscal_year: this._propertiesService.getSelectedPeriodFY(),\n\n      report_date: this._propertiesService.getSelectedReportDate().substr(0, 10),\n      start_date: this.selectedStartDate,\n      source_date: this.selectedSourceDate,\n    });   \n\n    console.log(\n      'Collect this data =>' \n      + \" DocID: \" + documentHeader[0].doc_id\n      + \" Column ID: \" + documentHeader[0].column_id\n\n      + \" Auditor: \" + documentHeader[0].auditor\n      + \"  Currency: \" + documentHeader[0].currency\n      + \"  Multiplier: \" + documentHeader[0].multiplier\n      + \"  ReportType: \" + documentHeader[0].report_type\n      + \"  PrincipleTypeID: \" + documentHeader[0].principle_type\n      + \"  SourceTypeID: \" + documentHeader[0].source_type\n      + \"  Consolidated: \" + documentHeader[0].consolidated \n      + \"  FYEChange: \" + documentHeader[0].fye_change \n      + \"  PeriodFY: \" + documentHeader[0].fiscal_year\n      + \"  ReportDate: \" + documentHeader[0].report_date\n      + \"  SourceDate: \" + documentHeader[0].source_date\n      + \"  StartDate: \" + documentHeader[0].start_date\n      + \"  Index: \" + this.selectedIndex\n    );\n\n    return documentHeader;\n  }\n\n  private saveDocumentHeader(aCollectedheader: any) {\n    let vMessage: string;\n\n    console.log(\n      'Save this data =>' \n      + \" DocID: \" + aCollectedheader[0].doc_id\n      + \" Column ID: \" + aCollectedheader[0].column_id\n\n      + \" Auditor: \" + aCollectedheader[0].auditor\n      + \"  Currency: \" + aCollectedheader[0].currency\n      + \"  Multiplier: \" + aCollectedheader[0].multiplier\n      + \"  ReportType: \" + aCollectedheader[0].report_type\n      + \"  PrincipleTypeID: \" + aCollectedheader[0].principle_type\n      + \"  SourceTypeID: \" + aCollectedheader[0].source_type\n      + \"  Consolidated: \" + aCollectedheader[0].consolidated \n      + \"  FYEChange: \" + aCollectedheader[0].fye_change \n      + \"  PeriodFY: \" + aCollectedheader[0].fiscal_year\n\n      + \"  ReportDate: \" + aCollectedheader[0].report_date\n      + \"  SourceDate: \" + aCollectedheader[0].source_date\n      + \"  StartDate: \" + aCollectedheader[0].start_date\n\n      + \"  Index: \" + this.selectedIndex\n    );\n  \n    this._propertiesService.saveDocumentHeader(aCollectedheader).subscribe(\n      savedData => {\n      //console.log('savedData: ' + savedData.message);\n      if (savedData.message)\n          vMessage = savedData.message;\n      },\n      // the second argument is a function which runs on error\n      err => {\n          console.log('Error in saveDocumentHeader! ' + err);\n      },\n      // the third argument is a function which runs on completion\n      () => {\n          console.log('DONE WITH saveDocumentHeader() for ColumnID: ' + aCollectedheader[0].column_id);\n          if (!vMessage)\n              vMessage = \"Something went wrong and http.post request did not return any data!\";\n          this.getDocumentHeaderList(this.selectedIndex);\n          console.log(\"Saved message: \" + vMessage);\n      }\n    );\n\n  }\n\n  private returnColumnIDs() {\n    //console.log('I am in docDetails returnColumnIDs()!');       \n    return this._docDetailsService.getColumnIDs();    \n  }    \n\n  public getDocumentHeaderList(aIndex) { \n    this.selectedIndex = aIndex; // It is necessary to reset index when change form ID.\n    this._propertiesService.getDocumentHeaderList().subscribe(\n        // the first argument is a function which runs on success\n      data => { this.documentHeaderList = data;\n      },\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => {\n          if (this.documentHeaderList.length > 0) {\n            this.selectedPeriod = this.documentHeaderList[aIndex].CAPTION + \" \"\n              + this.documentHeaderList[aIndex].REPORTDATE_TEXT + \"::\"\n              + this.documentHeaderList[aIndex].REPORTTYPE + \"::\"\n              + this.documentHeaderList[aIndex].AUDITOR + \"::\"\n              + this.documentHeaderList[aIndex].MULTIPLIER + \"::\"\n              + this.documentHeaderList[aIndex].CURRENCYCODE + \"::\"\n              + this.documentHeaderList[aIndex].REPORTDATE + \"::\"\n\n              + this.documentHeaderList[aIndex].CONSOLIDATED + \"::\"\n              + this.documentHeaderList[aIndex].FYECHANGE + \"::\"\n\n              + this.documentHeaderList[aIndex].PERIODFISCALYEAR + \"::\"\n              + this.documentHeaderList[aIndex].SOURCETYPEID + \"::\"\n              + this.documentHeaderList[aIndex].PRINCIPLETYPEID + \"::\"\n              + this.documentHeaderList[aIndex].PERIODSTARTDATE + \"::\"\n              + this.documentHeaderList[aIndex].SOURCEDATE  + \"::\"\n              + aIndex;\n              \n            this.selectedExtractedText = this.documentHeaderList[aIndex].CAPTION + \" \"\n                + this.documentHeaderList[aIndex].REPORTDATE_TEXT;\n            this._propertiesService.setSelectedExtractedText(this.selectedExtractedText);\n\n            this.selectedType = this.documentHeaderList[aIndex].REPORTTYPE;\n            //console.log(\"selected-type=  \" + this.selectedType);\n            this._propertiesService.setSelectedType(this.selectedType);\n\n            this.selectedAuditor = this.documentHeaderList[aIndex].AUDITOR;\n            //console.log(\"selected-auditor=  \" + this.selectedAuditor);\n            this._propertiesService.setSelectedAuditor(this.selectedAuditor);\n            \n            this.selectedMultiplier = this.documentHeaderList[aIndex].MULTIPLIER;\n            //console.log(\"selected-multiplier=  \" + this.selectedMultiplier);\n            this._propertiesService.setSelectedMultiplier(this.selectedMultiplier);\n\n            this.selectedCurrency = this.documentHeaderList[aIndex].CURRENCYCODE;\n            //console.log(\"selected-curency=  \" + this.selectedCurrency);\n            this._propertiesService.setSelectedCurrency(this.selectedCurrency);\n            \n            this.selectedReportDate = this.documentHeaderList[aIndex].REPORTDATE;                        \n            //console.log(\"selected-reportdate=  \" + this.selectedReportDate);\n            if (this.selectedReportDate) {\n              let re = /-/gi; \n              let newDateString = this.selectedReportDate.replace(re, '/');\n              this.selectedReportDate = (new Date(newDateString)).toISOString();\n              this._propertiesService.setSelectedReportDate(this.selectedReportDate);\n              console.log(\"selectedReportDate: \" + this.selectedReportDate);\n            } else {\n              this._propertiesService.setSelectedReportDate((new Date()).toISOString());\n            }\n\n            this.selectedSourceDate = this.documentHeaderList[aIndex].SOURCEDATE;                        \n            if (this.selectedSourceDate) {\n              let re = /-/gi; \n              let newDateString = this.selectedSourceDate.replace(re, '/');\n              this.selectedSourceDate = (new Date(newDateString)).toISOString();\n              \n              this._propertiesService.setSelectedSourceDate(this.selectedSourceDate);\n              console.log(\"selectedSourceDate: \" + this.selectedSourceDate);\n            } else {\n              //this._propertiesService.setSelectedSourceDate((new Date()).toISOString());\n            }\n\n            this.selectedStartDate = this.documentHeaderList[aIndex].PERIODSTARTDATE;                        \n            if (this.selectedStartDate) {\n              let re = /-/gi; \n              let newDateString = this.selectedStartDate.replace(re, '/');\n              this.selectedStartDate = (new Date(newDateString)).toISOString();\n              this._propertiesService.setSelectedStartDate(this.selectedStartDate);\n              console.log(\"selectedStartDate: \" + this.selectedStartDate);\n            } else {\n              //this._propertiesService.setSelectedStartDate((new Date()).toISOString());\n            }\n\n            this.selectedConsolidated = (this.documentHeaderList[aIndex].CONSOLIDATED) !== null \n                ? String(this.documentHeaderList[aIndex].CONSOLIDATED) : \"0\";\n            this._propertiesService.setSelectedConsolidated(this.selectedConsolidated);\n            \n            this.selectedFYEChange = (this.documentHeaderList[aIndex].FYECHANGE) !== null \n                ? String(this.documentHeaderList[aIndex].FYECHANGE) : \"0\";\n            this._propertiesService.setSelectedFYEChange(this.selectedFYEChange);\n            \n            this.selectedPeriodFY = this.documentHeaderList[aIndex].PERIODFISCALYEAR;\n            this._propertiesService.setSelectedPeriodFY(this.selectedPeriodFY);\n            \n            this.selectedSourceTypeID = this.documentHeaderList[aIndex].SOURCETYPEID;\n            this._propertiesService.setSelectedSourceTypeID(this.selectedSourceTypeID);\n            \n            this.selectedPrincipleTypeID = this.documentHeaderList[aIndex].PRINCIPLETYPEID;\n            this._propertiesService.setSelectedPrincipleTypeID(this.selectedPrincipleTypeID);\n            \n          } else {\n            this._propertiesService.setSelectedExtractedText(\"\");\n          }\n          //console.log('done with topPanel.getDocumentHeaderList() ... selectedPeriod is: ' + this.selectedPeriod)\n        }\n    );\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/topPanel-component/topPanel.component.ts","module.exports = \"<iui-treeview #treeview\\r\\n    [controlStyle]=\\\"ctrlStyle\\\"          \\r\\n    [virtualMode]=\\\"true\\\"\\r\\n    >\\r\\n    <ng-template let-item>\\r\\n        <span \\r\\n            class=\\\"trw-lbl-item-content\\\" \\r\\n            (dblclick)=\\\"onItemDblClick($event, item)\\\"\\r\\n            (click)=\\\"onItemClick($event, item)\\\"\\r\\n            [ngStyle]=\\\"{ color: item.textColor }\\\"\\r\\n        > {{item.LITERAL}} </span>\\r\\n    </ng-template>\\r\\n</iui-treeview>\\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeView.component.html\n// module id = ../../../../../src/app/treeView-component/treeView.component.html\n// module chunks = main","import { Component, EventEmitter, Output, ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\r\nimport { IntegralUISelectionMode } from 'integralui/components/integralui.core';\r\nimport { IntegralUITreeView } from 'integralui/components/integralui.treeview';\r\nimport { MatDialog, MatInput, MatDialogConfig } from '@angular/material';\r\n\r\nimport { ChartListService } from '../chartList-component/chartList.service';\r\nimport { documentDetailsService } from \"../documentDetails-component/document-details.service\";\r\nimport { TreeViewAccountDialog } from './treeViewAccountDlg.component';\r\n\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Component({\r\n    selector: 'treeView',\r\n    /*\r\n    The ViewEncapsulation.None allows you to change the component appearance \r\n    by applying your own custom CSS styles within your app component. \r\n    This overrides the default CSS styles that are included in component css file. \r\n    As you may know, by default all Angular components are protected from outside changes of CSS. \r\n    The ViewEncapsulation.None allows you to override that within your app project, in code.    \r\n    */\r\n    encapsulation: ViewEncapsulation.None, \r\n    templateUrl: './treeView.component.html',\r\n    styleUrls: ['../css/app.component.scss'],\r\n    //styleUrls: [ './treeView-editing.scss' ],     \r\n})\r\n\r\nexport class TreeViewComponent {\r\n    //@ViewChild('application', {read: ViewContainerRef}) applicationRef: ViewContainerRef;\r\n    @ViewChild('treeview') treeview: IntegralUITreeView;\r\n    //@Output() findGridRowEvent = new EventEmitter();\r\n    //@Output() alertEvent = new EventEmitter();\r\n\r\n    public processedChartData: Array<any> = [];\r\n    public gMessage: string='';\r\n    public gToggle: string='1'\r\n    public gSelectedChartCode: string = \"\";\r\n    public title: string;\r\n    public chartIDList: Array<any> = []; \r\n    public selMode: IntegralUISelectionMode = IntegralUISelectionMode.MultiExtended;\r\n    public showLines: boolean=true;\r\n    public selectedLiteral: string=\"\";\r\n    public selectedMapcode: string=\"\";\r\n    public selectedOrderlink: string=\"\";\r\n    \r\n    public ctrlStyle: any = {\r\n        general: {\r\n            normal: 'leftDiv'\r\n        }\r\n    }\r\n\r\n    public treeDataFields: any = {\r\n        text: 'LITERAL',\r\n        id: 'ID',\r\n        pid: 'PID',\r\n    }\r\n\r\n    constructor(private dialog: MatDialog, private _chartListService: ChartListService,\r\n             private _docDetailsService: documentDetailsService){\r\n        this.gSelectedChartCode = this._docDetailsService.selectedChartCode;\r\n        //console.log(\"code tv.constructor(): \" + this.gSelectedChartCode);\r\n    }\r\n    \r\n    private onItemClick(e: any, item: any){\r\n        //console.log(item.id + ' - selectedID!');\r\n        //console.log(item.pid + ' - selectedPID!');\r\n        //console.log(item.MAPCODE + ' - selectedMapcode!');\r\n\r\n        // Used in panel-documentDetails.html to call docDetails.scrollToRow():\r\n        //this.selectedLiteral = item.LITERAL;\r\n        //this.selectedMapcode = item.MAPCODE;\r\n        //this.selectedOrderlink = item.ORDERLINK;\r\n\r\n        // Used in other components:\r\n        this._chartListService.setLiteral(item.LITERAL);\r\n        this._chartListService.setOrderLink(item.ORDERLINK);\r\n        this._chartListService.setMapCode(item.MAPCODE);\r\n\r\n        //this.findGridRowEvent.emit(null); This feature is not in C++ version and makes things complicated\r\n    }\r\n\r\n    private getChartIDList(aToggle: string, aCode: string) { \r\n        //console.log('I am in getChartList()!');\r\n        if (aCode) this.gSelectedChartCode = aCode;\r\n        let compNum = this._docDetailsService.getCompNumber();\r\n        let type = this._docDetailsService.getReportTypeCode(); \r\n        let formCode = this._docDetailsService.getFormID().getValue();\r\n        let chartCode = this.gSelectedChartCode;\r\n\r\n        if ((compNum>0) && (chartCode) && (type) && (formCode)) {\r\n            this._chartListService.getChartIDs(compNum, chartCode, type, formCode).subscribe(\r\n                // the first argument is a function which runs on success\r\n                data => { \r\n                    this.chartIDList = data;\r\n                },\r\n                // the second argument is a function which runs on error\r\n                err => console.error(err),\r\n                // the third argument is a function which runs on completion\r\n                () => {\r\n                    //console.log('DONE WITH tv.getChartIDList() ... ' + this.chartIDList.length);\r\n                    this.loadFromJSON(null, aToggle, this.gSelectedChartCode);\r\n                }\r\n            );\r\n        }  \r\n        else {\r\n            console.log(\"WARNING: Parameter list is not complete in getChartIDList!!!\");\r\n        } \r\n    }\r\n\r\n    private loadFromJSON(item: any, aToggle: string, aCode: string){\r\n        //console.log(\"Toggle in loadFromJSON(): \" + aToggle);\r\n        //console.log(\"code in loadFromJSON(): \" + aCode);\r\n\r\n        let originalChartData: any[];\r\n        //let processedChartData: any[];\r\n\r\n        if (aToggle) {\r\n            this.gToggle = aToggle;\r\n        }\r\n\r\n        if (aCode) {\r\n            this.gSelectedChartCode = aCode;\r\n        }\r\n\r\n        if (this.gToggle == '1') {\r\n            this._chartListService.getChartAccountData(\r\n                this._docDetailsService.getCompNumber(), \r\n                //AppSettings.CHART_CODE, // Default is IFR, but chart code should be also retrieved from the user interface\r\n                this.gSelectedChartCode,\r\n                this._docDetailsService.getReportTypeCode(), \r\n                this._docDetailsService.getFormID().getValue()\r\n            ).subscribe(\r\n                originalChartData => { \r\n                        // assign the right pid for each account and more ...\r\n                        //processedChartData = originalChartData;\r\n                        this.processedChartData = this.processData(originalChartData);\r\n                        // add processed data to the chart tree\r\n                        this.addData(this.processedChartData, item, 1);\r\n                },\r\n\r\n                // the second argument is a function which runs on error\r\n                error => console.log(error),\r\n\r\n                // the third argument is a function which runs on completion\r\n                () => {\r\n                    //console.log('DONE WITH loadFromJSON() ... ' + this.chartIDList.length);\r\n                }\r\n            );\r\n        } else {\r\n            //this.gMessage = 'Company account order is under construction!';\r\n            //this.alertEvent.emit(null);\r\n            //console.log(\" Toggle: \" + aToggle);\r\n            this._chartListService.getCompanyAccountData(\r\n                this._docDetailsService.getCompNumber(), \r\n                //AppSettings.CHART_CODE, // Default is IFR, but chart code should be also retrieved from the user interface\r\n                this.gSelectedChartCode,\r\n                this._docDetailsService.getReportTypeCode(), \r\n                this._docDetailsService.getFormID().getValue()\r\n                ).subscribe(\r\n                    originalChartData => { \r\n                            // we don't need to assign the right pid for each account and more here. It should be flat.\r\n                            this.processedChartData = originalChartData;\r\n                            // add original data to the chart tree\r\n                            this.addData(this.processedChartData, item, 2);\r\n                    },\r\n                    // the second argument is a function which runs on error\r\n                    error => console.log(error),\r\n\r\n                    // the third argument is a function which runs on completion\r\n                    () => {\r\n                        //console.log('DONE WITH loadFromJSON() ... ' + this.chartIDList.length);\r\n                    }\r\n                );                    \r\n            }\r\n\r\n    }\r\n\r\n    private addData(data: any, item: any, toggle: number){\r\n        \r\n        // Load data from JSON into the TreeView as children for specified item\r\n        if (toggle === 1) {\r\n            //console.log(\" addData.Toggle: \" + toggle);\r\n            this.treeview.loadData(data, item, this.treeDataFields);\r\n        }\r\n        else {\r\n            //console.log(\" addData.Toggle: \" + toggle);\r\n            this.treeview.loadData(data, item, this.treeDataFields, false);            \r\n        }\r\n        \r\n        // Restore the expanding icon\r\n        this.treeview.endLoad(item);\r\n    \r\n        // Update the appareance of the TreeView\r\n        this.treeview.refresh();\r\n\r\n        this.treeview.collapse();        \r\n    }    \r\n\r\n    private processData(data: any) {\r\n        //console.log('inside processData!!!')\r\n        let vFound: boolean=false;\r\n        let vLength: number=0;\r\n        let vElement: string;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].PID) {\r\n                vLength = data[i].PID.length;\r\n                vFound = false;\r\n\r\n                while ((vFound === false) && (vLength > 0)) {\r\n                    vElement = data[i].PID.substr(0, vLength);\r\n                    let newArr = this.chartIDList.filter(function(item){\r\n                        return item.id === vElement;\r\n                    });\r\n\r\n                    // assigning proper pid \r\n                    if (newArr.length > 0) {\r\n                        for (let j=0; j<data.length; j++) {\r\n                            if (data[j].REF=== vElement) {\r\n                                data[i].PID = vElement + '-' + data[j].ORDERLINK;\r\n                                vFound = true;\r\n                                //console.log('new PID: '+ data[i].PID);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    else {\r\n                        vLength -= 3;\r\n                    }\r\n                    \r\n                }    \r\n                \r\n            }\r\n        }           \r\n        return data;\r\n    }\r\n    \r\n/*\r\n    private processData(data: any) {\r\n        //console.log('inside processData!!!')\r\n        let vFound: boolean=false;\r\n        let vLength: number;\r\n        let vElement: string;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].pid !== '') {\r\n\r\n                vLength = data[i].pid.length;\r\n                vFound = false;\r\n\r\n                // assigning proper pid \r\n                while ((vFound === false) && (vLength > 0)) {\r\n                    vElement = data[i].pid.substr(0, vLength);\r\n                    //console.log('inside processData while loop ---> ' + vElement + ' ---> ' + data[i].LITERAL);\r\n\r\n                    let newArr = this.chartIDList.filter(function(item){\r\n                        return item.id === vElement;\r\n                    });\r\n\r\n                    //console.log(\"newArr.length = \" + newArr.length);\r\n\r\n                    if (newArr.length > 0) {\r\n                        data[i].pid = vElement;\r\n                        vFound = true;\r\n                        //console.log('Found it !!! ---> ' + data[i].LITERAL + ' ---> ' + vElement + ' ---> ' + vLength);\r\n                        break;\r\n                    }\r\n                    else {\r\n                        //console.log('Not Found it !!! ---> ' + data[i].LITERAL + ' ---> ' + vElement + ' ---> ' + vLength);\r\n                        vLength -= 3;\r\n                    }\r\n                    \r\n                }    \r\n                \r\n            }\r\n        }           \r\n\r\n        return data;\r\n    }\r\n*/\r\n\r\n\r\n    private onItemDblClick(e: any, item: any){\r\n        //this.gMessage = 'Mapcode: ' + item.MAPCODE;\r\n        //this.alertEvent.emit(null);\r\n        this.openDialog();\r\n    }\r\n\r\n    // Opens TreeViewAccountDialog dialog:\r\n    private openDialog() {\r\n        const settings: MatDialogConfig = {\r\n            disableClose: true    \r\n        }\r\n        const dialogRef = this.dialog.open(TreeViewAccountDialog, settings)\r\n        //dialogRef.afterClosed().subscribe(result => {\r\n        // save dialog in database\r\n        //});\r\n    }\r\n\r\n\r\n    public scrollToAccount(){\r\n        let vOrderlink = this._docDetailsService.getOrderlink();\r\n        let vMapcode = this._docDetailsService.getMapcode();\r\n        let vLiteral = this._docDetailsService.getSelectedLiteral();\r\n\r\n        //let item: any = this.treeview.findItemById(item.itemID);\r\n        //let item: any = this.treeview.findItemByText(aText);\r\n        let item: any = this.getItem(vMapcode, vOrderlink, vLiteral);\r\n        if (item){\r\n            //console.log(\"item.MAPCODE found in scrollTo: \" + item.MAPCODE);\r\n            // Use scrollTo method to scroll the view so that the item is visible\r\n            this.treeview.scrollTo(item);\r\n    \r\n            // Select the item once it is present in current view\r\n            this.treeview.selectedItem = item;\r\n\r\n            this._chartListService.setMapCode(item.MAPCODE);\r\n            this._chartListService.setOrderLink(item.ORDERLINK);\r\n            this._chartListService.setLiteral(item.LITERAL);\r\n        }\r\n    }   \r\n\r\n    private getItem(aMapcode, aOrderlink: number, aLiteral: string) {\r\n        let result = 0;\r\n        for (let i = 0; i < this.processedChartData.length; i++) {    \r\n            if (((this.processedChartData[i].MAPCODE === aMapcode) && (this.processedChartData[i].ORDERLINK === aOrderlink))\r\n                    || (this.processedChartData[i].LITERAL.toLowerCase() === aLiteral.toLowerCase())) {\r\n                result = this.processedChartData[i];\r\n                //console.log(\"Found it: \" + this.processedChartData[i].LITERAL);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeView.component.ts","module.exports = \"<link href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\\\" rel=\\\"stylesheet\\\">\\n\\n<div >\\n    <h1 mat-dialog-title>{{selectedLiteral}}</h1> \\n\\n    <div md-dialog-content  style=\\\"width: 400px; font-size: 13px;\\\">    \\n\\n        <mat-form-field>    \\n            <input matInput placeholder=\\\"Form: \\\" disabled>\\n            <div>\\n            <label> {{selectedForm}} </label>\\n            </div>    \\n        </mat-form-field>\\n\\n        <br>\\n        <mat-form-field>    \\n            <input matInput placeholder=\\\"Mapcode: \\\" disabled>\\n            <div>\\n            <label> {{selectedMapCode}} </label>\\n            </div>    \\n        </mat-form-field>\\n\\n        <br>\\n        <mat-form-field>    \\n            <input matInput placeholder=\\\"Hierarchy: \\\" disabled>\\n            <div>\\n            <label> {{selectedHierarchy}} </label>\\n            </div>    \\n        </mat-form-field>\\n\\n        <br>\\n        <mat-form-field>    \\n            <input matInput placeholder=\\\"Amount: \\\" disabled>\\n            <div>\\n            <label> {{selectedAmount}} </label>\\n            </div>    \\n        </mat-form-field>\\n\\n        <br>\\n        <mat-form-field>\\n            <mat-select placeholder=\\\"Last Transaction: \\\" [(ngModel)]=\\\"selectedDate\\\">\\n                <mat-option *ngFor=\\\"let t of transactions_list\\\" [value]=\\\"t.REPORTDATE + '::' + t.FINANCIALREPORTTYPE\\\">\\n                    {{ t.REPORTDATE }}: {{ t.FINANCIALREPORTTYPE }}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n\\n    </div>\\n    <br>\\n    <div mat-dialog-actions align=\\\"bottom\\\">\\n        <!--<button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>OK</button>-->\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"\\\" cdkFocusInitial>OK</button>  \\n    </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewAccountDlg.component.html\n// module id = ../../../../../src/app/treeView-component/treeViewAccountDlg.component.html\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MatDialogConfig, MAT_DIALOG_DATA} from '@angular/material';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { documentDetailsService } from \"../documentDetails-component/document-details.service\";\nimport { ChartListService } from '../chartList-component/chartList.service';\n\n@Component({\n    selector: 'dialog-treeViewAccount',\n    templateUrl: './treeViewAccountDlg.component.html',\n    styleUrls: ['../css/app.component.scss'],\n})\n  \nexport class TreeViewAccountDialog {\n\n    public transactions_list: Array<any> = [];\n    public selectedLiteral: string=\"\";\n    public selectedForm: string=\"\";\n    public selectedMapCode: string=\"\";\n    public selectedHierarchy: string=\"\";\n    public selectedAmount: number=0;\n    public selectedDate: string=\"\";\n    public selectedOrderLink: number=0;\n\n    constructor(private _docDetailsService: documentDetailsService, private _chartListService: ChartListService,\n        public dialogRef: MatDialogRef<TreeViewAccountDialog>,@Inject(MAT_DIALOG_DATA) public data: any) {\n            \n        // the following statements are necessary in order to showing the selected values when dialog opens:\n        this.selectedForm = this._docDetailsService.selectedFormDescription; \n        this.selectedMapCode = this._chartListService.selectedMapCode;\n        this.selectedLiteral = this._chartListService.selectedLiteral;\n        this.selectedOrderLink = this._chartListService.selectedOrderLink;\n\n        //Clear list boxes:\n    }  \n\n    ngOnInit(): void {    \n        if (this._docDetailsService.selectedReportTypeCode == \"Q\") {\n            this.getQuarterlyChartAccountList();\n        } else {\n            this.getAnnualChartAccountList();\n        }\n    }\n\n    // to load annual chart account list:\n    public getAnnualChartAccountList() { \n        //console.log('I am in getAnnualChartAccountList()!');\n        this._chartListService.getAnnualChartAccountData(\n            this._docDetailsService.getCompNumber(), \n            this._docDetailsService.selectedChartCode,\n            this.selectedOrderLink,\n        ).subscribe(\n        // the first argument is a function which runs on success\n        data => { \n            this.transactions_list = data;\n            //console.log(\"chart data length: \" + this.chartData.length);\n        },\n        // the second argument is a function which runs on error\n        err => console.error(err),\n        // the third argument is a function which runs on completion\n        () => {\n            //console.log('DONE WITH getAnnualChartAccountList() ... ' + this.transactions_list[0].AMOUNT)\n            this.selectedDate = this.transactions_list[0].REPORTDATE;\n            this.selectedAmount = this.transactions_list[0].AMOUNT;\n        }\n    );\n    }\n\n    // to load annual chart account list:\n    public getQuarterlyChartAccountList() { \n        //console.log('I am in getQuarterlyChartAccountList()!');\n        this._chartListService.getQuarterlyChartAccountData(\n            this._docDetailsService.getCompNumber(), \n            this._docDetailsService.selectedChartCode,\n            this.selectedOrderLink,\n        ).subscribe(\n            // the first argument is a function which runs on success\n            data => { \n                this.transactions_list = data;\n                //console.log(\"chart data length: \" + this.chartData.length);\n            },\n            // the second argument is a function which runs on error\n            err => console.error(err),\n            // the third argument is a function which runs on completion\n            () => {\n                //console.log('DONE WITH getAnnualChartAccountList() ... ' + this.transactions_list[0].AMOUNT)\n                this.selectedDate = this.transactions_list[0].REPORTDATE;\n                this.selectedAmount = this.transactions_list[0].AMOUNT;\n            }\n        );\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewAccountDlg.component.ts","module.exports = \"\\n<div>\\n    <label>Show items where: </label><br/>\\n        <iui-combobox #combobox\\n            [items]=\\\"filterOptions\\\" \\n            [controlStyle]=\\\"comboStyle\\\"\\n            [selectedItem]=\\\"selectedOption\\\" \\n            (selectedItemChanged)=\\\"filterOptionChanged($event)\\\"\\n        >\\n            <iui-item *ngFor=\\\"let option of filterOptions\\\" [text]=\\\"option.text\\\"></iui-item>\\n        </iui-combobox> \\n\\n        <input [(ngModel)]=\\\"filterValue\\\" type=\\\"text\\\" style=\\\"width:270px; height:30.5px;\\\"/><br/><br/>\\n\\n        <button class=\\\"trw-ftr-button\\\" (click)=\\\"applyFilter()\\\">Apply Filter</button>\\n        <button class=\\\"trw-ftr-button\\\" (click)=\\\"resetFilter()\\\">Reset</button><br/>   \\n</div>\\n\\n<iui-treeview #treeviewMatched\\n    [items]=\\\"items\\\" \\n    [controlStyle]=\\\"ctrlStyle\\\"          \\n    [virtualMode]=\\\"true\\\"\\n    >\\n    <ng-template let-item>\\n        <span \\n            class=\\\"trw-ftr-inline-block\\\"\\n            (click)=\\\"onItemClick($event, item)\\\"\\n            (afterSelect)=\\\"onAfterSelect($event)\\\"\\n        > {{item.LITERAL}} -- {{item.MAPCODE}}</span>\\n    </ng-template>\\n</iui-treeview>\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatch.component.html\n// module id = ../../../../../src/app/treeView-component/treeViewMatch.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".trv-matched-div {\\n  height: 300px;\\n  color: black;\\n  padding: 4px; }\\n\\n.trw-ftr-normal {\\n  width: 350px;\\n  height: 400px; }\\n\\n.trw-ftr-item-label {\\n  padding: 5px; }\\n\\n.trw-ftr-inline-block {\\n  display: inline-block;\\n  margin: 3px 0; }\\n\\n.trw-ftr-button {\\n  display: inline-block;\\n  margin: 5px;\\n  width: 100px;\\n  height: 25px; }\\n\\n.trw-ftr-cmb {\\n  display: inline-block;\\n  width: 165px;\\n  margin: 0 5px; }\\n\\n.trw-ftr-cmb .iui-combobox-header {\\n  height: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatch.component.scss\n// module id = ../../../../../src/app/treeView-component/treeViewMatch.component.scss\n// module chunks = main","import { Component, ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { IntegralUISelectionMode } from 'integralui/components/integralui.core';\nimport { IntegralUITreeView } from 'integralui/components/integralui.treeview';\n\nimport { ChartListService } from '../chartList-component/chartList.service';\nimport { documentDetailsService } from \"../documentDetails-component/document-details.service\";\n\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Component({\n    selector: 'treeViewMatched',\n    /*\n    The ViewEncapsulation.None allows you to change the component appearance \n    by applying your own custom CSS styles within your app component. \n    This overrides the default CSS styles that are included in component css file. \n    As you may know, by default all Angular components are protected from outside changes of CSS. \n    The ViewEncapsulation.None allows you to override that within your app project, in code.    \n    */\n    encapsulation: ViewEncapsulation.None, \n    templateUrl: './treeViewMatch.component.html',\n    styleUrls: [ './treeViewMatch.component.scss' ],     \n})\n\nexport class TreeViewMatchedComponent {\n    //@ViewChild('application', {read: ViewContainerRef}) applicationRef: ViewContainerRef;\n    @ViewChild('treeviewMatched') treeViewMatched: IntegralUITreeView;\n\n    public items: Array<any> = []; //Gets or Sets a collection of tree items that are assigned to the TreeView.\n    public gMessage: string='';\n    public gToggle: string='1'\n    //public gSelectedChartCode: string = \"AppSettings.CHART_CODE\";\n    public gSelectedChartCode: string = \"\";\n    public title: string;\n    public chartIDList: Array<any> = []; \n    public selMode: IntegralUISelectionMode = IntegralUISelectionMode.MultiExtended;\n    public showLines: boolean=true;\n    public selectedLiteral: string=\"\";\n    public selectedOption: string=\"\";\n    \n    //Filter ...\n    public filterValue: string=\"\";\n    public filterOptions: Array<any> = [];\n\n    \n    public ctrlStyle: any = {\n        general: {\n            normal: 'trv-matched-div'\n        }\n    }\n\n    public treeDataFields: any = {\n        text: 'LITERAL',\n        //id: 'ID',\n        //pid: 'PID',\n    }\n\n    public comboStyle: any = {\n        general: {\n            normal: 'trw-ftr-cmb'\n        }\n    }\n\n    constructor(private cd: ChangeDetectorRef, private _chartListService: ChartListService,\n        private _docDetailsService: documentDetailsService, private http: Http){\n      //console.log(\"inside constructor()!!!\");\n        this.gSelectedChartCode = this._docDetailsService.selectedChartCode;\n        this._docDetailsService.selectedTitle.subscribe((val: string) => {\n            this.title = val.substr(val.indexOf('-')+1, val.length)\n        }); \n    }\n        \n    public ngOnInit(){\n        //console.log(\"code ngAfterViewInit(): \");\n        //setTimeout(() => {\n            this.filterOptions = [\n                { text: ' ' },\n                { text: 'equals' },\n                { text: 'does not equal' },\n                { text: 'begins with' },\n                { text: 'does not begin with' },\n                { text: 'ends with' },\n                { text: 'does not end with' },\n                { text: 'contains' },\n                { text: 'does not contain' }\n            ];  \n        //});\n    } \n\n    public ngAfterViewInit() {\n        //setTimeout(() => {\n            this.selectedOption = this.filterOptions[1];\n            this.getChartIDList();\n            this.loadFromJSON(null);\n        //});\n        /*\n            Hint: detectChanges() forces another change detection cycle for the parent component \n            between the first one and the verification phase. The best place to do it is \n            inside the ngAfterViewInit lifecycle hook as it’s triggered when change detection \n            for all child components have been performed and so they all had possibility to \n            update parent components property        \n        */\n        this.cd.detectChanges(); \n    }\n\n    // to load chart list:\n    private getChartIDList() { \n        //console.log('inside getChartIDList()!');\n        \n        let compNum = this._docDetailsService.getCompNumber();\n        let chartCode = this.gSelectedChartCode;\n        let type = this._docDetailsService.getReportTypeCode(); \n        let formCode = this._docDetailsService.getFormID().getValue();\n        if ((compNum>0) && (chartCode) && (type) && (formCode)) {\n            this._chartListService.getChartIDs(compNum, chartCode,type, formCode).subscribe(\n                // the first argument is a function which runs on success\n                data => { \n                    this.chartIDList = data;\n                },\n                // the second argument is a function which runs on error\n                err => {\n                    console.error(err)\n                }\n                // the third argument is a function which runs on completion\n                //() => console.log('DONE WITH getChartIDList() ... ' + this.chartIDList.length)\n            );\n        }  \n        else {\n            console.log(\"WARNING: Parameter list is not complete in getChartIDList!!!\");\n        } \n    }\n\n    private loadFromJSON(item: any){\n        //console.log(\"inside loadFromJSON()!!\");\n        \n        let originalChartData: any[];\n        let processedChartData: any[];\n\n        this._chartListService.getChartAccountDlgData(\n            this.gSelectedChartCode,\n            this._docDetailsService.getFormID().getValue()\n        ).subscribe(\n            originalChartData => { \n                    // assign the right pid for each account and more ...\n                    //processedChartData = originalChartData;\n                    processedChartData = this.processData(originalChartData);\n\n                    // add processed data to the chart tree\n                    this.addData(processedChartData, item);\n\n                    // save expanded state for TreeView items:\n                    this.saveTreeStatus();\n            },\n        error => console.log(\"error in loadFromJSON: \" + error));\n\n    }\n\n    private processData(data: any) {\n        //console.log('inside processData!!!')\n\n        let vFound: boolean=false;\n        let vLength: number;\n        let vElement: string;\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].pid) {\n\n                vLength = data[i].pid.length;\n                vFound = false;\n                while ((vFound == false) && (vLength > 0)) {\n                    vElement = data[i].pid.substr(0, vLength);\n                    //console.log('inside processData while loop ---> ' + vElement + ' ---> ' + data[i].LITERAL);\n\n                    let newArr = this.chartIDList.filter(function(item){\n                        return item.id === vElement;\n                    });\n                    if (newArr.length > 0) {\n                        data[i].pid = vElement;\n                        vFound = true;\n                        //console.log('Found it !!! ---> ' + data[i].LITERAL + ' ---> ' + vElement + ' ---> ' + vLength);\n                        break;\n                    }\n                    else {\n                        vLength -= 3;\n                    }\n                }    \n                \n            }\n        }           \n\n        return data;\n    }\n    \n    \n    private addData(data: any, item?: any){                \n        //console.log(\"inside addData()!!\");\n        // Load data from JSON into the TreeView as children for specified item\n        this.treeViewMatched.loadData(data, item, this.treeDataFields);\n        \n        // Restore the expanding icon\n        this.treeViewMatched.endLoad(item);\n    \n        // Update the appareance of the TreeView\n        this.treeViewMatched.refresh();\n\n        this.treeViewMatched.collapse();        \n    }    \n\n    private saveTreeStatus() {\n        //console.log(\"inside saveTreeStatus()!!\");\n        if (localStorage){\n            //console.log(\"localStorage created!!!\");\n            // Suspend the TreeView layout to increase performance\n            this.treeViewMatched.suspendLayout();\n           \n            // Use JSON parse method to extract the data from local storage\n            let storedItems = JSON.parse(localStorage.getItem(\"TREE_EXPAND_STATE\"));\n            if (storedItems){\n                // Update the item expanded state from the saved data\n                for (let i = 0; i < storedItems.length; i++){\n                        let item = this.treeViewMatched.findItemById(storedItems[i].id); // id is case sensitive in this line and must keep it lowercase\n                        if (item)\n                            item.expanded = storedItems[i].expanded;\n                }\n            }\n               \n            // Resume and update the layout of TreeView\n            this.treeViewMatched.resumeLayout();\n        }        \n            \n    }\n\n    private onItemClick(e: any, item: any){\n        //console.log(\"Mapcode: \" + item.MAPCODE);\n        this.selectedLiteral = item.LITERAL;\n        this._chartListService.setMapCode(item.MAPCODE);\n        this._chartListService.setLiteral(item.LITERAL);\n\n        // Save expanded state for treeViewMatched items:\n        let savedList: Array<any> = [];\n        let list = this.treeViewMatched.getFullList();\n        for (let i = 0; i < list.length; i++){\n            savedList.push({\n                id: list[i].id,\n                expanded: list[i].expanded\n            });            \n        }\n        if (localStorage)\n            localStorage.setItem(\"TREE_EXPAND_STATE\", JSON.stringify(savedList));\n    }\n\n    applyFilter(){\n        let filterConditions = [];\n        if (this.selectedOption != '' && this.filterValue != ''){\n            let currentOperation = this.getOption(this.selectedOption);\n\n            filterConditions.push({ \n                value: this.filterValue,\n                operation: currentOperation,\n                negative: this.filterOptions.indexOf(this.selectedOption) % 2 == 0\n            });\n        }\n        \n        if (filterConditions.length > 0){\n            let params: any = {\n                allowParent: true,\n                caseSensitive: false\n            }\n\n            params.conditions = filterConditions[0];\n            this.treeViewMatched.filter(params);\n\n            if (filterConditions[0].operation === \"=\") {\n                //console.log(\"condition is: \" + filterConditions[0].operation);\n                this.treeViewMatched.expand();\n                this.scrollToItem(this.selectedLiteral);\n            }\n        }\n        else\n            this.resetFilter();\n\n    }\n    \n    public scrollToItem(aText: string){\n        //console.log(\"scroll to Item: \" + aText);\n        //let item: any = this.treeview.findItemById(item.itemID);\n        let item: any = this.treeViewMatched.findItemByText(aText);\n        if (item){\n            // Use scrollTo method to scroll the view so that the item is visible\n            this.treeViewMatched.scrollTo(item);\n    \n            // Select the item once it is present in current view\n            this.treeViewMatched.selectedItem = item;\n\n            this.selectedLiteral = item.LITERAL;\n            this._chartListService.setMapCode(item.MAPCODE);\n            this._chartListService.setLiteral(item.LITERAL);\n        }\n    }   \n    \n    resetFilter(){    \n        this.filterValue = '';\n        this.selectedOption = this.filterOptions[0];\n        this.treeViewMatched.filter();\n    }\n\n    private getOption(option: any){\n        let index = this.filterOptions.indexOf(option);\n        switch (index){\n            case 1: //equals\n                return '=';\n\n            case 2: //does not equal\n                return '!=';\n\n            case 3: //begins with\n                return '->';\n\n            case 4: //does not begin with\n                return '->';\n\n            case 5: //ends with\n                return '<-';\n\n            case 6: //does not end with\n                return '<-';\n\n            case 7: //contains\n                return '[]';\n\n            case 8: //does not contain\n                return '[]';\n        }\n\n        return '';\n    }    \n    \n    filterOptionChanged(e: any){\n        this.selectedOption = e.item;\n    }\n    \n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatch.component.ts","module.exports = \"<div >\\n    <h1 mat-dialog-title>Select Chart Account</h1> \\n    <div md-dialog-content  style=\\\"width: 505px; font-size: 13px;\\\">\\n\\n        <div>\\n            <treeViewMatched #treeViewMatched></treeViewMatched>\\n        </div>\\n\\n    </div>\\n    <br>\\n</div>\\n<div mat-dialog-actions align=\\\"bottom\\\">\\n    <!--<button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>OK</button>-->\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseConfirm()\\\" cdkFocusInitial >OK</button>  \\n\\n    <!--<button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>OK</button>-->\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onCloseCancel()\\\">Cancel</button>  \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatchedDlg.component.html\n// module id = ../../../../../src/app/treeView-component/treeViewMatchedDlg.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatDialog, MatInput, MatDialogConfig, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'treeViewMatchedDlg',\n  templateUrl: './treeViewMatchedDlg.component.html',\n  styleUrls: [ './treeViewMatch.component.scss' ],     \n})\n\nexport class TreeViewMatchedDialog {\n\n  constructor(private dialogRef: MatDialogRef<MatDialog>) {\n    //console.log(\"I'm in TreeViewMatchedDialog.constructor !!!\")\n  }\n\n  onCloseConfirm() {\n    this.dialogRef.close('ok');\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close('Cancel');\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/app/treeView-component/treeViewMatchedDlg.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport {LicenseManager} from 'ag-grid-enterprise/main';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// for enterprise customers\n// LicenseManager.setLicenseKey(\"your license key\");\nLicenseManager.setLicenseKey(\"ag-Grid_Evaluation_License_Not_For_Production_1Devs20_January_2018__MTUxNjQwNjQwMDAwMA==4091ca44a0ac9c86778d044f42c5edc1\");\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/Prince/Projects/ptm-front/src/main.ts"],"sourceRoot":"webpack:///"}